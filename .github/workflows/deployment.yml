name: Deployment
on:
  push:
    branches:
      - develop
      - master
      - staging
  pull_request:
    branches:
      - develop
      - master
      - staging
  workflow_dispatch:

jobs:
  Build:
    name: React Node.JS Build
    strategy:
      matrix:
        node-version: [20.x]
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{vars.APP_ENV}}
      BASE_URL: ${{vars.BASE_URL}}
      MAIL_PROTOCOL: ${{vars.MAIL_PROTOCOL}}
      MAIL_SMTP_HOST: ${{vars.MAIL_SMTP_HOST}}
      MAIL_SMTP_USER: ${{vars.MAIL_SMTP_USER}}
      MAIL_SMTP_PASSWORD: ${{vars.MAIL_SMTP_PASSWORD}}
      MAIL_TYPE: ${{vars.MAIL_TYPE}}
      MAIL_CHARSET: ${{vars.MAIL_CHARSET}}
      FTP_UPLOAD_DIR: ${{vars.FTP_UPLOAD_DIR}}
      HOST_NAME: ${{secrets.HOST_NAME}}
      HOST_USERNAME: ${{secrets.HOST_USERNAME}}
      HOST_PASSSWORD: ${{secrets.HOST_PASSSWORD}}
      HOST_DATABASE: ${{secrets.HOST_DATABASE}}
      RAZORPAY_TEST_KEY_ID: ${{secrets.RAZORPAY_TEST_KEY_ID}}
      RAZORPAY_TEST_KEY_SECRET: ${{secrets.RAZORPAY_TEST_KEY_SECRET}}
      RAZORPAY_WEBHOOK_SECRET: ${{secrets.RAZORPAY_WEBHOOK_SECRET}}
      RAZORPAY_LIVE_KEY_ID: ${{secrets.RAZORPAY_LIVE_KEY_ID}}
      RAZORPAY_LIVE_KEY_SECRET: ${{secrets.RAZORPAY_LIVE_KEY_SECRET}}
      FTP_SERVER: ${{secrets.FTP_SERVER}}
      FTP_USER: ${{secrets.FTP_USER}}
      FTP_PASSWORD: ${{secrets.FTP_PASSWORD}}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: clean cache
        run: npm cache clean --force
      - name: npm install
        run: npm install
      - name: npm run build
        run: npm run build

  DeployToDev:
    name: Deploy to DEVELOP
    if: github.event.ref == 'refs/heads/develop'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: https://dev.ledgerely.com
    steps:
      - name: Deploy
        run: echo "${{vars.APP_ENV}}"

  DeployToStaging:
    name: Deploy to STAGE
    if: github.event.ref == 'refs/heads/staging'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://stage.ledgerely.com
    steps:
      - name: Deploy
        run: echo "${{vars.APP_ENV}}"

  DeployToProduction:
    name: Deploy to PRODUCTION
    if: github.event.ref == 'refs/heads/master'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://web.ledgerely.com
    steps:
      - name: Deploy
        run: echo "${{vars.APP_ENV}}"
