name: Deployment
on:
  push:
    branches:
      - develop
      - master
      - staging
  pull_request:
    branches:
      - develop
      - master
      - staging
  workflow_dispatch:

env:
  NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  # environment:
  #   name: Select Environment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Select deployment environment
  #       run: |
  #         echo "Running on branch ${{ env.NAME }}"
  #         echo "lala = ${{ secrets.LALA }}"

  build:
    name: React Node.JS Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Select deployment environment
        run: |
          echo "Running on branch ${{ env.NAME }}"
          echo "var = ${{ vars.PRODUCTION_APP_ENV }}"
          echo "secret = ${{ secrets.DEV_HOST_PASSSWORD }}"

      - name: Create .env file
        run: |
          echo "Writing to .env file"
          echo "DB_HOST=localhost" >> abc.txt
          echo "DB_USER=root" >> abc.txt
          echo "DB_PASSWORD=${{ secrets.DEV_HOST_PASSSWORD }}" >> abc.txt
          echo "PRODUCTION_APP_ENV=${{ vars.PRODUCTION_APP_ENV }}" >> abc.txt
          echo ".env file contents:"
          cat abc.txt

      - name: Declaring environment
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref_name }}"
          if [ "${{ inputs.environment }}" != "" ]; then
            echo "env_name=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "develop" ]; then
            echo "env_name=DEVELOP" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "staging" ]; then
            echo "env_name=STAGING" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "master" ]; then
            echo "env_name=PRODUCTION" >> $GITHUB_OUTPUT
          else
            echo "ERROR: The environment is not defined"; exit 1;
          fi

    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: npm

  #     - name: clean cache
  #       run: npm cache clean --force
  #     - name: npm install
  #       run: npm install
  #     - name: Run build
  #       run: |
  #         npm run build
