{"version":3,"sources":["components/shared/D3/ScatterPlot/scatterplot.module.css","components/shared/D3/ScatterPlot/AxisLeft.js","components/shared/D3/ScatterPlot/AxisBottom.js","components/shared/D3/ScatterPlot/index.js"],"names":["module","exports","AxisLeft","_ref","yScale","pixelsPerTick","width","fontSize","fontColor","lineColor","xTicks","range","ticks","useMemo","height","numberOfTicksTarget","Math","floor","map","value","yOffset","_jsx","_Fragment","children","_ref2","_jsxs","transform","concat","shapeRendering","x1","x2","stroke","strokeWidth","style","textAnchor","fill","AxisBottom","xScale","yTicks","d3","format","xOffset","i","y1","y2","Scatterplot","data","marginTop","marginRight","marginBottom","marginLeft","fillColor","markerSize","showTooltip","tooltipPrefix","tooltipSuffix","yAxisLabel","xAxisLabel","showYaxisLabel","showXaxisLabel","showYaxisLine","showXaxisLine","showAnimation","animationClass","boundsWidth","boundsHeight","_useState","useState","_useState2","_slicedToArray","hoveredGroup","setHoveredGroup","domain","min","apply","_toConsumableArray","v","y","max","x","allGroups","d","String","group","colorScale","allShapes","className","styles","scatterplotCircle","dimmed","r","cx","cy","onMouseOver","e","tooltip","html","subGroup","size","pageX","pageY","onMouseLeave","join","defaultProps","scatterPlotChartProps"],"mappings":"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","file":"static/js/6.46aab5a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scatterplotCircle\":\"scatterplot_scatterplotCircle__1qlsx\",\"dimmed\":\"scatterplot_dimmed__2KlUQ\"};","import React, { useMemo } from \"react\";\n\nconst AxisLeft = ({\n  yScale,\n  pixelsPerTick,\n  width,\n  fontSize,\n  fontColor,\n  lineColor,\n  xTicks,\n}) => {\n  const range = yScale.range();\n\n  const ticks = useMemo(() => {\n    const height = range[0] - range[1];\n    const numberOfTicksTarget = Math.floor(height / pixelsPerTick);\n\n    return yScale.ticks(numberOfTicksTarget).map(value => ({\n      value,\n      yOffset: yScale(value),\n    }));\n  }, [yScale]);\n\n  return (\n    <>\n      {ticks.map(({ value, yOffset }) => (\n        <g\n          key={value}\n          transform={`translate(0, ${yOffset})`}\n          shapeRendering={\"crispEdges\"}\n        >\n          <line\n            x1={-xTicks}\n            x2={width + xTicks}\n            stroke={lineColor}\n            strokeWidth={0.5}\n          />\n          <text\n            key={value}\n            style={{\n              fontSize: `${fontSize}px`,\n              textAnchor: \"middle\",\n              transform: \"translateX(-20px)\",\n              fill: fontColor,\n            }}\n          >\n            {value}\n          </text>\n        </g>\n      ))}\n    </>\n  );\n};\n\nexport default AxisLeft;\n","import React, { useMemo } from \"react\";\n\nconst AxisBottom = ({\n  xScale,\n  pixelsPerTick,\n  height,\n  fontSize,\n  fontColor,\n  lineColor,\n  yTicks,\n}) => {\n  const range = xScale.range();\n  const ticks = useMemo(() => {\n    const width = range[1] - range[0];\n    const numberOfTicksTarget = Math.floor(width / pixelsPerTick);\n    return xScale.ticks(numberOfTicksTarget).map(value => ({\n      value: d3.format(\".2s\")(value),\n      xOffset: xScale(value),\n    }));\n  }, [xScale]);\n\n  return (\n    <>\n      {ticks.map(({ value, xOffset }, i) => (\n        <g\n          key={i}\n          transform={`translate(${xOffset}, 0)`}\n          shapeRendering={\"crispEdges\"}\n        >\n          <line\n            y1={yTicks}\n            y2={-height - yTicks}\n            stroke={lineColor}\n            strokeWidth={1}\n          />\n          <text\n            key={value}\n            style={{\n              fontSize: `${fontSize}px`,\n              textAnchor: \"middle\",\n              transform: \"translateY(20px)\",\n              fill: fontColor,\n            }}\n          >\n            {value}\n          </text>\n        </g>\n      ))}\n    </>\n  );\n};\n\nexport default AxisBottom;\n","import * as d3 from \"d3\";\nimport styles from \"./scatterplot.module.css\";\nimport AxisLeft from \"./AxisLeft\";\nimport AxisBottom from \"./AxisBottom\";\nimport React, { useState } from \"react\";\nimport { scatterPlotChartProps } from \"../propsData\";\nimport { tooltip } from \"../constants\";\nimport PropTypes from \"prop-types\";\n\nconst Scatterplot = ({\n  width,\n  height,\n  data,\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n  fillColor,\n  xTicks,\n  yTicks,\n  markerSize,\n  fontSize,\n  fontColor,\n  lineColor,\n  showTooltip,\n  tooltipPrefix,\n  tooltipSuffix,\n  yAxisLabel,\n  xAxisLabel,\n  showYaxisLabel,\n  showXaxisLabel,\n  showYaxisLine,\n  showXaxisLine,\n  showAnimation,\n  animationClass,\n}) => {\n  const boundsWidth = width - marginRight - marginLeft;\n  const boundsHeight = height - marginTop - marginBottom;\n  const [hoveredGroup, setHoveredGroup] = useState(null);\n\n  // Scales\n  const yScale = d3\n    .scaleLinear()\n    .domain([Math.min(...data.map(v => v.y)), Math.max(...data.map(v => v.y))])\n    .range([boundsHeight, 0]);\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, Math.max(...data.map(v => v.x))])\n    .range([0, boundsWidth]);\n  const allGroups = data.map(d => String(d.group));\n  const colorScale = d3.scaleOrdinal().domain(allGroups).range(fillColor);\n\n  // Build the shapes\n  const allShapes = data.map((d, i) => {\n    const className =\n      hoveredGroup && d.group !== hoveredGroup\n        ? styles.scatterplotCircle + \" \" + styles.dimmed\n        : styles.scatterplotCircle;\n\n    return (\n      <circle\n        key={i}\n        r={markerSize}\n        cx={xScale(d.x)}\n        cy={yScale(d.y)}\n        className={`${className} ${showAnimation ? animationClass : \"\"}`}\n        stroke={colorScale(d.group)}\n        fill={colorScale(d.group)}\n        onMouseOver={e => {\n          setHoveredGroup(d.group);\n          if (showTooltip) {\n            tooltip.style(\"padding\", \"5px\");\n            tooltip.style(\"opacity\", 0.9);\n            tooltip\n              .html(\n                `${tooltipPrefix}  ${d.group} → ${d.subGroup} → ${d.size} ${tooltipSuffix}`,\n              )\n              .style(\"left\", e.pageX + 5 + \"px\")\n              .style(\"top\", e.pageY - 30 + \"px\");\n          }\n        }}\n        onMouseLeave={() => {\n          setHoveredGroup(null);\n          tooltip.style(\"padding\", 0);\n          tooltip.style(\"opacity\", 0);\n        }}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        {showYaxisLabel && (\n          <text\n            fontSize={fontSize}\n            x={-height / 2}\n            y='20'\n            fill={fontColor}\n            transform='rotate(270)'\n            style={{ textAnchor: \"middle\" }}\n          >\n            {yAxisLabel}\n          </text>\n        )}\n        <g\n          width={boundsWidth}\n          height={boundsHeight}\n          transform={`translate(${[marginLeft, marginTop].join(\",\")})`}\n        >\n          {showXaxisLine && (\n            <AxisLeft\n              yScale={yScale}\n              pixelsPerTick={yTicks}\n              width={boundsWidth}\n              fontSize={fontSize}\n              fontColor={fontColor}\n              lineColor={lineColor}\n              xTicks={xTicks}\n            />\n          )}\n          <g transform={`translate(0, ${boundsHeight})`}>\n            {showYaxisLine && (\n              <AxisBottom\n                xScale={xScale}\n                pixelsPerTick={yTicks}\n                height={boundsHeight}\n                fontSize={fontSize}\n                fontColor={fontColor}\n                lineColor={lineColor}\n                yTicks={yTicks}\n              />\n            )}\n          </g>\n          {allShapes}\n        </g>\n        {showXaxisLabel && (\n          <text\n            fontSize={fontSize}\n            x={width / 2}\n            y={height - 10}\n            fill={fontColor}\n            style={{ textAnchor: \"start\" }}\n          >\n            {xAxisLabel}\n          </text>\n        )}\n      </svg>\n    </div>\n  );\n};\n\nScatterplot.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n  data: PropTypes.array,\n  fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  xTicks: PropTypes.number,\n  yTicks: PropTypes.number,\n  markerSize: PropTypes.number,\n  fontSize: PropTypes.number,\n  fontColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  lineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  showTooltip: PropTypes.bool,\n  showYaxisLabel: PropTypes.bool,\n  showXaxisLabel: PropTypes.bool,\n  showYaxisLine: PropTypes.bool,\n  showXaxisLine: PropTypes.bool,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  yAxisLabel: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n};\n\nScatterplot.defaultProps = scatterPlotChartProps;\n\nexport default Scatterplot;\n"],"sourceRoot":""}