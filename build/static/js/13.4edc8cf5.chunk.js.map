{"version":3,"sources":["components/shared/D3/PieChart.js","components/shared/D3/constants.js"],"names":["PieChart","props","svgRef","useRef","width","height","tooltipPrefix","tooltipSuffix","fillColor","showTooltip","data","style","fontSize","showXaxisLabel","showYaxisLabel","sortClause","showAnimation","className","onClick","lineColor","useEffect","orderByData","arguments","length","undefined","sort","a","b","value","sortBy","color","d3","domain","range","interpolate","pie","d","arc","innerRadius","outerRadius","Math","min","labelRadius","arcLabel","arcs","sliceProportion","reduce","Number","svg","current","attr","concat","append","selectAll","join","on","i","e","tooltip","html","label","toLocaleString","toFixed","pageX","pageY","centroid","call","text","filter","endAngle","startAngle","JSON","stringify","_jsx","ref","defaultProps","appThemeBgColor","maxWidth","appThemeColor"],"mappings":"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","file":"static/js/13.4edc8cf5.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { appThemeBgColor, tooltip } from \"./constants\";\nimport PropTypes from \"prop-types\";\n\nconst PieChart = props => {\n  const svgRef = useRef(null);\n  const {\n    width,\n    height,\n    tooltipPrefix,\n    tooltipSuffix,\n    fillColor,\n    showTooltip,\n    data,\n    style,\n    fontSize,\n    showXaxisLabel,\n    showYaxisLabel,\n    sortClause,\n    showAnimation,\n    className,\n    onClick,\n    lineColor,\n  } = props;\n\n  const sortBy = (clause = null) => {\n    switch (clause) {\n      case \"desc\":\n        return data.sort((a, b) => b.value - a.value);\n      case \"asc\":\n        return data.sort((a, b) => a.value - b.value);\n      default:\n        return data;\n    }\n  };\n\n  useEffect(() => {\n    const orderByData = sortBy(sortClause);\n\n    // Create the color scale.\n    // const color = d3\n    //   .scaleOrdinal()\n    //   .domain(data.map(d => d.label))\n    //   .range(\n    //     d3\n    //       .quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length)\n    //       .reverse(),\n    //   );\n\n    // const color = () => fillColor;\n    const color = d3\n      .scaleLinear()\n      .domain([0, data.length])\n      .range(fillColor)\n      .interpolate(d3.interpolateHcl);\n\n    // Create the pie layout and arc generator.\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const arc = d3\n      .arc()\n      .innerRadius(0)\n      .outerRadius(Math.min(width, height) / 2 - 1);\n\n    const labelRadius = arc.outerRadius()() * 0.8;\n\n    // A separate arc generator for labels.\n    const arcLabel = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n\n    const arcs = pie(orderByData);\n    const sliceProportion = data.reduce(\n      (a, b) => Number(a) + Number(b.value),\n      0,\n    );\n    // Create the SVG container.\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\n        \"class\",\n        ` ${className} ${\n          showAnimation ? \"animate__animated animate__bounce\" : \"\"\n        } `,\n      )\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n    // Add a sector path for each value.\n    svg\n      .append(\"g\")\n      .attr(\"stroke\", lineColor)\n      .selectAll()\n      .data(arcs)\n      .join(\"path\")\n      .on(\"click\", (d, i) => {\n        onClick(d, i);\n      })\n      .attr(\"fill\", (d, i) => color(i))\n      .style(\"box-shadow\", \"0px 0 10px #000\")\n      .attr(\"d\", arc)\n      .on(\"mousemove\", (e, d) => {\n        if (showTooltip) {\n          tooltip.style(\"padding\", \"5px\");\n          tooltip.style(\"opacity\", 1);\n          tooltip\n            .html(\n              `<div>${tooltipPrefix}</div><div>${\n                d.data.label\n              }</div><div>${d.data.value.toLocaleString(\"en-US\")}</div><div>${(\n                (d.value / sliceProportion) *\n                100\n              ).toFixed(2)}%</div><div>${tooltipSuffix}</div>`,\n            )\n            .style(\"left\", e.pageX + 15 + \"px\")\n            .style(\"top\", e.pageY - 40 + \"px\");\n        }\n      })\n      .on(\"mouseout\", d => {\n        tooltip.style(\"padding\", 0);\n        tooltip.style(\"opacity\", 0);\n      });\n\n    // Create a new arc generator to place a label close to the edge.\n    // The label shows the value if there is enough room.\n    svg\n      .append(\"g\")\n      .attr(\"text-anchor\", \"middle\")\n      .selectAll()\n      .data(arcs)\n      .join(\"text\")\n      .attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`)\n      .call(text =>\n        text\n          .append(\"tspan\")\n          .attr(\"y\", \"-0.4em\")\n          .attr(\"font-weight\", \"bold\")\n          .text(d => (showXaxisLabel ? d.data.label : \"\"))\n          .attr(\"font-size\", fontSize),\n      )\n      .call(text =>\n        text\n          .filter(d => d.endAngle - d.startAngle > 0.25)\n          .append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"y\", \"0.7em\")\n          .attr(\"fill-opacity\", 0.7)\n          .text(d =>\n            showYaxisLabel ? d.data.value.toLocaleString(\"en-US\") : \"\",\n          )\n          .attr(\"font-size\", fontSize),\n      );\n  }, [JSON.stringify(props)]);\n\n  return <svg style={style} ref={svgRef}></svg>;\n};\n\nPieChart.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  fillColor: PropTypes.array,\n  data: PropTypes.array,\n  style: PropTypes.object,\n  fontSize: PropTypes.number,\n  showXaxisLabel: PropTypes.bool,\n  showYaxisLabel: PropTypes.bool,\n  sortClause: PropTypes.string,\n  showAnimation: PropTypes.bool,\n  onClick: PropTypes.func,\n  lineColor: PropTypes.string,\n  className: PropTypes.string,\n};\nPieChart.defaultProps = {\n  width: 200,\n  height: 200,\n  tooltipPrefix: \"\",\n  tooltipSuffix: \"\",\n  showTooltip: true,\n  fillColor: [appThemeBgColor],\n  data: [\n    { label: \"<5\", value: 45000 },\n    { label: \"5-9\", value: 30000 },\n    { label: \"10-14\", value: 40000 },\n    { label: \"15-19\", value: 50000 },\n    { label: \"20-24\", value: 60000 },\n    { label: \"25-29\", value: 70000 },\n    { label: \"30-34\", value: 80000 },\n  ],\n  style: { maxWidth: \"100%\", height: \"auto\" },\n  fontSize: 12,\n  showXaxisLabel: true,\n  showYaxisLabel: true,\n  sortClause: \"\",\n  onClick: () => {},\n  lineColor: \"#555\",\n  showAnimation: true,\n  className: \"\",\n};\n\nexport default PieChart;\n","import * as d3 from \"d3\";\n\nconst appThemeBgColor = \"#c2d82e\";\nconst appThemeColor = \"#000000\";\nconst successColor = \"#198754\";\nconst dangerColor = \"#dc3545\";\nconst warningColor = \"#ffc107\";\nconst infoColor = \"#0dcaf0\";\nconst tooltip = d3\n  .select(\"body\")\n  .append(\"div\")\n  .attr(\"class\", \"tooltip\")\n  .attr(\"role\", \"tooltip\")\n  .style(\"position\", \"absolute\")\n  .style(\"background\", \"#222222\")\n  .style(\"border-radius\", \"5px\")\n  .style(\"color\", \"#ffffff\");\n\nexport {\n  tooltip,\n  appThemeBgColor,\n  appThemeColor,\n  successColor,\n  dangerColor,\n  warningColor,\n  infoColor,\n};\n"],"sourceRoot":""}