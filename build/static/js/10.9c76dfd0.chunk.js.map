{"version":3,"sources":["components/shared/D3/HorizontalBarChart.js","components/shared/D3/constants.js"],"names":["HorizontalBarChart","props","svgRef","useRef","data","width","barHeight","marginTop","marginRight","marginBottom","marginLeft","sortClause","padding","style","fillColor","showTooltip","tooltipPrefix","tooltipSuffix","onClick","fontColor","fontSize","useEffect","height","Math","ceil","length","order","arguments","undefined","d3","_ref","_slicedToArray","value","d","label","_ref3","map","sortBy","x","domain","range","y","rangeRound","svg","current","attr","append","selectAll","join","on","i","tooltip","html","concat","pageX","pageY","bandwidth","text","call","filter","g","select","remove","tickSizeOuter","_jsx","ref","defaultProps","Array","fill","_","Number","random","toFixed","appThemeBgColor","appThemeColor","successColor","dangerColor"],"mappings":"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","file":"static/js/10.9c76dfd0.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { appThemeBgColor, tooltip } from \"./constants\";\nimport PropTypes from \"prop-types\";\n\nconst HorizontalBarChart = props => {\n  const svgRef = useRef(null);\n  const {\n    data,\n    width,\n    barHeight,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    sortClause,\n    padding,\n    style,\n    fillColor,\n    showTooltip,\n    tooltipPrefix,\n    tooltipSuffix,\n    onClick,\n    fontColor,\n    fontSize,\n  } = props;\n\n  const sortBy = (clause = null) => {\n    switch (clause) {\n      case \"desc\":\n        return d3.groupSort(\n          data,\n          ([d]) => -d.value,\n          d => d.label,\n        );\n      case \"asc\":\n        return d3.groupSort(\n          data,\n          ([d]) => d.value,\n          d => d.label,\n        );\n      default:\n        return data.map(d => d.label);\n    }\n  };\n\n  useEffect(() => {\n    const height =\n      Math.ceil((data.length + 0.1) * barHeight) + marginTop + marginBottom;\n    const order = sortBy(sortClause);\n\n    // Create the scales.\n    const x = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.value)])\n      .range([marginLeft, width - marginRight]);\n\n    const y = d3\n      .scaleBand()\n      .domain(order)\n      .rangeRound([marginTop, height - marginBottom])\n      .padding(padding);\n\n    // Create the SVG container.\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height])\n      .attr(\"style\", style);\n\n    // Append a rect for each label.\n    svg\n      .append(\"g\")\n      .attr(\"fill\", fillColor)\n      .selectAll()\n      .data(data)\n      .join(\"rect\")\n      .on(\"click\", (d, i) => {\n        onClick(d, i);\n      })\n      .on(\"mousemove\", (d, i) => {\n        if (showTooltip) {\n          tooltip.style(\"opacity\", 1);\n          tooltip\n            .html(`${tooltipPrefix} ${i.value} ${tooltipSuffix}`)\n            .style(\"left\", d.pageX + 5 + \"px\")\n            .style(\"top\", d.pageY - 30 + \"px\");\n        }\n      })\n      .on(\"mouseout\", d => {\n        tooltip.style(\"opacity\", 0);\n      })\n      .attr(\"x\", x(0))\n      .attr(\"y\", d => y(d.label))\n      .attr(\"width\", d => x(d.value) - x(0))\n      .attr(\"height\", y.bandwidth());\n\n    // Append a label for each label.\n    svg\n      .append(\"g\")\n      .attr(\"fill\", fontColor)\n      .attr(\"text-anchor\", \"end\")\n      .selectAll()\n      .data(data)\n      .join(\"text\")\n      .attr(\"x\", d => x(d.value))\n      .attr(\"y\", d => y(d.label) + y.bandwidth() / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"dx\", -4)\n      .text(d => d.value)\n      .attr(\"font-size\", fontSize)\n      .call(text =>\n        text\n          .filter(d => x(d.value) - x(0) < 20) // short bars\n          .attr(\"dx\", +4)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\"),\n      );\n\n    // Create the axes.\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${marginTop})`)\n      .call(d3.axisTop(x))\n      .call(g => g.select(\".domain\").remove())\n      .selectAll(\"text\")\n      .attr(\"font-size\", fontSize);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y).tickSizeOuter(0))\n      .selectAll(\"text\")\n      .attr(\"font-size\", fontSize);\n  }, []);\n  return <svg ref={svgRef} />;\n};\n\nHorizontalBarChart.propTypes = {\n  width: PropTypes.number,\n  barHeight: PropTypes.number,\n  data: PropTypes.array,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n  sortClause: PropTypes.string,\n  padding: PropTypes.number,\n  style: PropTypes.string,\n  fillColor: PropTypes.string,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  onClick: PropTypes.func,\n  fontColor: PropTypes.string,\n  fontSize: PropTypes.number,\n};\nHorizontalBarChart.defaultProps = {\n  width: 928,\n  barHeight: 30,\n  data: new Array(10).fill(\"_\").map((_, i) => ({\n    label: `C${i + 1}`,\n    value: Number((Math.random() * 100).toFixed(2)),\n  })),\n  marginTop: 30,\n  marginRight: 0,\n  marginBottom: 10,\n  marginLeft: 60,\n  sortClause: \"\",\n  padding: 0.01,\n  style:\n    \"max-width: 100%; height: auto; box-shadow: 0px 0 10px #000; border-radius: 10px;\",\n  fillColor: appThemeBgColor,\n  tooltipPrefix: \"\",\n  tooltipSuffix: \"\",\n  showTooltip: true,\n  onClick: () => {},\n  fontColor: \"#000\",\n  fontSize: 18,\n};\n\nexport default HorizontalBarChart;\n","import * as d3 from \"d3\";\n\nconst appThemeBgColor = \"#c2d82e\";\nconst appThemeColor = \"#000000\";\nconst successColor = \"#198754\";\nconst dangerColor = \"#dc3545\";\nconst warningColor = \"#ffc107\";\nconst infoColor = \"#0dcaf0\";\nconst tooltip = d3\n  .select(\"body\")\n  .append(\"div\")\n  .attr(\"class\", \"tooltip\")\n  .attr(\"role\", \"tooltip\")\n  .style(\"position\", \"absolute\")\n  .style(\"background\", \"#222222\")\n  .style(\"padding\", \"5px\")\n  .style(\"border-radius\", \"5px\")\n  .style(\"color\", \"#ffffff\");\n\nexport {\n  tooltip,\n  appThemeBgColor,\n  appThemeColor,\n  successColor,\n  dangerColor,\n  warningColor,\n  infoColor,\n};\n"],"sourceRoot":""}