{"version":3,"sources":["components/shared/D3/ZoomableCirclePackingChart.js"],"names":["ZoomableCirclePackingChart","props","svgRef","useRef","width","height","style","fillColor","fontColor","padding","tooltipPrefix","tooltipSuffix","showTooltip","fontSize","animationDuration","showAnimation","onClick","data","useEffect","color","d3","domain","range","interpolate","root","size","sum","d","value","sort","a","b","pack","svg","current","attr","concat","selectAll","remove","node","append","descendants","slice","join","children","depth","on","i","this","tooltip","html","pageX","pageY","event","focus","stopPropagation","zoom","label","parent","text","view","zoomTo","v","k","x","y","r","transition","duration","altKey","tween","t","filter","display","JSON","stringify","_jsx","ref","defaultProps","zoomableCirclePackingChartProps"],"mappings":"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","file":"static/js/18.72510a71.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { tooltip } from \"./constants\";\nimport { zoomableCirclePackingChartProps } from \"./propsData\";\nimport PropTypes from \"prop-types\";\n\nconst ZoomableCirclePackingChart = props => {\n  const svgRef = useRef(null);\n  const {\n    width,\n    height,\n    style,\n    fillColor,\n    fontColor,\n    padding,\n    tooltipPrefix,\n    tooltipSuffix,\n    showTooltip,\n    fontSize,\n    animationDuration,\n    showAnimation,\n    onClick,\n    data,\n  } = props;\n\n  useEffect(() => {\n    // Create the color scale.\n    const color = d3\n      .scaleLinear()\n      .domain([0, 5])\n      .range(fillColor)\n      .interpolate(d3.interpolateHcl);\n\n    // Compute the layout.\n    const pack = data =>\n      d3.pack().size([width, height]).padding(padding)(\n        d3\n          .hierarchy(data)\n          .sum(d => d.value)\n          .sort((a, b) => b.value - a.value),\n      );\n    const root = pack(data);\n\n    // Create the SVG container.\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    // Append the nodes.\n    svg.selectAll(`g`).remove();\n    const node = svg\n      .append(\"g\")\n      .selectAll(\"circle\")\n      .data(root.descendants().slice(1))\n      .join(\"circle\")\n      .attr(\"fill\", d => (d.children ? color(d.depth) : \"white\"))\n      .attr(\"pointer-events\", d => (!d.children ? \"none\" : null))\n      .on(\"mouseover\", function (d, i) {\n        d3.select(this).attr(\"stroke\", fillColor[0]).attr(\"stroke-width\", \"3\");\n        if (showTooltip) {\n          tooltip.style(\"padding\", \"5px\");\n          tooltip.style(\"opacity\", 1);\n          tooltip\n            .html(`${tooltipPrefix} ${i.value} ${tooltipSuffix}`)\n            .style(\"left\", d.pageX + 5 + \"px\")\n            .style(\"top\", d.pageY - 30 + \"px\");\n        }\n      })\n      .on(\"mouseout\", function () {\n        d3.select(this).attr(\"stroke\", null);\n        tooltip.style(\"padding\", 0);\n        tooltip.style(\"opacity\", 0);\n      })\n      .on(\"click\", (event, d) => {\n        if (focus !== d) {\n          event.stopPropagation();\n          zoom(event, d);\n          onClick(event, d);\n        }\n      });\n\n    // Append the text labels.\n    const label = svg\n      .append(\"g\")\n      .style(\"font\", fontSize + \"px sans-serif\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n      .selectAll(\"text\")\n      .data(root.descendants())\n      .join(\"text\")\n      .style(\"fill-opacity\", d => (d.parent === root ? 1 : 0))\n      .style(\"display\", d => (d.parent === root ? \"inline\" : \"none\"))\n      .text(d => d.data.label)\n      .attr(\"fill\", fontColor);\n\n    svg.on(\"click\", event => zoom(event, root));\n    let focus = root;\n    let view;\n    zoomTo([focus.x, focus.y, focus.r * 2]);\n\n    function zoomTo(v) {\n      const k = width / v[2];\n\n      view = v;\n\n      label.attr(\n        \"transform\",\n        d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`,\n      );\n      node.attr(\n        \"transform\",\n        d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`,\n      );\n      node.attr(\"r\", d => d.r * k);\n    }\n\n    function zoom(event, d) {\n      focus = d;\n\n      const transition = svg\n        .transition()\n        .duration(showAnimation ? (event.altKey ? 7500 : animationDuration) : 0)\n        .tween(\"zoom\", d => {\n          const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n          return t => zoomTo(i(t));\n        });\n\n      label\n        .filter(function (d) {\n          return d.parent === focus || this.style.display === \"inline\";\n        })\n        .transition(transition)\n        .style(\"fill-opacity\", d => (d.parent === focus ? 1 : 0))\n        .on(\"start\", function (d) {\n          if (d.parent === focus) this.style.display = \"inline\";\n        })\n        .on(\"end\", function (d) {\n          if (d.parent !== focus) this.style.display = \"none\";\n        });\n    }\n  }, [JSON.stringify(props)]);\n\n  return <svg style={style} ref={svgRef} />;\n};\n\nZoomableCirclePackingChart.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  style: PropTypes.object,\n  fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  fontColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  padding: PropTypes.number,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  fontSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  showAnimation: PropTypes.bool,\n  onClick: PropTypes.func,\n  data: PropTypes.object,\n};\nZoomableCirclePackingChart.defaultProps = zoomableCirclePackingChartProps;\n\nexport default ZoomableCirclePackingChart;\n"],"sourceRoot":""}