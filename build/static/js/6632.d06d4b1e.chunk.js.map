{"version":3,"file":"static/js/6632.d06d4b1e.chunk.js","mappings":"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","sources":["components/GlobalHeader/queryParamHook.js","components/creditCard/creditCardIndex.js"],"sourcesContent":["import { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useQuery = () => {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search), [search]);\n};\n\nexport { useQuery };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PageHeader from \"../shared/PageHeader\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport apiInstance from \"../../services/apiServices\";\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport FilterSelect from \"../configuration/backend/FormElements/FilterSelect\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport Loader from \"../resuable/Loader\";\nimport BackendCore from \"../configuration/backend/BackendCore\";\nimport { useQuery } from \"../GlobalHeader/queryParamHook\";\nimport { crudFormArray } from \"../configuration/backendTableConfig\";\nimport { LocaleContext } from \"../../contexts/LocaleContext\";\nimport { UpgradeHeading, UpgradeContent } from \"../payment/Upgrade\";\nimport { MyAlertContext } from \"../../contexts/AlertContext\";\nimport { currencyList, localeTagList } from \"../../helpers/static\";\n\nconst CreditCardContext = React.createContext(undefined);\n\nconst CreditCard = () => {\n  const intl = useIntl();\n  const globalContext = useContext(GlobalContext);\n  document.title = `${globalContext.appName} - ${intl.formatMessage({\n    id: \"creditCard\",\n    defaultMessage: \"creditCard\",\n  })}`;\n  const userContext = useContext(UserContext);\n  const localeContext = useContext(LocaleContext);\n  const myAlertContext = useContext(MyAlertContext);\n  const [init, setInit] = useState(false);\n  const [ajaxStatus, setAjaxStatus] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const [cCList, setCcList] = useState({});\n  const [selection, setSelection] = useState({\n    creditCard: \"\",\n    startDate: moment().startOf(\"month\").toDate(),\n    endDate: moment().endOf(\"month\").toDate(),\n  });\n  const [ccData, setCcData] = useState({});\n  const defApiParam = {\n    start: 0,\n    limit: 10,\n    searchString: \"\",\n  };\n  const [apiParams, setApiParams] = useState(defApiParam);\n  const [ccApiParams, setCcApiParams] = useState(defApiParam);\n\n  const master = {\n    config: {\n      header: {\n        searchPlaceholder: intl.formatMessage({\n          id: \"searchHere\",\n          defaultMessage: \"searchHere\",\n        }),\n        searchable: true,\n      },\n      footer: {\n        total: {\n          title: intl.formatMessage({ id: \"total\", defaultMessage: \"total\" }),\n          maxDecimal: 2,\n        },\n        pagination: {\n          currentPage: \"first\",\n          maxPagesToShow: 5,\n        },\n      },\n    },\n    id: \"cCTable\",\n    Table: \"creditCardTrx\",\n    TableRows: [\n      \"cc_transaction\",\n      \"cc_date\",\n      \"credit_card_name\",\n      \"cc_payment_credits\",\n      \"cc_purchases\",\n      \"cc_taxes_interest\",\n      \"cc_comments\",\n    ],\n    TableAliasRows: [\n      intl.formatMessage({ id: \"name\", defaultMessage: \"name\" }),\n      intl.formatMessage({\n        id: \"date\",\n        defaultMessage: \"date\",\n      }),\n      intl.formatMessage({\n        id: \"creditCard\",\n        defaultMessage: \"creditCard\",\n      }),\n      intl.formatMessage({ id: \"credits\", defaultMessage: \"credits\" }),\n      intl.formatMessage({ id: \"purchases\", defaultMessage: \"purchases\" }),\n      intl.formatMessage({ id: \"interest\", defaultMessage: \"interest\" }),\n      intl.formatMessage({ id: \"comments\", defaultMessage: \"comments\" }),\n    ],\n    defaultValues: [],\n    rowElements: [\n      \"label\",\n      \"label\",\n      \"label\",\n      \"label\",\n      \"label\",\n      \"label\",\n      \"label\",\n    ],\n  };\n\n  const getCcList = async () => {\n    setLoader(true);\n    const formdata = new FormData();\n    formdata.append(\"appId\", userContext.userConfig.appId);\n    return apiInstance\n      .post(\"/account_planner/credit_card_list\", formdata)\n      .then(res => {\n        setCcList(res.data.response);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => setLoader(false));\n  };\n\n  const getCcTrxTable = () => {\n    const formdata = new FormData();\n    formdata.append(\"limit\", ccApiParams.limit);\n    formdata.append(\"start\", ccApiParams.start);\n    formdata.append(\"searchString\", ccApiParams.searchString);\n    formdata.append(\n      \"TableRows\",\n      `a.cc_transaction, a.cc_date, d.credit_card_name, a.cc_payment_credits, a.cc_purchases, a.cc_taxes_interest, a.cc_comments`,\n    );\n    formdata.append(\"Table\", \"creditCardTrx\");\n    formdata.append(\n      \"WhereClause\",\n      `a.cc_appId = '${userContext.userConfig.appId}' && a.cc_for_card = '${\n        selection.creditCard\n      }' && d.credit_card_appId = '${\n        userContext.userConfig.appId\n      }' && a.cc_date >= '${moment(selection.startDate)\n        .format(\"YYYY-MM-DD\")\n        .toString()}' && a.cc_date <= '${moment(selection.endDate)\n        .format(\"YYYY-MM-DD\")\n        .toString()}'`,\n    );\n    return apiInstance.post(\"/account_planner/getAccountPlanner\", formdata);\n  };\n\n  const onGenerate = cb => {\n    setAjaxStatus(true);\n    setCcData({});\n    setTimeout(() => {\n      const a = getCcTrxTable();\n      Promise.all([a])\n        .then(r => {\n          setCcData(r[0].data.response);\n          typeof cb === \"function\" && cb();\n        })\n        .catch(e => console.log(\"bbb\", e))\n        .finally(() => {\n          setAjaxStatus(false);\n          setInit(true);\n        });\n    }, 100);\n  };\n\n  useEffect(() => {\n    getCcList();\n  }, []);\n\n  const onChangeParams = obj => {\n    setApiParams(prev => ({\n      ...prev,\n      ...obj,\n    }));\n  };\n\n  useEffect(() => {\n    fetchCcMaster();\n  }, [apiParams]);\n  /*\n   * Query params landing feature starts\n   */\n  const searchParams = useQuery();\n  const params = {\n    fetch: searchParams.get(\"fetch\"),\n    creditCardId: searchParams.get(\"creditCardId\"),\n    startDate: searchParams.get(\"startDate\"),\n    endDate: searchParams.get(\"endDate\"),\n  };\n  const [paramCcFetch, setParamCcFetch] = useState(false);\n\n  useEffect(() => {\n    if (params.fetch === \"creditCard\" && params.creditCardId) {\n      setParamCcFetch(true);\n      setSelection(prev => ({\n        ...prev,\n        creditCard: params.creditCardId,\n        startDate: moment(params.startDate).toDate(),\n        endDate: moment(params.endDate).toDate(),\n      }));\n      setCcApiParams(defApiParam);\n    }\n  }, [JSON.stringify(params)]);\n\n  useEffect(() => {\n    if (\n      params.fetch === \"creditCard\" &&\n      selection.creditCard &&\n      selection.startDate &&\n      selection.endDate &&\n      paramCcFetch\n    ) {\n      onGenerate(() => {\n        setParamCcFetch(false);\n        setTimeout(() => {\n          document.getElementById(\"ccTable\")?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"start\",\n          });\n        }, 200);\n      });\n    }\n  }, [JSON.stringify(params), selection.creditCard, paramCcFetch]);\n\n  /*\n   * Query params landing feature ends\n   */\n\n  const LoaderComp = () => {\n    return (\n      <div className='relativeSpinner'>\n        <Loader />\n      </div>\n    );\n  };\n  const cCFields = [\n    \"id\",\n    \"name\",\n    \"last4DigitCardNo\",\n    \"startDate\",\n    \"endDate\",\n    \"payDate\",\n    \"annuaInterestRate\",\n    \"localeLanguage\",\n    \"localeCurrency\",\n  ];\n  const rElements = [\n    \"checkbox\",\n    \"textbox\",\n    \"textbox\",\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n    {\n      fetch: {\n        dropDownList: localeTagList,\n      },\n      searchable: true,\n    },\n    {\n      fetch: {\n        dropDownList: currencyList,\n      },\n      searchable: true,\n    },\n  ];\n  const cCCoreOptions = crudFormArray\n    .filter(f => f.id === \"creditCardAccounts\")\n    .map(crud => {\n      const obj = {\n        header: {\n          searchPlaceholder: intl.formatMessage({\n            id: \"searchHere\",\n            defaultMessage: \"searchHere\",\n          }),\n          searchable: true,\n        },\n        footer: {\n          total: {\n            locale: localeContext.localeLanguage,\n            currency: localeContext.localeCurrency,\n            maxDecimal: 2,\n          },\n          pagination: {\n            currentPage: \"last\",\n            maxPagesToShow: 5,\n          },\n        },\n      };\n      crud.config = obj;\n      crud.TableAliasRows = cCFields.map(al =>\n        intl.formatMessage({ id: al, defaultMessage: al }),\n      );\n      crud.rowElements = rElements;\n      return crud;\n    })[0];\n\n  const getBackendAjax = (Table, TableRows) => {\n    const formdata = new FormData();\n    formdata.append(\"TableRows\", TableRows);\n    formdata.append(\"Table\", Table);\n    formdata.append(\"limit\", apiParams.limit);\n    formdata.append(\"start\", apiParams.start);\n    formdata.append(\"searchString\", apiParams.searchString);\n    formdata.append(\"appId\", userContext.userConfig.appId);\n    return apiInstance.post(\"/account_planner/getAccountPlanner\", formdata);\n  };\n\n  const [dbData, setDbData] = useState([]);\n  const fetchCcMaster = () => {\n    setDbData([]);\n    const a = getBackendAjax(cCCoreOptions.Table, cCCoreOptions.TableRows);\n    Promise.all([a]).then(async r => {\n      setDbData(r[0].data.response);\n    });\n  };\n\n  const onPostApi = (response, id) => {\n    const { status, data } = response;\n    if (status === 200) {\n      if (\n        response &&\n        data &&\n        typeof data.response === \"boolean\" &&\n        data.response !== null &&\n        data.response\n      ) {\n        userContext.renderToast({\n          message: intl.formatMessage({\n            id: \"transactionSavedSuccessfully\",\n            defaultMessage: \"transactionSavedSuccessfully\",\n          }),\n        });\n      }\n      if (\n        response &&\n        data &&\n        typeof data.response === \"boolean\" &&\n        data.response !== null &&\n        data.response === false\n      ) {\n        userContext.renderToast({\n          type: \"error\",\n          icon: \"fa fa-times-circle\",\n          message: intl.formatMessage({\n            id: \"noFormChangeFound\",\n            defaultMessage: \"noFormChangeFound\",\n          }),\n        });\n      }\n      if (response && data && data.response === null) {\n        myAlertContext.setConfig({\n          show: true,\n          className: \"alert-danger border-0 text-dark\",\n          type: \"danger\",\n          dismissible: true,\n          heading: <UpgradeHeading />,\n          content: <UpgradeContent />,\n        });\n      }\n      if (\n        response &&\n        data &&\n        typeof data.response === \"object\" &&\n        data.response !== null\n      ) {\n        let intlKey;\n        switch (data.response.number) {\n          case 1451:\n            intlKey = \"foreignKeyDeleteMessage\";\n            break;\n          default:\n            intlKey = \"\";\n        }\n        userContext.renderToast({\n          type: \"error\",\n          icon: \"fa fa-times-circle\",\n          message: intl.formatMessage({\n            id: intlKey,\n            defaultMessage: intlKey,\n          }),\n        });\n      }\n    } else {\n      userContext.renderToast({\n        type: \"error\",\n        icon: \"fa fa-times-circle\",\n        message: intl.formatMessage({\n          id: \"unableToReachServer\",\n          defaultMessage: \"unableToReachServer\",\n        }),\n      });\n    }\n  };\n\n  const onChangeCcParams = obj => {\n    setCcApiParams(prev => ({\n      ...prev,\n      ...obj,\n    }));\n  };\n\n  useEffect(() => {\n    if (init) {\n      onGenerate();\n    }\n  }, [ccApiParams, init]);\n\n  return (\n    <CreditCardContext.Provider value={{ cCList, selection }}>\n      <Container fluid className='pb-5'>\n        <PageHeader icon='fa fa-credit-card' intlId='creditCard' />\n        {loader ? (\n          <LoaderComp />\n        ) : (\n          <>\n            {dbData && Object.keys(dbData)?.length > 0 && (\n              <>\n                <BackendCore\n                  className='pt-3'\n                  config={cCCoreOptions.config}\n                  Table={cCCoreOptions.Table}\n                  TableRows={cCCoreOptions.TableRows}\n                  TableAliasRows={cCCoreOptions.TableAliasRows}\n                  rowElements={cCCoreOptions.rowElements}\n                  defaultValues={cCCoreOptions.defaultValues}\n                  dbData={dbData}\n                  postApiUrl='/account_planner/postAccountPlanner'\n                  onPostApi={response => onPostApi(response, cCCoreOptions.id)}\n                  apiParams={apiParams}\n                  onChangeParams={obj => onChangeParams(obj)}\n                  onReFetchData={() => fetchCcMaster()}\n                  cellWidth={cCCoreOptions.cellWidth}\n                  ajaxButtonName={intl.formatMessage({\n                    id: \"submit\",\n                    defaultMessage: \"submit\",\n                  })}\n                  appIdKeyValue={{\n                    key: \"credit_card_appId\",\n                    value: userContext.userConfig.appId,\n                  }}\n                  theme={userContext.userData.theme}\n                />\n              </>\n            )}\n            <Row\n              className={`align-items-center ${\n                !Object.keys(ccData).length > 0 ? \"pb-5\" : \"\"\n              }`}\n            >\n              <Col sm={3} className='react-responsive-ajax-data-table pb-2'>\n                <FilterSelect\n                  placeholder={`${intl.formatMessage({\n                    id: \"select\",\n                    defaultMessage: \"select\",\n                  })} ${intl.formatMessage({\n                    id: \"creditCard\",\n                    defaultMessage: \"creditCard\",\n                  })}`}\n                  onChange={(ind, value, pKey) => {\n                    setSelection(prev => ({ ...prev, creditCard: value }));\n                  }}\n                  element={{\n                    fetch: {\n                      dropDownList: cCList.map(row => ({\n                        id: row.id,\n                        value: row.value,\n                      })),\n                    },\n                    searchable: true,\n                  }}\n                  value={selection.creditCard}\n                  type={\"single\"}\n                  searchable={true}\n                  theme={userContext.userData.theme}\n                />\n              </Col>\n              <Col\n                sm={3}\n                className='d-flex align-items-center justify-content-between pb-2'\n              >\n                <span>\n                  <FormattedMessage id='startDate' defaultMessage='startDate' />\n                </span>\n                <DateTimePicker\n                  className='bg-white text-dark'\n                  value={selection.startDate}\n                  format='yyyy-MM-dd'\n                  clearIcon={null}\n                  onChange={value => {\n                    setSelection(prev => ({ ...prev, startDate: value }));\n                  }}\n                  // minDate={moment().subtract(1, \"year\").toDate()}\n                  maxDate={new Date()}\n                  onKeyDown={e => {\n                    e.preventDefault();\n                  }}\n                />\n              </Col>\n              <Col\n                sm={3}\n                className='d-flex align-items-center justify-content-between pb-2'\n              >\n                <span>\n                  <FormattedMessage id='endDate' defaultMessage='endDate' />\n                </span>\n                <DateTimePicker\n                  className='bg-white text-dark'\n                  value={selection.endDate}\n                  format='yyyy-MM-dd'\n                  clearIcon={null}\n                  onChange={value => {\n                    setSelection(prev => ({ ...prev, endDate: value }));\n                  }}\n                  // minDate={moment().subtract(1, \"year\").toDate()}\n                  maxDate={new Date()}\n                  onKeyDown={e => {\n                    e.preventDefault();\n                  }}\n                />\n              </Col>\n              <Col sm={3} className='pb-2'>\n                <button\n                  className='btn btn-sm btn-bni w-100 border-0'\n                  onClick={() => onGenerate()}\n                  disabled={!selection.creditCard}\n                >\n                  <FormattedMessage id='generate' defaultMessage='generate' />\n                </button>\n              </Col>\n            </Row>\n          </>\n        )}\n        {ajaxStatus && <LoaderComp />}\n        {ccData && Object.keys(ccData).length > 0 && (\n          <>\n            <div className='py-2'>\n              <span\n                className={`badge ${\n                  userContext.userData.theme === \"dark\"\n                    ? \"bg-secondary text-white\"\n                    : \"bg-light text-dark\"\n                }`}\n              >\n                {intl.formatMessage({\n                  id: \"creditCardTransactions\",\n                  defaultMessage: \"creditCardTransactions\",\n                })}\n              </span>\n            </div>\n            <BackendCore\n              id={master.id}\n              config={master.config}\n              Table={master.Table}\n              TableRows={master.TableRows}\n              TableAliasRows={master.TableAliasRows}\n              rowElements={master.rowElements}\n              defaultValues={master.defaultValues}\n              dbData={ccData}\n              cellWidth={[20, 10, 10, 10, 10, 10, 10]}\n              theme={userContext.userData.theme}\n              apiParams={ccApiParams}\n              onChangeParams={obj => onChangeCcParams(obj)}\n            />\n          </>\n        )}\n        {Object.keys(ccData).length === 0 && init && !ajaxStatus && (\n          <div className='text-center py-2'>\n            <i className='fa fa-archive' />\n            <FormattedMessage id='noRecordsGenerated' defaultMessage=' ' />\n          </div>\n        )}\n      </Container>\n    </CreditCardContext.Provider>\n  );\n};\n\nexport default CreditCard;\n"],"names":["useQuery","search","useLocation","useMemo","URLSearchParams","CreditCardContext","React","undefined","CreditCard","_Object$keys","intl","useIntl","globalContext","useContext","GlobalContext","document","title","appName","formatMessage","id","defaultMessage","userContext","UserContext","localeContext","LocaleContext","myAlertContext","MyAlertContext","init","setInit","useState","ajaxStatus","setAjaxStatus","loader","setLoader","cCList","setCcList","selection","setSelection","creditCard","startDate","moment","startOf","toDate","endDate","endOf","ccData","setCcData","defApiParam","start","limit","searchString","apiParams","setApiParams","ccApiParams","setCcApiParams","master","config","header","searchPlaceholder","searchable","footer","total","maxDecimal","pagination","currentPage","maxPagesToShow","Table","TableRows","TableAliasRows","defaultValues","rowElements","onGenerate","cb","setTimeout","a","getCcTrxTable","formdata","FormData","append","userConfig","appId","format","toString","apiInstance","post","Promise","all","then","r","data","response","catch","e","console","log","finally","useEffect","async","res","error","getCcList","fetchCcMaster","searchParams","params","fetch","get","creditCardId","paramCcFetch","setParamCcFetch","prev","JSON","stringify","_document$getElementB","getElementById","scrollIntoView","behavior","block","inline","LoaderComp","_jsx","className","children","Loader","cCFields","rElements","dropDownList","localeTagList","currencyList","cCCoreOptions","crudFormArray","filter","f","map","crud","obj","locale","localeLanguage","currency","localeCurrency","al","dbData","setDbData","getBackendAjax","Provider","value","_jsxs","Container","fluid","PageHeader","icon","intlId","_Fragment","Object","keys","length","BackendCore","postApiUrl","onPostApi","status","renderToast","message","type","setConfig","show","dismissible","heading","UpgradeHeading","content","UpgradeContent","intlKey","number","onChangeParams","onReFetchData","cellWidth","ajaxButtonName","appIdKeyValue","key","theme","userData","Row","Col","sm","FilterSelect","placeholder","onChange","ind","pKey","element","row","FormattedMessage","DateTimePicker","clearIcon","maxDate","Date","onKeyDown","preventDefault","onClick","disabled","onChangeCcParams"],"sourceRoot":""}