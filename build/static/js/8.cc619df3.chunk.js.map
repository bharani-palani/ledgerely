{"version":3,"sources":["components/shared/D3/HorizontalBarChart.js"],"names":["HorizontalBarChart","props","svgRef","useRef","data","width","barHeight","marginTop","marginRight","marginBottom","marginLeft","sortClause","padding","style","fillColor","lineColor","showTooltip","tooltipPrefix","tooltipSuffix","onClick","fontColor","fontSize","showAnimation","animationDuration","useEffect","height","Math","ceil","length","order","arguments","undefined","d3","_ref","_slicedToArray","value","d","label","_ref3","map","sortBy","x","domain","range","y","rangeRound","svg","current","attr","selectAll","remove","append","join","on","i","tooltip","html","concat","pageX","pageY","transition","duration","bandwidth","delay","text","call","filter","g","select","tickSizeOuter","JSON","stringify","_jsx","ref","defaultProps","horizontalBarChartProps"],"mappings":"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","file":"static/js/8.cc619df3.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { tooltip } from \"./constants\";\nimport PropTypes from \"prop-types\";\nimport { horizontalBarChartProps } from \"./propsData\";\n\nconst HorizontalBarChart = props => {\n  const svgRef = useRef(null);\n  const {\n    data,\n    width,\n    barHeight,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    sortClause,\n    padding,\n    style,\n    fillColor,\n    lineColor,\n    showTooltip,\n    tooltipPrefix,\n    tooltipSuffix,\n    onClick,\n    fontColor,\n    fontSize,\n    showAnimation,\n    animationDuration,\n  } = props;\n\n  const sortBy = (clause = null) => {\n    switch (clause) {\n      case \"desc\":\n        return d3.groupSort(\n          data,\n          ([d]) => -d.value,\n          d => d.label,\n        );\n      case \"asc\":\n        return d3.groupSort(\n          data,\n          ([d]) => d.value,\n          d => d.label,\n        );\n      default:\n        return data.map(d => d.label);\n    }\n  };\n\n  useEffect(() => {\n    const height =\n      Math.ceil((data.length + 0.1) * barHeight) + marginTop + marginBottom;\n    const order = sortBy(sortClause);\n\n    // Create the scales.\n    const x = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.value)])\n      .range([marginLeft, width - marginRight]);\n\n    const y = d3\n      .scaleBand()\n      .domain(order)\n      .rangeRound([marginTop, height - marginBottom])\n      .padding(padding);\n\n    // Create the SVG container.\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    // Append a rect for each label.\n    svg.selectAll(`g`).remove();\n    svg\n      .append(\"g\")\n      .attr(\"fill\", fillColor)\n      .selectAll()\n      .data(data)\n      .join(\"rect\")\n      .on(\"click\", (d, i) => {\n        onClick(d, i);\n      })\n      .on(\"mousemove\", (d, i) => {\n        if (showTooltip) {\n          tooltip.style(\"padding\", \"5px\");\n          tooltip.style(\"opacity\", 1);\n          tooltip\n            .html(`${tooltipPrefix} ${i.label}: ${i.value} ${tooltipSuffix}`)\n            .style(\"left\", d.pageX + 5 + \"px\")\n            .style(\"top\", d.pageY - 30 + \"px\");\n        }\n      })\n      .on(\"mouseout\", d => {\n        tooltip.style(\"padding\", 0);\n        tooltip.style(\"opacity\", 0);\n      })\n      .transition()\n      .duration((d, i) => (showAnimation ? animationDuration + i : i))\n      .attr(\"x\", x(0))\n      .attr(\"y\", d => y(d.label))\n      .attr(\"width\", d => x(d.value) - x(0))\n      .attr(\"height\", y.bandwidth());\n\n    // Append a label for each label.\n    svg\n      .append(\"g\")\n      .attr(\"fill\", fontColor)\n      .attr(\"text-anchor\", \"start\")\n      .selectAll()\n      .data(data)\n      .join(\"text\")\n      .transition()\n      .delay((d, i) => (showAnimation ? animationDuration + i : 0))\n      .attr(\"x\", d => x(d.value))\n      .attr(\"y\", d => y(d.label) + y.bandwidth() / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"dx\", 1)\n      .text(d => d.value)\n      .attr(\"font-size\", fontSize)\n      .call(text =>\n        text\n          .filter(d => x(d.value) - x(0))\n          .attr(\"dx\", 4)\n          .attr(\"fill\", fontColor)\n          .attr(\"text-anchor\", \"start\"),\n      );\n\n    // Create the axes.\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${marginTop})`)\n      .call(d3.axisTop(x))\n      .call(g => g.select(\".domain\").remove())\n      .selectAll(\"text\")\n      .attr(\"font-size\", fontSize);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y).tickSizeOuter(0))\n      .call(g => g.selectAll(\".tick line\").attr(\"stroke\", lineColor))\n      .selectAll(\"text\")\n      .attr(\"font-size\", fontSize);\n\n    svg.select(\".domain\").attr(\"stroke\", lineColor);\n    svg.selectAll(\".tick line\").attr(\"stroke\", lineColor);\n  }, [JSON.stringify(props)]);\n\n  return <svg style={style} ref={svgRef} />;\n};\n\nHorizontalBarChart.propTypes = {\n  width: PropTypes.number,\n  barHeight: PropTypes.number,\n  data: PropTypes.array,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n  sortClause: PropTypes.string,\n  padding: PropTypes.number,\n  style: PropTypes.object,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  onClick: PropTypes.func,\n  fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  fontColor: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  fontSize: PropTypes.number,\n  showAnimation: PropTypes.bool,\n  animationDuration: PropTypes.number,\n};\nHorizontalBarChart.defaultProps = horizontalBarChartProps;\n\nexport default HorizontalBarChart;\n"],"sourceRoot":""}