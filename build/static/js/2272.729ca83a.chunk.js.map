{"version":3,"file":"static/js/2272.729ca83a.chunk.js","mappings":"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","sources":["components/payment/Upgrade.js","components/workbook/ReactiveElements/NumberSlider.js","components/workbook/ReactiveElements/ColorSwatches.js","components/workbook/ReactiveElements/TextInput.js","components/workbook/ReactiveElements/Radio.js","components/workbook/ReactiveElements/Switch.js","components/workbook/ReactiveElements/SelectBox.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","components/workbook/DataSourceOptions/index.js","../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","components/workbook/ReactiveElements/DynamicClause.js","components/workbook/ReactiveElements/DataSource.js","components/workbook/ChartOptions.js","components/workbook/VerticalPane.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js"],"sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\n\nconst UpgradeHeading = () => (\n  <div>\n    <div className='d-flex align-items-center'>\n      <i className='fa fa-exclamation-triangle fa-2x pt-2 text-danger' />\n      <div className='ps-2'>\n        <div className='fs-3'>\n          <FormattedMessage id='alert' defaultMessage='alert' />\n        </div>\n        <div className='fs-6'>\n          <FormattedMessage\n            id='maximumQuotaExceeded'\n            defaultMessage='maximumQuotaExceeded'\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst UpgradeContent = () => {\n  return (\n    <div className='d-flex align-items-center justify-content-between'>\n      <div>\n        <Link\n          className='btn btn-sm btn-primary me-1 rounded-pill'\n          to='/billing'\n        >\n          <i className='fa fa-credit-card-alt pe-1' />\n          <FormattedMessage id='upgradeNow' defaultMessage='upgradeNow' />\n        </Link>\n        <span className='fs-6'>\n          <FormattedMessage\n            id='accessUnlimitedStorage'\n            defaultMessage='accessUnlimitedStorage'\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport { UpgradeHeading, UpgradeContent };\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Slider from \"@appigram/react-rangeslider\";\n\nconst NumberSlider = props => {\n  const { id, units, title, min, max, init, step, onChange } = props;\n  const [value, setValue] = useState(init);\n  const [newVal, setNewValue] = useState(value);\n\n  const countDecimals = value => {\n    if (Math.floor(value) !== value)\n      return value.toString().split(\".\")[1].length || 0;\n    return 0;\n  };\n\n  useEffect(() => {\n    const decValue = isFinite(step)\n      ? Number(value?.toFixed(countDecimals(step)))\n      : min;\n    setNewValue(decValue);\n    onChange({ id, value: decValue });\n  }, [value]);\n\n  return (\n    <div>\n      <span className='small fst-italic'>{title}</span>\n      <Row className='justify-content-between pb-1'>\n        <Col sm={1}>\n          <i\n            className='fa fa-minus cursor-pointer'\n            onClick={() =>\n              value <= max && value > min && setValue(value - step)\n            }\n          />\n        </Col>\n        <Col xs={true} sm={5}>\n          <Slider\n            min={min}\n            max={max}\n            value={value}\n            step={step}\n            orientation='horizontal'\n            onChange={v => setValue(v)}\n            tooltip={false}\n          />\n        </Col>\n        <Col sm={1}>\n          <i\n            className='fa fa-plus cursor-pointer'\n            onClick={() =>\n              value < max && value >= min && setValue(value + step)\n            }\n          />\n        </Col>\n        <Col xs={true} sm={4}>\n          <small>\n            {newVal}\n            {units}\n          </small>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NumberSlider;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { Popover, OverlayTrigger, Row, Col, Form } from \"react-bootstrap\";\nimport WorkbookContext from \"../WorkbookContext\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst ColorSwatches = props => {\n  const { id, title, init, onChange } = props;\n  const workbookContext = useContext(WorkbookContext);\n  const { theme } = workbookContext;\n  const [color, setColor] = useState(init);\n  const [type, setType] = useState(\"single\");\n  const scheme = [\n    [\n      \"transparent\",\n      \"#000000\",\n      \"#ffffff\",\n      document.documentElement.style.getPropertyValue(\"--app-theme-bg-color\"),\n      document.documentElement.style.getPropertyValue(\"--app-theme-color\"),\n    ],\n    d3[`schemeCategory10`],\n    d3[`schemeAccent`],\n    d3[`schemeDark2`],\n    d3[`schemePaired`],\n    d3[`schemePastel1`],\n    d3[`schemePastel2`],\n    d3[`schemeSet1`],\n    d3[`schemeSet2`],\n    d3[`schemeSet3`],\n    d3[`schemeTableau10`],\n  ];\n\n  useEffect(() => {\n    onChange({ id, value: color });\n    setType(typeof init === \"object\" ? \"multiple\" : \"single\");\n  }, [color]);\n\n  const onSetColor = code => {\n    if (type === \"single\") {\n      setColor(code);\n    } else {\n      const arrColor =\n        typeof color === \"object\" ? [...color, code] : [color, code];\n      setColor(arrColor);\n    }\n  };\n\n  const popover = () => (\n    <Popover className='border-0' style={{ width: \"350px\", maxWidth: \"350px\" }}>\n      <Popover.Header\n        as='div'\n        className={`border-bottom border-secondary ${\n          theme === \"dark\" ? \"bg-dark text-light\" : \"bg-light text-dark\"\n        }`}\n      >\n        <Form.Check\n          type={\"checkbox\"}\n          checked={type === \"single\"}\n          id={`default-${type}`}\n          label={`${type === \"single\" ? \"Single\" : \"Multiple\"}`}\n          onChange={e =>\n            e.target.checked ? setType(\"single\") : setType(\"multiple\")\n          }\n        />\n      </Popover.Header>\n      <Popover.Body className={`p-2 rounded-bottom bg-${theme}`}>\n        {scheme.map((colors, i) => (\n          <Row key={i} className='m-0'>\n            {colors.map((c, j) => (\n              <Col key={j} xs={1} className='px-1'>\n                <i\n                  className={`fa fa-square cursor-pointer ${\n                    i === 0 && j === 0\n                      ? \"border border-1 border-secondary rounded-1\"\n                      : \"\"\n                  }`}\n                  title={c}\n                  style={{ color: c }}\n                  onClick={() => onSetColor(c)}\n                />\n              </Col>\n            ))}\n          </Row>\n        ))}\n      </Popover.Body>\n    </Popover>\n  );\n\n  const onDeleteColor = index => {\n    const bArr = [...color].filter((f, i) => i !== index);\n    setColor(bArr);\n  };\n\n  return (\n    <div>\n      <div className='d-flex align-items-center justify-content-between'>\n        <div className='btn-group btn-group-sm py-0'>\n          <OverlayTrigger\n            trigger='click'\n            placement='left'\n            overlay={popover()}\n            rootClose\n          >\n            <button className='btn btn-sm btn-bni py-0'>\n              <i className={`fa fa-paint-brush cursor-pointer pe-2`} />\n              <span className='small fst-italic'>\n                <FormattedMessage id='select' defaultMessage='select' />\n              </span>\n            </button>\n          </OverlayTrigger>\n          <button\n            className='btn btn-sm btn-danger py-0'\n            onClick={() => setColor([])}\n            disabled={!color?.length}\n          >\n            <i className={`fa fa-times cursor-pointer`} />\n          </button>\n        </div>\n        <label className='small fst-italic'>{title}</label>\n      </div>\n      <Row className='p-2'>\n        {typeof color === \"string\" ? (\n          <Col xs={12} className='px-1'>\n            <div className={`rounded-1 lh-1`} style={{ background: color }}>\n              &nbsp;\n            </div>\n          </Col>\n        ) : (\n          color.map((c, i) => (\n            <Col\n              key={i}\n              xs={1}\n              className='px-1 cursor-pointer'\n              onClick={() => onDeleteColor(i)}\n            >\n              <i className={`fa fa-square`} style={{ color: c }} />\n            </Col>\n          ))\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default ColorSwatches;\n","import React, { useEffect, useState } from \"react\";\n\nconst TextInput = props => {\n  const { id, title, init, onChange, ...rest } = props;\n  const [value, setValue] = useState(init);\n\n  useEffect(() => {\n    onChange({ id, value });\n  }, [value]);\n\n  return (\n    <div className='input-group input-group-sm mb-1'>\n      <label\n        className='input-group-text bni-bg border-0 fst-italic'\n        htmlFor={id}\n      >\n        {title}\n      </label>\n      <input\n        type='text'\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        className='form-control'\n        id={id}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React, { useEffect, useState } from \"react\";\n\nconst Radio = props => {\n  const { id, title, onChange, list, isInline, init } = props;\n  const [value, setValue] = useState(init);\n\n  useEffect(() => {\n    onChange({ id, value });\n  }, [value]);\n\n  return (\n    <div className='mb-1'>\n      <div>\n        <span className='small fst-italic'>{title}</span>\n      </div>\n      {list.map((l, i) => (\n        <div\n          key={i}\n          className={`form-check py-1 ${isInline ? \"form-check-inline\" : \"\"}`}\n        >\n          <input\n            className='form-check-input'\n            type='radio'\n            name={id}\n            id={l.id}\n            value={l.value}\n            onChange={e => setValue(e.target.value)}\n            defaultChecked={value === l.value}\n          />\n          <label className='form-check-label small' htmlFor={l.id}>\n            {l.label}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Radio;\n","import React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Switch = props => {\n  const { id, title, onChange, init } = props;\n  const [value, setValue] = useState(init);\n\n  useEffect(() => {\n    onChange({ id, value });\n  }, [value]);\n\n  return (\n    <Form>\n      <Form.Check\n        type='switch'\n        id={id}\n        value={value}\n        label={title}\n        checked={value}\n        onChange={e => setValue(e.target.checked)}\n        className='fst-italic'\n      />\n    </Form>\n  );\n};\n\nexport default Switch;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst SelectBox = props => {\n  const { id, title, init, onChange, list } = props;\n  return (\n    <Row className='align-items-center pb-1'>\n      <Col lg={12}>\n        <span className='small fst-italic'>{title}</span>\n      </Col>\n      <Col lg={12}>\n        <select\n          className='form-control form-control-sm rounded'\n          defaultValue={init}\n          onChange={e => onChange({ id, value: e.target.value })}\n        >\n          {list.map((l, i) => (\n            <option key={i} value={l.id}>\n              {l.value}\n            </option>\n          ))}\n        </select>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SelectBox;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","import React, { useContext, useEffect, useState } from \"react\";\nimport WorkbookContext from \"../WorkbookContext\";\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { Accordion, Card, useAccordionButton } from \"react-bootstrap\";\nimport Dropzone from \"react-dropzone\";\nimport { FormattedMessage } from \"react-intl\";\nimport helpers from \"../../../helpers\";\nimport { DSContext } from \"../ReactiveElements/DataSource\";\nimport { useIntl } from \"react-intl\";\nimport OffCanvas from \"../../shared/OffCanvas\";\n\nconst DSOptions = ({ config }) => {\n  const intl = useIntl();\n  const workbookContext = useContext(WorkbookContext);\n  const userContext = useContext(UserContext);\n  const dSContext = useContext(DSContext);\n  const { theme } = workbookContext;\n  const {\n    setTableDragging,\n    activeDataSource,\n    setActiveDataSource,\n    setSelectedWBFields,\n    setTable,\n    setResponse,\n    setErrorResponse,\n  } = dSContext;\n  const [file, setFile] = useState([]);\n  const fileSize = 50 * 1024 * 1024;\n  const maxRowsInsert = 1000;\n\n  function CustomToggle({ children, eventKey }) {\n    const decoratedOnClick = useAccordionButton(eventKey, e => {\n      setActiveDataSource(eventKey);\n    });\n\n    return (\n      <button\n        type='button'\n        className={`text-start py-1 border-0 btn btn-sm btn-bni w-100 border-0 border-bottom border-${theme}`}\n        onClick={decoratedOnClick}\n        style={\n          eventKey === \"MP\"\n            ? { borderRadius: \"5px 0px 0px 0px\" }\n            : { borderRadius: \"0\" }\n        }\n      >\n        {children}\n      </button>\n    );\n  }\n\n  const processData = (file, fileType) => {\n    return new Promise((resolve, reject) => {\n      const input = file;\n      const reader = new FileReader();\n      reader.readAsText(input);\n      reader.onload = e => {\n        const lines = [];\n        const allText = e.target.result;\n        if (fileType === \"CSV\") {\n          const allTextLines = allText.split(/\\r\\n|\\n/);\n          const headers = allTextLines[0].split(\",\");\n          if (input.size <= fileSize) {\n            if (allTextLines.length - 1 <= maxRowsInsert) {\n              for (let i = 1; i < allTextLines.length; i++) {\n                // const data = allTextLines[i].match(/(\".*?\"|[^,\\s]+)(?=\\s*,|\\s*$)/g);\n                const data = allTextLines[i].split(\n                  /,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/,\n                );\n                if (data.length === headers.length) {\n                  const tarr = [];\n                  for (let j = 0; j < headers.length; j++) {\n                    tarr.push({\n                      [headers[j]]: data[j]\n                        .replace(/\\\\/g, \"\")\n                        .replaceAll('\"', \"\"),\n                    });\n                  }\n                  const joined = Object.assign({}, ...tarr);\n                  lines.push(joined);\n                }\n              }\n              resolve(lines);\n            } else {\n              reject(\n                new Error(\n                  `${intl.formatMessage({\n                    id: \"maxAllowedRowLimitIs\",\n                    defaultMessage: \"maxAllowedRowLimitIs\",\n                  })} ${maxRowsInsert}`,\n                ),\n              );\n            }\n          } else {\n            reject(\n              new Error(\n                `${intl.formatMessage({\n                  id: \"maxFileSizeLimitIs\",\n                  defaultMessage: \"maxFileSizeLimitIs\",\n                })} ${fileSize} MB`,\n              ),\n            );\n          }\n        } else {\n          try {\n            if (JSON.parse(allText) && !!allText) {\n              const array = JSON.parse(allText);\n              if (array.length > 0 && Array.isArray(array)) {\n                setResponse(array);\n              }\n            }\n          } catch (e) {\n            reject(new Error(\"Not a valid array of JSON object\"));\n          }\n        }\n      };\n      reader.onerror = e => {\n        reject(e);\n      };\n    });\n  };\n\n  const onDrop = acceptedFiles => {\n    setFile(acceptedFiles[0].name);\n    processData(acceptedFiles[0], activeDataSource)\n      .then(res => {\n        setResponse(res);\n        setErrorResponse({});\n      })\n      .catch(e => {\n        const eObject = JSON.parse(\n          JSON.stringify(e, Object.getOwnPropertyNames(e)),\n        );\n        setResponse([]);\n        setErrorResponse({\n          errorMessage: eObject.message,\n        });\n        userContext.renderToast({\n          position: \"bottom-center\",\n          type: \"error\",\n          icon: \"fa fa-times-circle\",\n          message: e,\n        });\n      });\n  };\n\n  useEffect(() => {\n    setTable(config[0]?.tables[0]?.label);\n    setSelectedWBFields(config[0]?.tables[0]?.fields);\n  }, []);\n\n  return (\n    <Accordion defaultActiveKey={activeDataSource} className=''>\n      {config.map((c, ii) => (\n        <Card\n          key={ii}\n          className={`border-0 rounded-0 ${\n            theme === \"dark\" ? \"bg-dark text-white\" : \"bg-white text-dark\"\n          }`}\n        >\n          <Card.Header className='m-0 p-0 rounded-0'>\n            <CustomToggle eventKey={c.id}>{c.label}</CustomToggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey={c.id}>\n            {c.hasUpload ? (\n              <Card.Body className='m-2 p-2 rounded text-center p-3 border-1 bni-border bni-border-all bni-border-all-1'>\n                <Dropzone accept={c?.fileType} onDrop={onDrop} className=''>\n                  {({\n                    getRootProps,\n                    getInputProps,\n                    isDragAccept,\n                    isDragReject,\n                  }) => {\n                    let classes = \"dropZoneWrapper\";\n                    let placeholder = (\n                      <div className='icon-bni'>\n                        <FormattedMessage\n                          id='clickHereToUpload'\n                          defaultMessage='clickHereToUpload'\n                        />\n                      </div>\n                    );\n                    if (isDragAccept) {\n                      classes = `${classes} bg-success`;\n                      placeholder = (\n                        <div className='upload-success'>\n                          <FormattedMessage\n                            id='dropFileOrfilesHere'\n                            defaultMessage='dropFileOrfilesHere'\n                          />\n                        </div>\n                      );\n                    }\n                    if (isDragReject) {\n                      classes = `${classes} bg-danger`;\n                      placeholder = (\n                        <div className='upload-error'>\n                          <FormattedMessage\n                            id='fileTypeNotAllowed'\n                            defaultMessage='fileTypeNotAllowed'\n                          />\n                        </div>\n                      );\n                    }\n                    return (\n                      <div {...getRootProps()} className={`${classes} title`}>\n                        <input {...getInputProps()} />\n                        <small>{placeholder}</small>\n                        {file[0]?.name && (\n                          <em\n                            style={{\n                              fontSize: \"0.75rem\",\n                              lineHeight: 1.25,\n                              display: \"inline-block\",\n                            }}\n                            className='icon-bni mt-2'\n                          >\n                            {helpers.shorten(file[0]?.name, 20)}\n                          </em>\n                        )}\n                      </div>\n                    );\n                  }}\n                </Dropzone>\n              </Card.Body>\n            ) : (\n              <div className='p-1'>\n                <div className='d-flex align-items-center justify-content-between'>\n                  <span>\n                    <FormattedMessage id='tables' defaultMessage='tables' />\n                  </span>\n                  <OffCanvas\n                    btnValue='<i class=\"fa fa-sitemap\" />'\n                    btnClassName={`btn-white rounded btn-sm btn-bni btn px-1 py-0`}\n                    placement='bottom'\n                    label={intl.formatMessage({\n                      id: \"ERD\",\n                      defaultMessage: \"ERD\",\n                    })}\n                    style={{ zIndex: 10000, height: \"100vh\" }}\n                  >\n                    <div className='row'>\n                      <div className='col-2' />\n                      <img\n                        className='col-8'\n                        style={{ height: \"calc(100vh - 100px)\" }}\n                        alt='eerImage'\n                        src={require(\"../../../images/charts/TableEERDiagram.png\")}\n                      />\n                      <div className='col-2' />\n                    </div>\n                  </OffCanvas>\n                </div>\n                {c.tables.map((table, i) => (\n                  <div key={i}>\n                    <button\n                      draggable={true}\n                      className={`my-1 btn btn-sm btn-bni w-100 rounded-pill`}\n                      onClick={() => {\n                        setTable(table.label);\n                        setSelectedWBFields(table.fields);\n                      }}\n                      onDrag={() => {\n                        setTableDragging({\n                          source: [\"from\", \"join\"],\n                        });\n                        setTable(table.label);\n                        setSelectedWBFields(table.fields);\n                      }}\n                      onDragEnd={() => setTableDragging({})}\n                      onDragStart={e => {\n                        e.dataTransfer.setData(\n                          \"text\",\n                          JSON.stringify({\n                            source: [\"from\", \"join\"],\n                            data: table.label,\n                          }),\n                        );\n                      }}\n                    >\n                      {table.label}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </Accordion.Collapse>\n        </Card>\n      ))}\n    </Accordion>\n  );\n};\n\nexport default DSOptions;\n","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { useContext, useState } from \"react\";\nimport WorkbookContext from \"../WorkbookContext\";\nimport { DSContext } from \"./DataSource\";\nimport {\n  Popover,\n  OverlayTrigger,\n  Form,\n  DropdownButton,\n  Dropdown,\n  Row,\n  Col,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport Slider from \"@appigram/react-rangeslider\";\n\nconst DynamicClause = props => {\n  const intl = useIntl();\n  const { targetKey, type, contextMenu, suffixList, showAlias } = props;\n  const workbookContext = useContext(WorkbookContext);\n  const dSContext = useContext(DSContext);\n  const {\n    clause,\n    setClause,\n    optionsConfig,\n    tableDragging,\n    fieldDragging,\n    table,\n    selectedWBFields,\n  } = dSContext;\n  const { theme } = workbookContext;\n  const doubleInputChoice = [\n    {\n      id: \"DATE\",\n      label: intl.formatMessage({\n        id: \"date\",\n        defaultMessage: \"date\",\n      }),\n      input: {\n        start: moment().startOf(\"year\").toDate(),\n        end: moment().endOf(\"year\").toDate(),\n      },\n    },\n    {\n      id: \"NUMBER\",\n      label: intl.formatMessage({\n        id: \"number\",\n        defaultMessage: \"number\",\n      }),\n      input: {\n        start: 1,\n        end: 1,\n      },\n    },\n  ];\n\n  const [selectedDoubleInput, setSelectedDoubleInput] = useState(\n    doubleInputChoice[0],\n  );\n\n  const popover = (index, data) => (\n    <Popover style={{ zIndex: 10000 }}>\n      <Popover.Header as='div' className={`bni-bg bni-text py-1 px-2`}>\n        <small className='small'>\n          <span>&fnof;</span>\n          <sub>&cap;</sub>\n        </small>\n      </Popover.Header>\n      <Popover.Body className='p-0'>\n        <ul className='list-group list-group-flush rounded-bottom'>\n          {contextMenu.map((m, i) => (\n            <li\n              onClick={() => onClickFunction(index, m, data)}\n              key={i}\n              className={`list-group-item cursor-pointer py-1 px-2 small`}\n            >\n              {m.label}\n            </li>\n          ))}\n        </ul>\n      </Popover.Body>\n    </Popover>\n  );\n\n  const aliasPopover = (index, data) => {\n    return (\n      <Popover style={{ zIndex: 10000 }}>\n        <Popover.Header as='div' className={`bni-bg bni-text py-1 px-2`}>\n          <small className='small'>\n            <FormattedMessage id='alias' defaultMessage='alias' />\n          </small>\n        </Popover.Header>\n        <Popover.Body className='p-0'>\n          <Form.Control\n            type='text'\n            size='sm'\n            placeholder='Alias name'\n            maxLength={15}\n            defaultValue={data.split(\" \")[data.split(\" \").length - 1]}\n            onChange={e => onChangeAlias(index, e.target.value)}\n            onKeyDown={e => [\" \"].includes(e.key) && e.preventDefault()}\n          />\n        </Popover.Body>\n      </Popover>\n    );\n  };\n\n  const onChangeAlias = (index, value) => {\n    setClause(prev => ({\n      ...prev,\n      [targetKey]: clause[targetKey].map((c, i) => {\n        if (i === index) {\n          return value !== \"\"\n            ? { ...c, query: `${c.query.split(\" \")[0]} AS ${value}` }\n            : { ...c, query: c.query.split(\" \")[0] };\n        }\n        return c;\n      }),\n    }));\n  };\n\n  const onClickFunction = (index, m, row) => {\n    document.body.click();\n    setClause(prev => ({\n      ...prev,\n      [targetKey]: clause[targetKey].map((c, i) => {\n        if (i === index && m.mode === \"function\") {\n          return m.label !== \"NULL\"\n            ? { ...c, query: `${m.label}(${c.data})`, input: [], row: [] }\n            : { ...c, query: `${c.data}`, input: [], row: [] };\n        }\n        if (i === index && m.mode === \"propertyBindingFunction\") {\n          const iPieces = [`${table}.${selectedWBFields[0]}`, \"=\", 0, c.data];\n          return m.label !== \"NULL\"\n            ? {\n                ...c,\n                ...{\n                  row: m.pieces,\n                  input: iPieces,\n                  hasQuotes: m.hasQuotes,\n                  query: m.pieces\n                    .map((p, i) => {\n                      return p.replace(\n                        `{${i}}`,\n                        !isNaN(iPieces[i]) ? `'${iPieces[i]}'` : iPieces[i],\n                      );\n                    })\n                    .join(\"\"),\n                },\n              }\n            : {};\n        }\n        if (i === index && m.mode === \"operator\") {\n          return {\n            ...c,\n            ...{\n              data: row.data,\n              row: `${row.data} ${m.value}`,\n              label: m.label,\n              value: m.value,\n              valueType: m.valueType,\n              placeholder: m.placeholder,\n              suffix: m.suffix,\n              input: \"\",\n            },\n          };\n        }\n        if (i === index && m.mode === \"joinQuery\") {\n          return {\n            ...c,\n            ...{\n              row: `${m.label} JOIN ${row.targetTable.label} ON ${row.selectedSource} = ${row.selectedTarget}`,\n              array: [\n                row.targetTable.label,\n                `${row.selectedSource} = ${row.selectedTarget}`,\n                m.label,\n              ],\n              ...m,\n            },\n          };\n        }\n        return c;\n      }),\n    }));\n  };\n\n  const onChangeWhereClause = (index, val, m, bool) => {\n    setClause(prev => ({\n      ...prev,\n      [targetKey]: clause[targetKey].map((c, i) => {\n        if (i === index) {\n          let newVal = \"\";\n          const { value } = c;\n          const pieces = val.split(\",\");\n          if (m.valueType === \"SINGLE\") {\n            newVal = value.replace(\"{a}\", `${pieces[0]}`);\n          }\n          if (m.valueType === \"DOUBLE\") {\n            if (pieces[0]) {\n              newVal = value.replace(\"{a}\", `${pieces[0]}`);\n            }\n            if (pieces[1]) {\n              newVal = newVal.replace(\"{b}\", `${pieces[1]}`);\n            }\n          }\n          if (m.valueType === \"MULTIPLE\") {\n            newVal = value.replace(\"{n}\", `(${pieces.join(\",\")})`);\n          }\n          return {\n            ...c,\n            row: `${c.data} ${newVal}${bool ? ` ${c.suffix}` : \"\"}`,\n            input: val,\n          };\n        }\n        return c;\n      }),\n    }));\n  };\n\n  const onDropHandle = e => {\n    const { source, data } = JSON.parse(e.dataTransfer.getData(\"text\"));\n    if (source?.includes(targetKey) && type === \"array\") {\n      setClause(prev => ({\n        ...prev,\n        [targetKey]: [\n          ...new Set([\n            ...clause[targetKey],\n            {\n              row: [],\n              data,\n              input: [`${table}.${selectedWBFields[0]}`, \"=\", 0, data],\n              query: data,\n              hasQuotes: [],\n            },\n          ]),\n        ],\n      }));\n    }\n    if (source.includes(targetKey) && type === \"string\") {\n      setClause(prev => ({\n        ...prev,\n        [targetKey]: data,\n      }));\n    }\n    if (source.includes(targetKey) && type === \"arrayOfObjects\") {\n      if (!clause[targetKey].filter(f => f.data === data).length) {\n        setClause(prev => ({\n          ...prev,\n          [targetKey]: [\n            ...clause[targetKey],\n            {\n              data,\n              row: `${data}${\n                contextMenu && contextMenu[0]?.value\n                  ? ` ${contextMenu[0]?.value}`\n                  : \"\"\n              }`,\n              ...(contextMenu && contextMenu.length ? contextMenu[0] : []),\n            },\n          ],\n        }));\n      }\n    }\n    if (source.includes(targetKey) && type === \"relation\") {\n      const getFieldList = where => {\n        return optionsConfig\n          .filter(f => f.id === \"MP\")[0]\n          .tables.filter(f => f.label === where)[0];\n      };\n      const onString = `${getFieldList(clause[\"from\"])?.label}.${\n        getFieldList(clause[\"from\"])?.fields[0]\n      }`;\n      const targetString = `${data}.${getFieldList(data)?.fields[0]}`;\n      const joinType =\n        contextMenu && contextMenu[0]?.label ? `${contextMenu[0]?.label}` : \"\";\n      if (\n        clause[\"from\"] &&\n        !clause[targetKey].filter(f => f.array.includes(onString)).length\n      ) {\n        setClause(prev => ({\n          ...prev,\n          [targetKey]: [\n            ...clause[targetKey],\n            {\n              sourceTable: getFieldList(clause[\"from\"]),\n              targetTable: getFieldList(data),\n              row: `${joinType} JOIN ${data} ON ${onString} = ${targetString}`,\n              selectedSource: onString,\n              selectedTarget: targetString,\n              ...(contextMenu && contextMenu.length ? contextMenu[0] : []),\n              array: [data, `${onString} = ${targetString}`, joinType],\n            },\n          ],\n        }));\n      }\n    }\n  };\n\n  const onDeleteHandle = (index = null) => {\n    setClause(prev => ({\n      ...prev,\n      ...(type === \"array\" || type === \"arrayOfObjects\" || type === \"relation\"\n        ? {\n            [targetKey]: clause[targetKey].filter((_, j) => j !== index),\n          }\n        : {\n            [targetKey]: \"\",\n          }),\n    }));\n  };\n\n  const onSuffixClick = (val, index) => {\n    setClause(prev => ({\n      ...prev,\n      [targetKey]: clause[targetKey].map((c, i) => {\n        if (i === index) {\n          c.suffix = val;\n          c.row = `${c.data} ${c.value} ${val}`;\n        }\n        return c;\n      }),\n    }));\n  };\n\n  const onDropDownChange = (val, index, key) => {\n    setClause(prev => ({\n      ...prev,\n      [targetKey]: clause[targetKey].map((c, i) => {\n        if (i === index) {\n          c[key] = val;\n          c.row = `${c.label} JOIN ${c.targetTable.label} ON ${c.selectedSource} = ${c.selectedTarget}`;\n          c.array = [\n            c.targetTable.label,\n            `${c.selectedSource} = ${c.selectedTarget}`,\n            c.label,\n          ];\n        }\n        return c;\n      }),\n    }));\n  };\n\n  const onChangeSelectParams = (index, subIndex, value) => {\n    setClause(prev => ({\n      ...prev,\n      [targetKey]: clause[targetKey].map((c, i) => {\n        if (i === index) {\n          c.input = c.input.map((inp, j) => {\n            if (j === subIndex) {\n              inp = value;\n            }\n            return inp;\n          });\n          c.query = c.row\n            .map((r, k) => {\n              return r.replace(\n                `{${k}}`,\n                c.hasQuotes[k] ? `'${c.input[k]}'` : c.input[k],\n              );\n            })\n            .join(\"\");\n        }\n        return c;\n      }),\n    }));\n  };\n\n  const renderArrayOfObjectType = () => (\n    <ul className='list-group p-1'>\n      {clause[targetKey].map((s, i) => (\n        <React.Fragment key={i}>\n          <li\n            className={`p-1 list-group-item ${\n              theme === \"dark\"\n                ? \"bg-dark text-white border-secondary\"\n                : \"bg-white text-dark\"\n            }`}\n            style={{ columnGap: \"10px\" }}\n          >\n            <div\n              className='d-flex align-items-center justify-content-between'\n              style={{ columnGap: \"5px\" }}\n            >\n              {contextMenu?.length > 0 && (\n                <OverlayTrigger\n                  trigger='click'\n                  placement='right'\n                  overlay={popover(i, s)}\n                  rootClose\n                >\n                  <i className='fa fa-bars cursor-pointer' />\n                </OverlayTrigger>\n              )}\n              <span\n                title={s.data}\n                className='w-50 d-inline-block text-truncate small'\n              >\n                {s.data}\n              </span>\n              <span\n                title={s.label}\n                className='d-inline-block text-truncate text-end small'\n              >\n                {s.label}\n              </span>\n              <i\n                onClick={() => onDeleteHandle(i)}\n                className='fa fa-times-circle cursor-pointer text-danger'\n              />\n            </div>\n            {s.valueType !== \"NULL\" && (\n              <div className=''>\n                {[\"SINGLE\", \"MULTIPLE\"].includes(s.valueType) && (\n                  <Form.Control\n                    onChange={e =>\n                      onChangeWhereClause(\n                        i,\n                        e.target.value,\n                        s,\n                        clause[targetKey].length - 1 !== i,\n                      )\n                    }\n                    type='text'\n                    size='sm'\n                    disabled={!s.label}\n                    placeholder={s.placeholder}\n                    value={s.input}\n                  />\n                )}\n                {[\"DOUBLE\"].includes(s.valueType) && (\n                  <Row>\n                    <Col xs={4} className='py-1'>\n                      {selectedDoubleInput.id === \"DATE\" ? (\n                        <div\n                          className='position-relative'\n                          style={{ zoom: \"0.7\" }}\n                        >\n                          <DateTimePicker\n                            className='bg-white text-dark'\n                            value={selectedDoubleInput.input.start}\n                            format='y-MM-dd'\n                            clearIcon={null}\n                            onChange={value => {\n                              setSelectedDoubleInput(prev => {\n                                onChangeWhereClause(\n                                  i,\n                                  `${new moment(value)\n                                    .format(\"YYYY-MM-DD\")\n                                    .toString()},${new moment(prev.input.end)\n                                    .format(\"YYYY-MM-DD\")\n                                    .toString()}`,\n                                  s,\n                                  clause[targetKey].length - 1 !== i,\n                                );\n                                return {\n                                  ...prev,\n                                  input: { ...prev.input, start: value },\n                                };\n                              });\n                            }}\n                          />\n                        </div>\n                      ) : (\n                        <Form.Control\n                          onChange={e => {\n                            setSelectedDoubleInput(prev => {\n                              onChangeWhereClause(\n                                i,\n                                `${e.target.value},${prev.input.end}`,\n                                s,\n                                clause[targetKey].length - 1 !== i,\n                              );\n                              return {\n                                ...prev,\n                                input: { ...prev.input, start: e.target.value },\n                              };\n                            });\n                          }}\n                          type='number'\n                          size='sm'\n                          placeholder={s.placeholder}\n                          value={selectedDoubleInput.input.start}\n                        />\n                      )}\n                    </Col>\n                    <Col xs={4} className='py-1'>\n                      {selectedDoubleInput.id === \"DATE\" ? (\n                        <div\n                          className='position-relative'\n                          style={{ zoom: \"0.7\" }}\n                        >\n                          <DateTimePicker\n                            className='bg-white text-dark'\n                            value={selectedDoubleInput.input.end}\n                            format='y-MM-dd'\n                            clearIcon={null}\n                            onChange={value => {\n                              setSelectedDoubleInput(prev => {\n                                onChangeWhereClause(\n                                  i,\n                                  `${new moment(prev.input.start)\n                                    .format(\"YYYY-MM-DD\")\n                                    .toString()},${new moment(value)\n                                    .format(\"YYYY-MM-DD\")\n                                    .toString()}`,\n                                  s,\n                                  clause[targetKey].length - 1 !== i,\n                                );\n                                return {\n                                  ...prev,\n                                  input: { ...prev.input, end: value },\n                                };\n                              });\n                            }}\n                          />\n                        </div>\n                      ) : (\n                        <Form.Control\n                          onChange={e => {\n                            setSelectedDoubleInput(prev => {\n                              onChangeWhereClause(\n                                i,\n                                `${prev.input.start},${e.target.value}`,\n                                s,\n                                clause[targetKey].length - 1 !== i,\n                              );\n                              return {\n                                ...prev,\n                                input: { ...prev.input, end: e.target.value },\n                              };\n                            });\n                          }}\n                          type='number'\n                          size='sm'\n                          placeholder={s.placeholder}\n                          value={selectedDoubleInput.input.end}\n                        />\n                      )}\n                    </Col>\n                    <Col xs={4}>\n                      <Dropdown\n                        title={selectedDoubleInput.label}\n                        className='d-grid'\n                        size='sm'\n                      >\n                        <Dropdown.Toggle className='btn btn-sm btn-bni'>\n                          {selectedDoubleInput.label}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                          {doubleInputChoice.map((d, i) => (\n                            <Dropdown.Item\n                              key={i}\n                              onClick={e => {\n                                setSelectedDoubleInput(d);\n                              }}\n                            >\n                              <div title={d.label}>{d.label}</div>\n                            </Dropdown.Item>\n                          ))}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </Col>\n                  </Row>\n                )}\n                {clause[targetKey].length > 1 &&\n                  clause[targetKey].length - 1 !== i && (\n                    <DropdownButton\n                      variant={`btn btn-sm btn-${theme} mt-1 border-1 ${\n                        theme === \"dark\" ? \"border-secondary\" : \"border\"\n                      }`}\n                      title={s.suffix}\n                      className=''\n                    >\n                      {suffixList &&\n                        suffixList.map((a, j) => (\n                          <Dropdown.Item\n                            key={j}\n                            href='#'\n                            onClick={() => onSuffixClick(a, i)}\n                            className='p-1'\n                          >\n                            {a}\n                          </Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                  )}\n              </div>\n            )}\n          </li>\n        </React.Fragment>\n      ))}\n    </ul>\n  );\n\n  const renderArrayType = () => (\n    <ul className='list-group p-1'>\n      {clause[targetKey].map((s, i) => (\n        <li\n          key={i}\n          className={`list-group-item ${\n            theme === \"dark\"\n              ? \"bg-dark text-white border-secondary\"\n              : \"bg-white text-dark\"\n          }`}\n        >\n          <div\n            className={`p-1 d-flex align-items-center justify-content-between`}\n            style={{ columnGap: \"10px\" }}\n          >\n            {contextMenu?.length > 0 && (\n              <OverlayTrigger\n                trigger='click'\n                placement='right'\n                overlay={popover(i)}\n                rootClose\n              >\n                <i className='fa fa-bars cursor-pointer' />\n              </OverlayTrigger>\n            )}\n            <span className='text-break small'>{s.query}</span>\n            <div\n              className='d-flex align-items-center'\n              style={{ columnGap: \"5px\" }}\n            >\n              {showAlias && (\n                <OverlayTrigger\n                  trigger='click'\n                  placement='top'\n                  overlay={aliasPopover(i, s.query)}\n                  rootClose\n                >\n                  <i\n                    className='fa fa-font cursor-pointer text-warning'\n                    title='Alias'\n                  />\n                </OverlayTrigger>\n              )}\n              <i\n                onClick={() => onDeleteHandle(i)}\n                className='fa fa-times-circle cursor-pointer text-danger'\n              />\n            </div>\n          </div>\n          {s?.row?.length > 0 && (\n            <InputGroup size='sm' className='pb-2'>\n              <select\n                className='form-control form-control-sm'\n                onChange={e => onChangeSelectParams(i, 0, e.target.value)}\n                defaultValue={s?.input[0]}\n              >\n                {optionsConfig[0].tables.map((t, i) =>\n                  t?.fields.map((f, j) => (\n                    <option key={`${i}-${j}`}>{`${t.label}.${f}`}</option>\n                  )),\n                )}\n              </select>\n              <select\n                className='form-control form-control-sm'\n                onChange={e => onChangeSelectParams(i, 1, e.target.value)}\n                defaultValue={s?.input[1]}\n              >\n                {[\"=\", \"!=\", \">\", \"<\", \">=\", \"<=\"].map((m, i) => (\n                  <option key={i} value={m}>\n                    {m}\n                  </option>\n                ))}\n              </select>\n              <FormControl\n                placeholder={intl.formatMessage({\n                  id: \"stringNumber\",\n                  defaultMessage: \"stringNumber\",\n                })}\n                defaultValue={s?.input[2]}\n                maxLength={20}\n                onChange={e => onChangeSelectParams(i, 2, e.target.value)}\n              />\n            </InputGroup>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n\n  const renderStringType = () => (\n    <ul className='list-group p-1'>\n      <li\n        className={`p-1 d-flex align-items-center justify-content-between list-group-item ${\n          theme === \"dark\"\n            ? \"bg-dark text-white border-secondary\"\n            : \"bg-white text-dark\"\n        }`}\n      >\n        <span className='small'>{clause[targetKey]}</span>\n        <i\n          onClick={() => onDeleteHandle()}\n          className='fa fa-times-circle cursor-pointer text-danger'\n        />\n      </li>\n    </ul>\n  );\n\n  const renderRange = () => (\n    <ul className='list-group p-1'>\n      <li\n        className={`list-group-item ${\n          theme === \"dark\"\n            ? \"bg-dark text-white border-secondary\"\n            : \"bg-white text-dark\"\n        }`}\n      >\n        <Row className='align-items-center justify-content-between'>\n          {contextMenu.map((m, i) => (\n            <React.Fragment key={i}>\n              <Col xs={3}>{m.label}</Col>\n              <Col\n                xs={9}\n                className='d-flex align-items-center justify-content-between'\n                style={{ columnGap: \"5px\" }}\n              >\n                <i\n                  className='fa fa-minus cursor-pointer'\n                  onClick={() =>\n                    setClause(prev => ({\n                      ...prev,\n                      [targetKey]: clause[targetKey].map((c, j) => {\n                        if (i === j) {\n                          c = c > m.min ? c - 1 : c;\n                        }\n                        return c;\n                      }),\n                    }))\n                  }\n                />\n                <Slider\n                  className='w-100'\n                  min={m.min}\n                  max={m.max}\n                  value={clause[targetKey][i]}\n                  step={1}\n                  orientation='horizontal'\n                  onChange={v =>\n                    setClause(prev => ({\n                      ...prev,\n                      [targetKey]: clause[targetKey].map((c, j) => {\n                        if (i === j) {\n                          m.input = v;\n                          c = v;\n                        }\n                        return c;\n                      }),\n                    }))\n                  }\n                  tooltip={false}\n                />\n                <i\n                  className='fa fa-plus cursor-pointer'\n                  onClick={() =>\n                    setClause(prev => ({\n                      ...prev,\n                      [targetKey]: clause[targetKey].map((c, j) => {\n                        if (i === j) {\n                          c = c < m.max ? c + 1 : c;\n                        }\n                        return c;\n                      }),\n                    }))\n                  }\n                />\n              </Col>\n            </React.Fragment>\n          ))}\n        </Row>\n      </li>\n    </ul>\n  );\n\n  const renderRelation = () =>\n    clause[targetKey].length > 0 && (\n      <ul className='list-group p-1'>\n        {clause[targetKey].map((s, i) => (\n          <React.Fragment key={i}>\n            <li\n              className={`p-1 small list-group-item ${\n                theme === \"dark\"\n                  ? \"bg-dark text-white border-secondary\"\n                  : \"bg-white text-dark\"\n              }`}\n              style={{ columnGap: \"10px\" }}\n            >\n              <div\n                className='d-flex align-items-center justify-content-between'\n                style={{ columnGap: \"5px\" }}\n              >\n                {contextMenu?.length > 0 && (\n                  <OverlayTrigger\n                    trigger='click'\n                    placement='right'\n                    overlay={popover(i, s)}\n                    rootClose\n                  >\n                    <i className='fa fa-bars cursor-pointer' />\n                  </OverlayTrigger>\n                )}\n                <select\n                  className='form-control form-control-sm'\n                  title={s.selectedSource}\n                  value={s.selectedSource}\n                  onChange={e => {\n                    onDropDownChange(e.target.value, i, \"selectedSource\");\n                  }}\n                >\n                  {s.sourceTable?.fields?.length &&\n                    s.sourceTable.fields.map((f, i) => (\n                      <option\n                        key={i}\n                        value={`${s.sourceTable.label}.${f}`}\n                      >{`${s.sourceTable.label}.${f}`}</option>\n                    ))}\n                </select>\n                <div className='fs-3 lh-1'>&asymp;</div>\n                <select\n                  className='form-control form-control-sm'\n                  title={s.selectedTarget}\n                  value={s.selectedTarget}\n                  onChange={e => {\n                    onDropDownChange(e.target.value, i, \"selectedTarget\");\n                  }}\n                >\n                  {s.targetTable?.fields?.length > 0 &&\n                    s.targetTable.fields.map((f, i) => (\n                      <option\n                        key={i}\n                        value={`${s.targetTable.label}.${f}`}\n                      >{`${s.targetTable.label}.${f}`}</option>\n                    ))}\n                </select>\n                <div className='small'>{s.label}</div>\n                <i\n                  onClick={() => onDeleteHandle(i)}\n                  className='fa fa-times-circle cursor-pointer text-danger'\n                />\n              </div>\n            </li>\n          </React.Fragment>\n        ))}\n      </ul>\n    );\n\n  const renderConditionalType = () => {\n    if (type === \"array\") {\n      if (Array.isArray(clause[targetKey]) && clause[targetKey].length > 0) {\n        return renderArrayType();\n      }\n    }\n    if (type === \"string\") {\n      if (typeof clause[targetKey] === \"string\" && clause[targetKey] !== \"\") {\n        return renderStringType();\n      }\n    }\n    if (type === \"arrayOfObjects\") {\n      if (clause[targetKey].length > 0) {\n        return renderArrayOfObjectType();\n      }\n    }\n    if (type === \"range\") {\n      return renderRange();\n    }\n    if (type === \"relation\") {\n      return renderRelation();\n    }\n  };\n\n  return (\n    <div className='m-1'>\n      <div\n        className={`rounded border border-1 ${\n          theme === \"dark\" ? \"border-secondary\" : \"\"\n        }`}\n        onDrop={e => onDropHandle(e)}\n      >\n        <div\n          className='small p-1'\n          style={{\n            ...((tableDragging?.source?.includes(targetKey) ||\n              fieldDragging?.source?.includes(targetKey)) && {\n              background: \"var(--app-theme-bg-color)\",\n              borderRadius: \"0.375rem\",\n            }),\n          }}\n        >\n          <kbd className='bg-secondary'>{targetKey.toUpperCase()}</kbd>\n        </div>\n        {renderConditionalType()}\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicClause;\n","import React, { useContext, useState, createContext, useEffect } from \"react\";\nimport {\n  Modal,\n  ButtonGroup,\n  Button,\n  Dropdown,\n  Popover,\n  OverlayTrigger,\n  Row,\n  Col,\n  Form,\n} from \"react-bootstrap\";\nimport WorkbookContext from \"../WorkbookContext\";\nimport { UserContext } from \"../../../contexts/UserContext\";\nimport { VerticalPanes, Pane } from \"../VerticalPane\";\nimport DSOptions from \"../DataSourceOptions\";\nimport DynamicClause from \"./DynamicClause\";\nimport apiInstance from \"../../../services/apiServices\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport { MyAlertContext } from \"../../../contexts/AlertContext\";\nimport { UpgradeHeading, UpgradeContent } from \"../../payment/Upgrade\";\n\nexport const DSContext = createContext([{}, () => {}]);\n\nconst DataSource = props => {\n  const intl = useIntl();\n  const userContext = useContext(UserContext);\n  const workbookContext = useContext(WorkbookContext);\n  const myAlertContext = useContext(MyAlertContext);\n  const {\n    theme,\n    sheets,\n    setSheets,\n    activeSheet,\n    activeChart,\n    savedQueryList,\n    setSavedQueryList,\n    fetchSavedQueryList,\n  } = workbookContext;\n\n  const [massageData, setMassageData] = useState({});\n\n  useEffect(() => {\n    const selectedSheetChartMassage = [...sheets]\n      .filter(f => f.id === activeSheet)[0]\n      ?.charts.filter(f => f.id === activeChart)[0]?.massageConfig;\n    setMassageData(selectedSheetChartMassage);\n  }, [sheets, activeSheet, activeChart]);\n\n  const selectedSheetChartData = sheets\n    .filter(f => f.id === activeSheet)[0]\n    ?.charts.filter(f => f.id === activeChart)[0]?.props.data;\n\n  const [show, setShow] = useState(false);\n  const [payload, setPayload] = useState({});\n  const [activeDataSource, setActiveDataSource] = useState(\"MP\");\n  const optionsConfig = [\n    {\n      id: \"MP\",\n      label: \"SQL\",\n      tables: [\n        {\n          label: \"banks\",\n          fields: [\n            \"bank_id\",\n            \"bank_name\",\n            \"bank_account_number\",\n            \"bank_swift_code\",\n            \"bank_account_type\",\n            \"bank_country\",\n            \"bank_sort\",\n            \"bank_locale\",\n            \"bank_currency\",\n          ],\n        },\n        {\n          label: \"income_expense_category\",\n          fields: [\n            \"inc_exp_cat_id\",\n            \"inc_exp_cat_name\",\n            \"inc_exp_cat_is_metric\",\n            \"inc_exp_cat_is_plan_metric\",\n          ],\n        },\n        {\n          label: \"income_expense\",\n          fields: [\n            \"inc_exp_id\",\n            \"inc_exp_name\",\n            \"inc_exp_amount\",\n            \"inc_exp_plan_amount\",\n            \"inc_exp_type\",\n            \"inc_exp_date\",\n            \"inc_exp_added_at\",\n            \"inc_exp_category\",\n            \"inc_exp_bank\",\n            \"inc_exp_comments\",\n            \"inc_exp_is_planned\",\n            \"inc_exp_is_income_metric\",\n          ],\n        },\n        {\n          label: \"credit_cards\",\n          fields: [\n            \"credit_card_id\",\n            \"credit_card_name\",\n            \"credit_card_number\",\n            \"credit_card_start_date\",\n            \"credit_card_end_date\",\n            \"credit_card_payment_date\",\n            \"credit_card_annual_interest\",\n            \"credit_card_locale\",\n            \"credit_card_currency\",\n          ],\n        },\n        {\n          label: \"credit_card_transactions\",\n          fields: [\n            \"cc_id\",\n            \"cc_transaction\",\n            \"cc_date\",\n            \"cc_opening_balance\",\n            \"cc_payment_credits\",\n            \"cc_purchases\",\n            \"cc_taxes_interest\",\n            \"cc_for_card\",\n            \"cc_inc_exp_cat\",\n            \"cc_comments\",\n            \"cc_transaction_status\",\n            \"cc_added_at\",\n          ],\n        },\n      ],\n      hasUpload: false,\n    },\n    {\n      id: \"CSV\",\n      label: \"CSV\",\n      fileType: \"text/csv,text/comma-separated-values,application/csv\",\n      hasUpload: true,\n    },\n    {\n      id: \"JSON\",\n      label: \"JSON\",\n      fileType: \"application/json\",\n      hasUpload: true,\n    },\n  ];\n  const initClause = {\n    select: [],\n    from: \"\",\n    where: [],\n    join: [],\n    groupBy: [],\n    orderBy: [],\n    limit: [1000, 0],\n  };\n  const [clause, setClause] = useState(initClause);\n  const [tableDragging, setTableDragging] = useState({});\n  const [fieldDragging, setFieldDragging] = useState({});\n  const [response, setResponse] = useState(selectedSheetChartData);\n  const [errorResponse, setErrorResponse] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [dataView, setDataView] = useState(\"json\");\n  const [file, setFile] = useState({\n    id: null,\n    name: \"\",\n    appId: userContext.userConfig.appId,\n  });\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [selectedWBFields, setSelectedWBFields] = useState([]);\n  const [table, setTable] = useState(\"\");\n\n  const onResetClause = () => {\n    setClause(initClause);\n    setResponse([]);\n    setErrorResponse({});\n    setFile(prev => ({\n      ...prev,\n      id: null,\n      name: \"\",\n    }));\n  };\n\n  const onSaveClick = () => {\n    setSaveLoading(true);\n    const formdata = new FormData();\n    const newFile = {\n      ...file,\n      query: clause,\n    };\n    const blobFile = new Blob([JSON.stringify(newFile, null, 2)], {\n      type: \"application/json\",\n    });\n    formdata.append(\"fileData\", blobFile);\n    apiInstance\n      .post(\"workbook/saveDatasource\", formdata)\n      .then(({ data }) => {\n        if (data.response !== null && data.response) {\n          setFile(prev => ({\n            ...prev,\n            id: data.response,\n          }));\n          fetchSavedQueryList();\n          userContext.renderToast({\n            position: \"bottom-center\",\n            message: intl.formatMessage({\n              id: \"transactionSavedSuccessfully\",\n              defaultMessage: \"transactionSavedSuccessfully\",\n            }),\n          });\n        }\n        if (data.response === null) {\n          setShow(false);\n          myAlertContext.setConfig({\n            show: true,\n            className: \"alert-danger border-0 text-dark\",\n            type: \"danger\",\n            dismissible: true,\n            heading: <UpgradeHeading />,\n            content: <UpgradeContent />,\n          });\n        }\n        if (data.response !== null && !data.response) {\n          userContext.renderToast({\n            position: \"bottom-center\",\n            type: \"error\",\n            icon: \"fa fa-times-circle\",\n            message: intl.formatMessage({\n              id: \"noFormChangeFound\",\n              defaultMessage: \"noFormChangeFound\",\n            }),\n          });\n        }\n      })\n      .catch(e => {\n        console.log(\"bbb\", e);\n        userContext.renderToast({\n          type: \"error\",\n          icon: \"fa fa-times-circle\",\n          position: \"bottom-center\",\n          message: intl.formatMessage({\n            id: \"somethingWentWrong\",\n            defaultMessage: \"somethingWentWrong\",\n          }),\n        });\n      })\n      .finally(() => setSaveLoading(false));\n  };\n\n  const getPrimaryProperty = key => {\n    const appIdRef = {\n      banks: \"bank_appId\",\n      credit_cards: \"credit_card_appId\",\n      credit_card_transactions: \"cc_appId\",\n      income_expense: \"inc_exp_appId\",\n      income_expense_category: \"inc_exp_cat_appId\",\n    };\n    return appIdRef[key];\n  };\n\n  const onRunQuery = () => {\n    setResponse([]);\n    setErrorResponse({});\n    setLoading(true);\n    const formdata = new FormData();\n    formdata.append(\n      \"appIdWhere\",\n      `${payload.from}.${getPrimaryProperty(payload.from)} = '${\n        userContext.userConfig.appId\n      }'`,\n    );\n    formdata.append(\"query\", JSON.stringify(payload));\n    apiInstance\n      .post(\"workbook/fetchDynamicQuery\", formdata)\n      .then(({ data }) => {\n        if (data.status) {\n          setResponse(data.response);\n        } else {\n          setErrorResponse(data.response);\n        }\n      })\n      .catch(e => {\n        setResponse([]);\n        setErrorResponse({ errorMessage: \"Unknown error\" });\n      })\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    const pay = {\n      select: clause.select.map(({ query }) => query),\n      from: clause.from,\n      where: clause.where.map(({ row }) => row),\n      join: clause.join.map(({ array }) => array),\n      groupBy: clause.groupBy.map(({ data }) => data),\n      orderBy: clause.orderBy.map(({ row }) => row),\n      limit: clause.limit,\n    };\n    setPayload(pay);\n  }, [clause]);\n\n  const tableView = data => {\n    const heads = Object.keys(data[0]);\n    return (\n      <table\n        className={`table table-sm table-${\n          theme === \"dark\" ? \"dark\" : \"white\"\n        } small`}\n      >\n        <thead style={{ position: \"sticky\", top: \"-5px\", zIndex: 1 }}>\n          <tr>\n            {heads.map((head, i) => (\n              <th key={i} className='icon-bni text-truncate'>\n                {head}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody className='fw-light'>\n          {data.map((t, i) => (\n            <tr key={i}>\n              {Object.entries(t).map((r, j) => (\n                <td key={j} className='text-truncate'>\n                  {r[1]}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  const onClickQueryList = (id, type) => {\n    const formdata = new FormData();\n    formdata.append(\"id\", id);\n    formdata.append(\"type\", type);\n    formdata.append(\"appId\", userContext.userConfig.appId);\n    apiInstance\n      .post(\"workbook/fetchQueryObjectById\", formdata)\n      .then(({ data }) => {\n        if (type === \"saved\") {\n          setClause(JSON.parse(data.response.dsq_object));\n          setFile(prev => ({\n            ...prev,\n            id: data.response.dsq_id,\n            name: data.response.dsq_name,\n          }));\n        } else {\n          setClause(JSON.parse(data.response.dsIbq_object));\n          setFile(prev => ({\n            ...prev,\n            id: null,\n            name: \"\",\n          }));\n        }\n      })\n      .catch(() => {});\n  };\n\n  const onDeleteSavedQuery = () => {\n    const formdata = new FormData();\n    formdata.append(\"id\", file.id);\n    formdata.append(\"appId\", userContext.userConfig.appId);\n    apiInstance\n      .post(\"workbook/deleteSavedQuery\", formdata)\n      .then(({ data }) => {\n        if (data.response) {\n          setSavedQueryList(prev => ({\n            ...prev,\n            saved: savedQueryList.saved.filter(\n              f => String(f.dsq_id) !== String(file.id),\n            ),\n          }));\n          setFile(prev => ({\n            ...prev,\n            id: null,\n            name: \"\",\n          }));\n          userContext.renderToast({\n            position: \"bottom-center\",\n            message: intl.formatMessage({\n              id: \"querySuccessfullyDeleted\",\n              defaultMessage: \"querySuccessfullyDeleted\",\n            }),\n          });\n        } else {\n          userContext.renderToast({\n            position: \"bottom-center\",\n            type: \"error\",\n            icon: \"fa fa-times-circle\",\n            message: intl.formatMessage({\n              id: \"queryDeleteFailed\",\n              defaultMessage: \"queryDeleteFailed\",\n            }),\n          });\n        }\n      })\n      .catch(e => {\n        userContext.renderToast({\n          type: \"error\",\n          icon: \"fa fa-times-circle\",\n          message: intl.formatMessage({\n            id: \"somethingWentWrong\",\n            defaultMessage: \"somethingWentWrong\",\n          }),\n        });\n      })\n      .finally(() => document.body.click());\n  };\n\n  const confirmDeletePopover = () => (\n    <Popover style={{ zIndex: 10000 }}>\n      <Popover.Header as='div' className={`bni-bg bni-text py-1 px-2`}>\n        <small>\n          <FormattedMessage id='confirmDelete' defaultMessage='confirmDelete' />\n        </small>\n      </Popover.Header>\n      <Popover.Body\n        style={{ columnGap: \"5px\" }}\n        className='p-1 d-flex align-items-center justify-content-between'\n      >\n        <button\n          onClick={() => onDeleteSavedQuery()}\n          className={`btn btn-sm btn-danger w-100 py-0`}\n        >\n          <FormattedMessage id='yes' defaultMessage='yes' />\n        </button>\n        <button\n          onClick={() => document.body.click()}\n          className={`btn btn-sm btn-secondary w-100 py-0`}\n        >\n          <FormattedMessage id='no' defaultMessage='no' />\n        </button>\n      </Popover.Body>\n    </Popover>\n  );\n\n  const onMassageChangeHandle = async (source, value) => {\n    const newSheet = sheets.map(sheet => {\n      if (sheet.id === activeSheet) {\n        sheet.charts = sheet.charts.map(chart => {\n          if (chart.id === activeChart) {\n            chart.massageConfig.keys = chart.massageConfig.keys.map(k =>\n              k.source === source ? { ...k, target: value } : k,\n            );\n            chart.props.data = chart.props.data.map(d => {\n              if (d.hasOwnProperty(value)) {\n                d[source] = !isNaN(Number(d[value]))\n                  ? Number(d[value])\n                  : d[value];\n              }\n              return d;\n            });\n          }\n          return chart;\n        });\n      }\n      return sheet;\n    });\n    await setSheets(newSheet);\n  };\n\n  return (\n    <DSContext.Provider\n      value={{\n        clause,\n        setClause,\n        optionsConfig,\n        tableDragging,\n        setTableDragging,\n        fieldDragging,\n        setFieldDragging,\n        response,\n        setResponse,\n        errorResponse,\n        setErrorResponse,\n        activeDataSource,\n        setActiveDataSource,\n        selectedWBFields,\n        setSelectedWBFields,\n        table,\n        setTable,\n      }}\n    >\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        centered\n        size='xl'\n        backdrop='static'\n        style={{ zIndex: 10000 }}\n        fullscreen\n        enforceFocus={false}\n      >\n        <Modal.Header closeButton className='py-2'>\n          <Modal.Title as={\"small\"}>\n            <i className='fa fa-database pe-2' />\n            <FormattedMessage id='dataSource' defaultMessage='dataSource' />\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body\n          className={`p-2 ${\n            theme === \"dark\" ? \"bg-dark text-white\" : \"bg-white text-dark\"\n          }`}\n        >\n          <VerticalPanes\n            theme={theme}\n            style={{ height: \"calc(100vh - 105px)\" }}\n            className={`border border-1 ${\n              theme === \"dark\" ? \"border-secondary\" : \"\"\n            } rounded`}\n          >\n            <Pane\n              width={\"20%\"}\n              className={`border border-1 ${\n                theme === \"dark\" ? \"border-secondary\" : \"\"\n              } border-start-0 border-top-0 border-bottom-0`}\n            >\n              <DSOptions config={optionsConfig} />\n            </Pane>\n            {activeDataSource === \"MP\" && (\n              <Pane\n                width={\"20%\"}\n                className={`${\n                  theme === \"dark\" ? \"border-secondary\" : \"\"\n                } border-top-0 border-bottom-0`}\n              >\n                <div className='border-0 rounded-0 w-100 border-0 bni-bg py-1 text-center text-dark small'>\n                  <FormattedMessage id='fields' defaultMessage='fields' />\n                </div>\n                <div className=''>\n                  {selectedWBFields?.length\n                    ? selectedWBFields.map((sel, i) => (\n                        <div\n                          draggable={true}\n                          className={`cursor-pointer p-1 small border-bottom ${\n                            theme === \"dark\" ? \"border-secondary\" : \"\"\n                          }`}\n                          key={i}\n                          onDrag={() =>\n                            setFieldDragging({\n                              source: [\"select\", \"where\", \"groupBy\", \"orderBy\"],\n                            })\n                          }\n                          onDragEnd={() => setFieldDragging({})}\n                          onDragStart={e => {\n                            e.dataTransfer.setData(\n                              \"text\",\n                              JSON.stringify({\n                                source: [\n                                  \"select\",\n                                  \"where\",\n                                  \"groupBy\",\n                                  \"orderBy\",\n                                ],\n                                data: `${table}.${sel}`,\n                              }),\n                            );\n                          }}\n                        >\n                          {sel}\n                        </div>\n                      ))\n                    : null}\n                </div>\n              </Pane>\n            )}\n            {activeDataSource === \"MP\" && (\n              <Pane\n                width={\"30%\"}\n                className={`border border-1 ${\n                  theme === \"dark\" ? \"border-secondary\" : \"\"\n                } border-top-0 border-bottom-0`}\n              >\n                <div\n                  className={`border-0 rounded-0 w-100 bni-bg py-1 text-center text-dark small`}\n                >\n                  <FormattedMessage\n                    id='clausesAndModifiers'\n                    defaultMessage='clausesAndModifiers'\n                  />\n                </div>\n                <div\n                  className=''\n                  style={{\n                    height: \"calc(100% - 32px)\",\n                    overflowY: \"auto\",\n                    overflowX: \"hidden\",\n                  }}\n                >\n                  <DynamicClause\n                    targetKey='select'\n                    type='array'\n                    contextMenu={[\n                      { label: \"NULL\", mode: \"function\" },\n                      { label: \"SUM\", mode: \"function\" },\n                      {\n                        label: \"SUMIF\",\n                        mode: \"propertyBindingFunction\",\n                        pieces: [\"SUM(IF({0}\", \"{1}\", \"{2},\", \"{3},0))\"],\n                        hasQuotes: [false, false, true, false],\n                      },\n                      { label: \"COUNT\", mode: \"function\" },\n                      {\n                        label: \"COUNTIF\",\n                        mode: \"propertyBindingFunction\",\n                        pieces: [\"COUNT(IF({0}\", \"{1}\", \"{2},\", \"{3},0))\"],\n                        hasQuotes: [false, false, true, false],\n                      },\n                      { label: \"MIN\", mode: \"function\" },\n                      {\n                        label: \"MINIF\",\n                        mode: \"propertyBindingFunction\",\n                        pieces: [\"MIN(IF({0}\", \"{1}\", \"{2},\", \"{3},0))\"],\n                        hasQuotes: [false, false, true, false],\n                      },\n                      { label: \"MAX\", mode: \"function\" },\n                      {\n                        label: \"MAXIF\",\n                        mode: \"propertyBindingFunction\",\n                        pieces: [\"MAX(IF({0}\", \"{1}\", \"{2},\", \"{3},0))\"],\n                        hasQuotes: [false, false, true, false],\n                      },\n                      { label: \"AVG\", mode: \"function\" },\n                      {\n                        label: \"AVGIF\",\n                        mode: \"propertyBindingFunction\",\n                        pieces: [\"AVG(IF({0}\", \"{1}\", \"{2},\", \"{3},0))\"],\n                        hasQuotes: [false, false, true, false],\n                      },\n                      { label: \"DISTINCT\", mode: \"function\" },\n                    ]}\n                    showAlias={true}\n                  />\n                  <DynamicClause targetKey='from' type='string' />\n                  <DynamicClause\n                    targetKey='where'\n                    type='arrayOfObjects'\n                    suffixList={[\"AND\", \"OR\"]}\n                    contextMenu={[\n                      {\n                        label: \"EQUALTO\",\n                        mode: \"operator\",\n                        value: \"= '{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"NOTEQUALTO\",\n                        mode: \"operator\",\n                        value: \"!= '{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"LESSTHAN\",\n                        mode: \"operator\",\n                        value: \"< '{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"number\",\n                          defaultMessage: \"number\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"GREATERTHAN\",\n                        mode: \"operator\",\n                        value: \"> '{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"number\",\n                          defaultMessage: \"number\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"LESSTHANEQUALTO\",\n                        mode: \"operator\",\n                        value: \"<= '{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"number\",\n                          defaultMessage: \"number\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"GREATERTHANEQUALTO\",\n                        mode: \"operator\",\n                        value: \">= '{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"number\",\n                          defaultMessage: \"number\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"CONTAINS\",\n                        mode: \"operator\",\n                        value: \"LIKE '%{a}%'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"STARTSWITH\",\n                        mode: \"operator\",\n                        value: \"LIKE '{a}%'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"ENDSWITH\",\n                        mode: \"operator\",\n                        value: \"LIKE '%{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"DOESNOTCONTAIN\",\n                        mode: \"operator\",\n                        value: \"NOT LIKE '%{a}%'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"DOESNOTBEGINWITH\",\n                        mode: \"operator\",\n                        value: \"NOT LIKE '{a}%'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"DOESNOTENDWITH\",\n                        mode: \"operator\",\n                        value: \"NOT LIKE '%{a}'\",\n                        valueType: \"SINGLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"ISNULL\",\n                        mode: \"operator\",\n                        value: \"IS NULL\",\n                        valueType: \"NULL\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"ISNOTNULL\",\n                        mode: \"operator\",\n                        value: \"IS NOT NULL\",\n                        valueType: \"NULL\",\n                        placeholder: intl.formatMessage({\n                          id: \"stringNumber\",\n                          defaultMessage: \"stringNumber\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"IN\",\n                        mode: \"operator\",\n                        value: \"IN {n}\",\n                        valueType: \"MULTIPLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"commaSeparatedValues\",\n                          defaultMessage: \"commaSeparatedValues\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"NOTIN\",\n                        mode: \"operator\",\n                        value: \"NOT IN {n}\",\n                        valueType: \"MULTIPLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"commaSeparatedValues\",\n                          defaultMessage: \"commaSeparatedValues\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                      {\n                        label: \"BETWEEN\",\n                        mode: \"operator\",\n                        value: \"BETWEEN '{a}' AND '{b}'\",\n                        valueType: \"DOUBLE\",\n                        placeholder: intl.formatMessage({\n                          id: \"commaSeparatedValues\",\n                          defaultMessage: \"commaSeparatedValues\",\n                        }),\n                        suffix: \"AND\",\n                        input: \"\",\n                      },\n                    ]}\n                  />\n                  <DynamicClause\n                    targetKey='join'\n                    type='relation'\n                    contextMenu={[\n                      {\n                        label: \"INNER\",\n                        mode: \"joinQuery\",\n                      },\n                      {\n                        label: \"OUTER\",\n                        mode: \"joinQuery\",\n                      },\n                      {\n                        label: \"LEFT\",\n                        mode: \"joinQuery\",\n                      },\n                      {\n                        label: \"RIGHT\",\n                        mode: \"joinQuery\",\n                      },\n                      {\n                        label: \"LEFT OUTER\",\n                        mode: \"joinQuery\",\n                      },\n                      {\n                        label: \"RIGHT OUTER\",\n                        mode: \"joinQuery\",\n                      },\n                    ]}\n                  />\n                  <DynamicClause targetKey='groupBy' type='array' />\n                  <DynamicClause\n                    targetKey='orderBy'\n                    type='arrayOfObjects'\n                    contextMenu={[\n                      {\n                        label: \"DESC\",\n                        mode: \"operator\",\n                        value: \"DESC\",\n                        valueType: \"NULL\",\n                      },\n                      {\n                        label: \"ASC\",\n                        mode: \"operator\",\n                        value: \"ASC\",\n                        valueType: \"NULL\",\n                      },\n                    ]}\n                  />\n                  <DynamicClause\n                    targetKey='limit'\n                    type='range'\n                    contextMenu={[\n                      {\n                        label: \"Count\",\n                        input: 1000,\n                        min: 0,\n                        max: 1000,\n                      },\n                      {\n                        label: \"Offset\",\n                        input: 0,\n                        min: 0,\n                        max: 1000,\n                      },\n                    ]}\n                  />\n                </div>\n              </Pane>\n            )}\n            <Pane\n              width={activeDataSource === \"MP\" ? \"50%\" : \"80%\"}\n              className={`${theme === \"dark\" ? \"border-secondary\" : \"\"}`}\n            >\n              {activeDataSource === \"MP\" && (\n                <div className='h-50'>\n                  <div\n                    style={{\n                      borderRadius: \"0px 5px 0px 0px\",\n                      columnGap: \"5px\",\n                    }}\n                    className='w-50 d-flex align-items-center justify-content-between border-0 w-100 border-0 bni-bg py-1 ps-2 pe-1 text-dark small'\n                  >\n                    <div className='input-group input-group-sm'>\n                      <label\n                        htmlFor='fileName'\n                        className={`input-group-text btn btn-sm btn-secondary py-0`}\n                      >\n                        <FormattedMessage id='query' defaultMessage='query' />\n                      </label>\n                      <input\n                        type='text'\n                        id='fileName'\n                        className='form-control py-0'\n                        placeholder={intl.formatMessage({\n                          id: \"name\",\n                          defaultMessage: \"name\",\n                        })}\n                        onChange={e =>\n                          setFile(prev => ({\n                            ...prev,\n                            name: e.target.value,\n                          }))\n                        }\n                        value={file.name}\n                        maxLength={25}\n                      />\n                      <button\n                        className='btn btn-sm btn-secondary py-0'\n                        disabled={!clause.from || saveLoading || !file.name}\n                        onClick={() => onSaveClick()}\n                      >\n                        {saveLoading ? (\n                          <i className='fa fa-circle-o-notch fa-spin' />\n                        ) : (\n                          <i className='fa fa-save' />\n                        )}\n                      </button>\n                      <OverlayTrigger\n                        trigger='click'\n                        placement='bottom'\n                        overlay={confirmDeletePopover()}\n                        rootClose\n                      >\n                        <button\n                          className='btn btn-sm btn-danger py-0 rounded-end-1'\n                          disabled={!file.id}\n                        >\n                          <i className='fa fa-trash' />\n                        </button>\n                      </OverlayTrigger>\n\n                      <ButtonGroup size='sm' className='ms-1'>\n                        <Button\n                          variant='secondary'\n                          className='py-0'\n                          onClick={() => onResetClause()}\n                        >\n                          <i className='fa fa-refresh pe-2' />\n                          <FormattedMessage id='reset' defaultMessage='reset' />\n                        </Button>\n                        <Button\n                          variant='secondary'\n                          className='py-0'\n                          onClick={() => onRunQuery()}\n                          disabled={\n                            !(clause.from.length && clause.select.length) ||\n                            loading\n                          }\n                        >\n                          <div\n                            className='d-flex align-items-center justify-content-center '\n                            style={{ columnGap: \"3px\" }}\n                          >\n                            <span>\n                              <FormattedMessage id='run' defaultMessage='run' />\n                            </span>\n                            {!loading ? (\n                              <i className='fa fa-share fa-rotate-180' />\n                            ) : (\n                              <i className='fa fa-circle-o-notch fa-spin'></i>\n                            )}\n                          </div>\n                        </Button>\n                        <Dropdown className='btn-group'>\n                          <Dropdown.Toggle\n                            variant='secondary'\n                            className='btn-sm py-0'\n                          >\n                            <i className='fa fa-quote-left pe-2' />\n                            <FormattedMessage id='load' defaultMessage='load' />\n                          </Dropdown.Toggle>\n                          <Dropdown.Menu\n                            className='overflow-auto'\n                            style={{ maxHeight: \"300px\" }}\n                          >\n                            {savedQueryList?.saved?.length > 0 && [\n                              savedQueryList.saved.map((list, i) => (\n                                <Dropdown.Item\n                                  key={i}\n                                  as='div'\n                                  className='d-flex align-items-center px-1 py-0 small cursor-pointer'\n                                  onClick={() =>\n                                    onClickQueryList(list.dsq_id, \"saved\")\n                                  }\n                                >\n                                  <i className='fa fa-quote-left text-success pe-2' />\n                                  <div className='small'>{list.dsq_name}</div>\n                                </Dropdown.Item>\n                              )),\n                              <Dropdown.Divider key={0} />,\n                            ]}\n                            <Dropdown.Item\n                              className='px-1 py-0 small cursor-pointer'\n                              as='div'\n                            >\n                              <div className='fw-bold'>\n                                <FormattedMessage\n                                  id='inbuiltQueries'\n                                  defaultMessage='inbuiltQueries'\n                                />\n                              </div>\n                            </Dropdown.Item>\n                            {savedQueryList?.inbuilt?.length > 0 &&\n                              savedQueryList.inbuilt.map((list, i) => (\n                                <Dropdown.Item\n                                  key={i}\n                                  as='div'\n                                  className='d-flex align-items-center px-1 py-0 small cursor-pointer'\n                                  onClick={() =>\n                                    onClickQueryList(list.dsIbq_id, \"inbuilt\")\n                                  }\n                                >\n                                  <i className='fa fa-quote-left text-danger pe-2' />\n                                  <small>{list.dsIbq_name}</small>\n                                </Dropdown.Item>\n                              ))}\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </ButtonGroup>\n                    </div>\n                  </div>\n                  <div\n                    className='overflow-auto p-1'\n                    style={{ height: \"calc(100% - 32px)\" }}\n                  >\n                    <pre>{JSON.stringify(payload, null, 2)}</pre>\n                  </div>\n                </div>\n              )}\n              <div className={activeDataSource === \"MP\" ? \"h-50\" : \"h-100\"}>\n                <div\n                  style={\n                    activeDataSource === \"MP\"\n                      ? {}\n                      : { borderTopRightRadius: \"5px\" }\n                  }\n                  className='d-flex align-items-center justify-content-between border-0 w-100 border-0 bni-bg py-1 px-2 text-center text-dark small'\n                >\n                  <div>\n                    <FormattedMessage id='data' defaultMessage='data' />\n                  </div>\n                  <div className='btn-group btn-group-sm'>\n                    <button\n                      type='button'\n                      onClick={() => setDataView(\"json\")}\n                      className={`btn btn-secondary py-0 ${\n                        dataView === \"json\" ? \"active\" : \"\"\n                      }`}\n                      dangerouslySetInnerHTML={{\n                        __html: \"&lcub;&nbsp;JSON&nbsp;&rcub;\",\n                      }}\n                    ></button>\n                    <button\n                      type='button'\n                      onClick={() => setDataView(\"table\")}\n                      className={`btn btn-secondary py-0 ${\n                        dataView === \"table\" ? \"active\" : \"\"\n                      }`}\n                    >\n                      <i className='fa fa-table pe-2' />\n                      <FormattedMessage id='grid' defaultMessage='grid' />\n                    </button>\n                  </div>\n                  <div>\n                    {!loading ? (\n                      <span>\n                        <span className='px-1'>\n                          {response?.length ? response?.length : 0}\n                        </span>\n                        <FormattedMessage\n                          id='recordsFound'\n                          defaultMessage='recordsFound'\n                        />\n                      </span>\n                    ) : (\n                      <i className='fa fa-circle-o-notch fa-spin'></i>\n                    )}\n                  </div>\n                </div>\n                <div\n                  className='overflow-auto p-1'\n                  style={{ height: \"calc(100% - 32px)\" }}\n                >\n                  {(response?.length > 0 || response === null) &&\n                    (dataView === \"json\" ? (\n                      <pre className='small'>\n                        {JSON.stringify(response, null, 2)}\n                      </pre>\n                    ) : (\n                      tableView(response)\n                    ))}\n                  {Object.keys(errorResponse).length > 0 && (\n                    <pre className='text-danger'>\n                      {JSON.stringify(errorResponse, null, 2)}\n                    </pre>\n                  )}\n                </div>\n              </div>\n            </Pane>\n          </VerticalPanes>\n        </Modal.Body>\n        <Modal.Footer\n          className={`border-1 rounded-bottom py-1 px-1 ${\n            theme === \"dark\"\n              ? \"bg-dark text-white border-secondary\"\n              : \"bg-white text-dark\"\n          }`}\n        >\n          <button\n            className='btn btn-bni btn-sm'\n            disabled={!response?.length}\n            onClick={() => {\n              const newSheet = sheets.map(sheet => {\n                if (sheet.id === activeSheet) {\n                  sheet.charts = sheet.charts.map(chart => {\n                    if (chart.id === activeChart) {\n                      chart.props.data = response;\n                    }\n                    return chart;\n                  });\n                }\n                return sheet;\n              });\n              setSheets(newSheet);\n              setShow(false);\n            }}\n          >\n            <i className='fa fa-arrow-circle-down pe-2' />\n            <FormattedMessage id='import' defaultMessage='import' />\n          </button>\n        </Modal.Footer>\n      </Modal>\n      <div className=''>\n        {!response?.length ? (\n          <div\n            onClick={() => setShow(!show)}\n            className='p-5 cursor-pointer bni-border bni-border-all bni-border-all-1 rounded-3 icon-bni d-flex align-items-center justify-content-center'\n          >\n            <FormattedMessage\n              id='clickToLoadData'\n              defaultMessage='clickToLoadData'\n            />\n          </div>\n        ) : (\n          <>\n            <div onClick={() => setShow(!show)}>\n              <div className='py-1 small text-end'>\n                <span className='px-1'>{response.length}</span>\n                <FormattedMessage\n                  id='recordsImported'\n                  defaultMessage='recordsImported'\n                />\n              </div>\n              <div\n                style={{ zoom: \"0.5\", overflow: \"hidden\" }}\n                className='p-1 cursor-pointer bni-border bni-border-all bni-border-all-1 rounded-3 icon-bni'\n              >\n                {tableView(response.slice(0, 5))}\n                <i className='pe-3 pull-right fa fa-ellipsis-h icon-bni' />\n              </div>\n            </div>\n            <div className='small py-1'>\n              <FormattedMessage\n                id='mapFieldsToChart'\n                defaultMessage='mapFieldsToChart'\n              />\n            </div>\n            <Row className='small align-items-center'>\n              {Object.keys(massageData).length > 0 &&\n                massageData?.keys.map((sel, i) => (\n                  <React.Fragment key={i}>\n                    <Col xs={4}>{sel.source}</Col>\n                    <Col xs={2}>\n                      <i className='fa fa-angle-double-right icon-bni fa-2x' />\n                    </Col>\n                    <Col xs={6}>\n                      <Form.Select\n                        size='sm'\n                        defaultValue={sel.target}\n                        className='mb-1 lh-1'\n                        onChange={e =>\n                          onMassageChangeHandle(sel.source, e.target.value)\n                        }\n                      >\n                        <option>--</option>\n                        {Object.keys(response[0]).map((res, j) => (\n                          <option key={j} className='small'>\n                            {res}\n                          </option>\n                        ))}\n                      </Form.Select>\n                    </Col>\n                  </React.Fragment>\n                ))}\n            </Row>\n          </>\n        )}\n      </div>\n    </DSContext.Provider>\n  );\n};\n\nexport default DataSource;\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { Accordion, Card, useAccordionButton } from \"react-bootstrap\";\nimport NumberSlider from \"./ReactiveElements/NumberSlider\";\nimport ColorSwatches from \"./ReactiveElements/ColorSwatches\";\nimport WorkbookContext from \"./WorkbookContext\";\nimport TextInput from \"./ReactiveElements/TextInput\";\nimport Radio from \"./ReactiveElements/Radio\";\nimport Switch from \"./ReactiveElements/Switch\";\nimport SelectBox from \"./ReactiveElements/SelectBox\";\nimport DataSource from \"./ReactiveElements/DataSource\";\nimport _debounce from \"lodash/debounce\";\nimport { animationList } from \"../../components/shared/D3/constants\";\n// import { CHART_SIZE } from \"../../components/shared/D3/constants\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\n\nconst ChartOptions = props => {\n  const intl = useIntl();\n  const workbookContext = useContext(WorkbookContext);\n  const { theme, sheets, setSheets, activeSheet, activeChart, setFile } =\n    workbookContext;\n  const [selectedChartProps, setSelectedChartProps] = useState({});\n\n  const optionList = [\n    {\n      id: \"size\",\n      label: intl.formatMessage({\n        id: \"size\",\n        defaultMessage: \"size\",\n      }),\n      elements: [\n        // {\n        //   component: NumberSlider,\n        //   options: {\n        //     id: \"width\",\n        //     title: \"Width\",\n        //     min: CHART_SIZE.minWidth,\n        //     max: CHART_SIZE.maxWidth,\n        //     step: 1,\n        //     init: 350,\n        //     units: \"px\",\n        //     onChange: data => callBack(data),\n        //   },\n        // },\n        // {\n        //   component: NumberSlider,\n        //   options: {\n        //     id: \"height\",\n        //     title: \"Height\",\n        //     min: CHART_SIZE.minHeight,\n        //     max: CHART_SIZE.maxHeight,\n        //     step: 1,\n        //     init: 500,\n        //     units: \"px\",\n        //     onChange: data => callBack(data),\n        //   },\n        // },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"innerRadius\",\n            title: intl.formatMessage({\n              id: \"innerRadius\",\n              defaultMessage: \"innerRadius\",\n            }),\n            min: 0,\n            max: 100,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"outerRadius\",\n            title: intl.formatMessage({\n              id: \"outerRadius\",\n              defaultMessage: \"outerRadius\",\n            }),\n            min: 100,\n            max: 1000,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"borderRadius\",\n            title: intl.formatMessage({\n              id: \"borderRadius\",\n              defaultMessage: \"borderRadius\",\n            }),\n            min: 1,\n            max: 50,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"markerSize\",\n            title: intl.formatMessage({\n              id: \"markerSize\",\n              defaultMessage: \"markerSize\",\n            }),\n            min: 1,\n            max: 10,\n            step: 1,\n            init: 5,\n            units: \"\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"barHeight\",\n            title: intl.formatMessage({\n              id: \"barHeight\",\n              defaultMessage: \"barHeight\",\n            }),\n            min: 1,\n            max: 50,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"marginTop\",\n            title: intl.formatMessage({\n              id: \"marginTop\",\n              defaultMessage: \"marginTop\",\n            }),\n            min: 0,\n            max: 500,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"marginBottom\",\n            title: intl.formatMessage({\n              id: \"marginBottom\",\n              defaultMessage: \"marginBottom\",\n            }),\n            min: 0,\n            max: 500,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"marginLeft\",\n            title: intl.formatMessage({\n              id: \"marginLeft\",\n              defaultMessage: \"marginLeft\",\n            }),\n            min: 0,\n            max: 500,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"marginRight\",\n            title: intl.formatMessage({\n              id: \"marginRight\",\n              defaultMessage: \"marginRight\",\n            }),\n            min: 0,\n            max: 500,\n            step: 1,\n            init: 5,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"padding\",\n            title: intl.formatMessage({\n              id: \"padding\",\n              defaultMessage: \"padding\",\n            }),\n            min: 0,\n            max: 1,\n            step: 0.1,\n            init: 0.1,\n            units: \"\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"opacity\",\n            title: intl.formatMessage({\n              id: \"opacity\",\n              defaultMessage: \"opacity\",\n            }),\n            min: 0.1,\n            max: 1,\n            step: 0.1,\n            init: 0.1,\n            units: \"\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"fontSize\",\n            title: intl.formatMessage({\n              id: \"fontSize\",\n              defaultMessage: \"fontSize\",\n            }),\n            min: 10,\n            max: 100,\n            step: 1,\n            init: 14,\n            units: \"px\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"xTicks\",\n            title: intl.formatMessage({\n              id: \"xTicks\",\n              defaultMessage: \"xTicks\",\n            }),\n            min: 1,\n            max: 50,\n            step: 1,\n            init: 1,\n            units: \"\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"yTicks\",\n            title: intl.formatMessage({\n              id: \"yTicks\",\n              defaultMessage: \"yTicks\",\n            }),\n            min: 1,\n            max: 50,\n            step: 1,\n            init: 1,\n            units: \"\",\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: NumberSlider,\n          options: {\n            id: \"strokeWidth\",\n            title: intl.formatMessage({\n              id: \"strokeWidth\",\n              defaultMessage: \"strokeWidth\",\n            }),\n            min: 1,\n            max: 10,\n            step: 1,\n            init: 1,\n            units: \"\",\n            onChange: data => callBack(data),\n          },\n        },\n      ],\n    },\n    {\n      id: \"colors\",\n      label: intl.formatMessage({\n        id: \"colors\",\n        defaultMessage: \"colors\",\n      }),\n      elements: [\n        {\n          component: ColorSwatches,\n          options: {\n            id: \"fillColor\",\n            title: intl.formatMessage({\n              id: \"fillColor\",\n              defaultMessage: \"fillColor\",\n            }),\n            init: [],\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: ColorSwatches,\n          options: {\n            id: \"fontColor\",\n            title: intl.formatMessage({\n              id: \"fontColor\",\n              defaultMessage: \"fontColor\",\n            }),\n            init: [],\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: ColorSwatches,\n          options: {\n            id: \"lineColor\",\n            title: intl.formatMessage({\n              id: \"lineColor\",\n              defaultMessage: \"lineColor\",\n            }),\n            init: [],\n            onChange: data => callBack(data),\n          },\n        },\n      ],\n    },\n    {\n      id: \"labels\",\n      label: intl.formatMessage({\n        id: \"label\",\n        defaultMessage: \"label\",\n      }),\n      elements: [\n        {\n          component: TextInput,\n          options: {\n            id: \"name\",\n            title: intl.formatMessage({\n              id: \"name\",\n              defaultMessage: \"name\",\n            }),\n            init: \"\",\n            maxLength: 100,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: TextInput,\n          options: {\n            id: \"xAxisLabel\",\n            title: intl.formatMessage({\n              id: \"xAxisLabel\",\n              defaultMessage: \"xAxisLabel\",\n            }),\n            init: \"\",\n            maxLength: 25,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: TextInput,\n          options: {\n            id: \"yAxisLabel\",\n            title: intl.formatMessage({\n              id: \"yAxisLabel\",\n              defaultMessage: \"yAxisLabel\",\n            }),\n            init: \"\",\n            maxLength: 25,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: TextInput,\n          options: {\n            id: \"tooltipPrefix\",\n            title: intl.formatMessage({\n              id: \"tooltipPrefix\",\n              defaultMessage: \"tooltipPrefix\",\n            }),\n            init: \"\",\n            maxLength: 25,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: TextInput,\n          options: {\n            id: \"tooltipSuffix\",\n            title: intl.formatMessage({\n              id: \"tooltipSuffix\",\n              defaultMessage: \"tooltipSuffix\",\n            }),\n            init: \"\",\n            maxLength: 25,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: TextInput,\n          options: {\n            id: \"className\",\n            title: intl.formatMessage({\n              id: \"className\",\n              defaultMessage: \"className\",\n            }),\n            init: \"\",\n            maxLength: 25,\n            onChange: data => callBack(data),\n          },\n        },\n      ],\n    },\n    {\n      id: \"orientation\",\n      label: intl.formatMessage({\n        id: \"orientation\",\n        defaultMessage: \"orientation\",\n      }),\n      elements: [\n        {\n          component: Radio,\n          options: {\n            id: \"xAxisTicksOrientation\",\n            title: intl.formatMessage({\n              id: \"xAxisTicksOrientation\",\n              defaultMessage: \"xAxisTicksOrientation\",\n            }),\n            init: \"horizontal\",\n            isInline: true,\n            list: [\n              { id: \"hor\", value: \"horizontal\", label: \"Horizontal\" },\n              { id: \"ver\", value: \"vertical\", label: \"Vertical\" },\n            ],\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Radio,\n          options: {\n            id: \"sortClause\",\n            title: intl.formatMessage({\n              id: \"sortClause\",\n              defaultMessage: \"sortClause\",\n            }),\n            init: \"asc\",\n            isInline: true,\n            list: [\n              { id: \"asc\", value: \"asc\", label: \"Ascending\" },\n              { id: \"desc\", value: \"desc\", label: \"Descending\" },\n            ],\n            onChange: data => callBack(data),\n          },\n        },\n      ],\n    },\n    {\n      id: \"selection\",\n      label: intl.formatMessage({\n        id: \"selection\",\n        defaultMessage: \"selection\",\n      }),\n      elements: [\n        {\n          component: SelectBox,\n          options: {\n            id: \"animationClass\",\n            title: intl.formatMessage({\n              id: \"animationClass\",\n              defaultMessage: \"animationClass\",\n            }),\n            init: animationList[0]?.id,\n            list: animationList,\n            onChange: data => {\n              callBack(data);\n            },\n          },\n        },\n        {\n          component: SelectBox,\n          options: {\n            id: \"fontFamily\",\n            title: intl.formatMessage({\n              id: \"fontFamily\",\n              defaultMessage: \"fontFamily\",\n            }),\n            init: \"Arial\",\n            list: [\n              { id: \"Arial\", value: \"Arial\" },\n              { id: \"cursive\", value: \"Cursive\" },\n              { id: \"times-new-roman\", value: \"Times-new-roman\" },\n              { id: \"monospace\", value: \"Monospace\" },\n              { id: \"sans-serif\", value: \"Sans-serif\" },\n              { id: \"system-ui\", value: \"System-ui\" },\n            ],\n            onChange: data => {\n              callBack(data);\n            },\n          },\n        },\n        {\n          component: SelectBox,\n          options: {\n            id: \"emoji\",\n            title: intl.formatMessage({\n              id: \"emoji\",\n              defaultMessage: \"emoji\",\n            }),\n            init: \"😀\",\n            list: [\n              { id: \"😀\", value: \"Smile\" },\n              { id: \"😂\", value: \"Smile & tears of joy\" },\n              { id: \"😇\", value: \"Head around\" },\n              { id: \"🤐\", value: \"Mouth zipped\" },\n              { id: \"😡\", value: \"Enraged face\" },\n              { id: \"😭\", value: \"Crying face\" },\n              { id: \"😱\", value: \"Fear face\" },\n              { id: \"📌\", value: \"Push pin\" },\n              { id: \"❤️‍🩹\", value: \"Read heart\" },\n              { id: \"👍\", value: \"Thumbs uip\" },\n              { id: \"👎\", value: \"Thumbs down\" },\n              { id: \"👏\", value: \"Clapping hands\" },\n              { id: \"🤝\", value: \"Handshake\" },\n              { id: \"🙏\", value: \"Folded hands\" },\n              { id: \"🙅‍♂️\", value: \"Gesture no\" },\n              { id: \"🙆‍♂️\", value: \"Gesture ok\" },\n              { id: \"🙋‍♂️\", value: \"Raising hand\" },\n              { id: \"🤦‍♂️\", value: \"Face palm\" },\n              { id: \"🤷‍♂️\", value: \"shrugging\" },\n              { id: \"👣\", value: \"Foot prints\" },\n              { id: \"🚂\", value: \"Train\" },\n              { id: \"🚗\", value: \"Car\" },\n              { id: \"🛺\", value: \"Auto rickshaw\" },\n              { id: \"🛩\", value: \"Airplane\" },\n              { id: \"🚁\", value: \"Helicopter\" },\n              { id: \"🌪\", value: \"Tornado\" },\n              { id: \"🔥\", value: \"Fire\" },\n              { id: \"💧\", value: \"Droplet\" },\n              { id: \"🧨\", value: \"Fire cracker\" },\n              { id: \"🔔\", value: \"Bell\" },\n              { id: \"🔕\", value: \"Bell with slash\" },\n              { id: \"📞\", value: \"Phone\" },\n              { id: \"🖨\", value: \"Printer\" },\n              { id: \"💻\", value: \"Computer\" },\n              { id: \"💰\", value: \"Money bag\" },\n              { id: \"💳\", value: \"Credit card\" },\n              { id: \"📧\", value: \"Email\" },\n            ],\n            onChange: data => {\n              callBack(data);\n            },\n          },\n        },\n      ],\n    },\n    {\n      id: \"switch\",\n      label: intl.formatMessage({\n        id: \"switch\",\n        defaultMessage: \"switch\",\n      }),\n      elements: [\n        {\n          component: Switch,\n          options: {\n            id: \"showTooltip\",\n            title: intl.formatMessage({\n              id: \"showTooltip\",\n              defaultMessage: \"showTooltip\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showXaxisLabel\",\n            title: intl.formatMessage({\n              id: \"showXaxisLabel\",\n              defaultMessage: \"showXaxisLabel\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showYaxisLabel\",\n            title: intl.formatMessage({\n              id: \"showYaxisLabel\",\n              defaultMessage: \"showYaxisLabel\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showXaxisLine\",\n            title: intl.formatMessage({\n              id: \"showXaxisLine\",\n              defaultMessage: \"showXaxisLine\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showYaxisLine\",\n            title: intl.formatMessage({\n              id: \"showYaxisLine\",\n              defaultMessage: \"showYaxisLine\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showXaxis\",\n            title: intl.formatMessage({\n              id: \"showXaxis\",\n              defaultMessage: \"showXaxis\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showYaxis\",\n            title: intl.formatMessage({\n              id: \"showYaxis\",\n              defaultMessage: \"showYaxis\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"flipXaxis\",\n            title: intl.formatMessage({\n              id: \"flipXaxis\",\n              defaultMessage: \"flipXaxis\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"flipYaxis\",\n            title: intl.formatMessage({\n              id: \"flipYaxis\",\n              defaultMessage: \"flipYaxis\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showAnimation\",\n            title: intl.formatMessage({\n              id: \"showAnimation\",\n              defaultMessage: \"showAnimation\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n        {\n          component: Switch,\n          options: {\n            id: \"showLegend\",\n            title: intl.formatMessage({\n              id: \"showLegend\",\n              defaultMessage: \"showLegend\",\n            }),\n            init: true,\n            onChange: data => callBack(data),\n          },\n        },\n      ],\n    },\n    {\n      id: \"data\",\n      label: intl.formatMessage({\n        id: \"dataSource\",\n        defaultMessage: \"dataSource\",\n      }),\n      elements: [\n        {\n          component: DataSource,\n          options: {\n            id: \"data\",\n            title: intl.formatMessage({\n              id: \"dataSource\",\n              defaultMessage: \"dataSource\",\n            }),\n            init: {},\n            onChange: data => callBack(data),\n          },\n        },\n      ],\n    },\n  ];\n\n  useEffect(() => {\n    const bProps = sheets\n      .filter(f => f.id === activeSheet)[0]\n      ?.charts.filter(f => f.id === activeChart)[0]?.props;\n    setSelectedChartProps({});\n    setTimeout(() => {\n      setSelectedChartProps(bProps);\n    }, 100);\n  }, [activeChart]);\n\n  const callBack = useCallback(\n    _debounce(params => {\n      fn(params);\n    }, 300),\n    [activeSheet, activeChart],\n  );\n\n  const fn = params => {\n    const newSheet = sheets.map(sheet => {\n      if (sheet.id === activeSheet) {\n        sheet.charts = sheet.charts.map(chart => {\n          if (chart.id === activeChart) {\n            chart.props = { ...chart.props, [params.id]: params.value };\n          }\n          return chart;\n        });\n      }\n      return sheet;\n    });\n    setSheets(newSheet);\n    setFile(prev => ({ ...prev, isSaved: false }));\n  };\n\n  function CustomToggle({ children, eventKey, eventLabel }) {\n    const decoratedOnClick = useAccordionButton(eventKey, () => false);\n\n    return (\n      <button\n        type='button'\n        className={`text-start p-1 btn btn-sm ${\n          theme === \"dark\" ? \"btn-black text-light\" : \"btn-white text-black\"\n        }`}\n        onClick={decoratedOnClick}\n      >\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <div\n        className={`px-2 py-1 border-1 border-start border-${theme} bni-bg text-black`}\n        style={{ borderTopRightRadius: \"0.25rem\" }}\n      >\n        <small>\n          <FormattedMessage id='chartOptions' defaultMessage='chartOptions' />\n        </small>\n      </div>\n      <div\n        className=''\n        style={{\n          maxHeight: \"calc(100vh - 185px)\",\n          overflowY: \"auto\",\n          overflowX: \"hidden\",\n        }}\n      >\n        {/* optionList[5].id */}\n        <Accordion defaultActiveKey={null} className=''>\n          <Card\n            className={`border-0 rounded-0 ${\n              theme === \"dark\" ? \"bg-dark text-white\" : \"bg-white text-dark\"\n            }`}\n          >\n            {selectedChartProps &&\n              Object.keys(selectedChartProps).length > 0 &&\n              optionList.map(list => {\n                return (\n                  list.elements.filter(e =>\n                    Object.keys(selectedChartProps).includes(e.options.id),\n                  ).length > 0 && (\n                    <React.Fragment key={list.id}>\n                      <Card.Header className='row m-0 p-0 rounded-0'>\n                        <CustomToggle\n                          eventLabel={list.label}\n                          eventKey={list.id}\n                        >\n                          {list.label}\n                        </CustomToggle>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={list.id}>\n                        <Card.Body className='p-2'>\n                          {list.elements.map(ele => {\n                            const Component = ele.component;\n                            const defaultMerge = {\n                              ...ele.options,\n                              init: selectedChartProps[ele.options.id],\n                            };\n                            return (\n                              selectedChartProps.hasOwnProperty(\n                                ele.options.id,\n                              ) && (\n                                <Component\n                                  key={ele.options.id}\n                                  {...defaultMerge}\n                                />\n                              )\n                            );\n                          })}\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </React.Fragment>\n                  )\n                );\n              })}\n          </Card>\n        </Accordion>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartOptions;\n","import React from \"react\";\n\nexport const Pane = props => {\n  const { children, width, className } = props;\n  return (\n    <div className={`${className}`} style={{ width }}>\n      {children}\n    </div>\n  );\n};\n\nexport const VerticalPanes = props => {\n  const { children, theme, className, style } = props;\n  return (\n    <div\n      style={style}\n      className={`d-flex ${\n        theme === \"dark\" ? \"bg-dark\" : \"bg-white\"\n      } ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;"],"names":["UpgradeHeading","_jsx","children","_jsxs","className","FormattedMessage","id","defaultMessage","UpgradeContent","Link","to","props","units","title","min","max","init","step","onChange","value","setValue","useState","newVal","setNewValue","useEffect","decValue","isFinite","Number","toFixed","Math","floor","toString","split","length","countDecimals","Row","Col","sm","onClick","xs","Slider","orientation","v","tooltip","workbookContext","useContext","WorkbookContext","theme","color","setColor","type","setType","scheme","document","documentElement","style","getPropertyValue","d3","OverlayTrigger","trigger","placement","overlay","Popover","width","maxWidth","Header","as","Form","Check","checked","label","e","target","Body","map","colors","i","c","j","code","arrColor","onSetColor","rootClose","disabled","background","index","bArr","filter","f","onDeleteColor","rest","htmlFor","list","isInline","l","name","defaultChecked","lg","defaultValue","ButtonGroup","React","_ref","ref","bsPrefix","size","vertical","role","Component","prefix","useBootstrapPrefix","baseClass","classNames","displayName","config","intl","useIntl","userContext","UserContext","dSContext","DSContext","setTableDragging","activeDataSource","setActiveDataSource","setSelectedWBFields","setTable","setResponse","setErrorResponse","file","setFile","fileSize","CustomToggle","_ref2","eventKey","decoratedOnClick","useAccordionButton","borderRadius","onDrop","acceptedFiles","processData","fileType","Promise","resolve","reject","input","reader","FileReader","readAsText","onload","lines","allText","result","allTextLines","headers","data","tarr","push","replace","replaceAll","joined","Object","assign","Error","formatMessage","JSON","parse","array","Array","isArray","onerror","then","res","catch","eObject","stringify","getOwnPropertyNames","errorMessage","message","renderToast","position","icon","_config$","_config$$tables$","_config$2","_config$2$tables$","tables","fields","Accordion","defaultActiveKey","ii","Card","Collapse","hasUpload","Dropzone","accept","_ref3","_file$","_file$2","getRootProps","getInputProps","isDragAccept","isDragReject","classes","placeholder","fontSize","lineHeight","display","helpers","shorten","OffCanvas","btnValue","btnClassName","zIndex","height","alt","src","require","table","draggable","onDrag","source","onDragEnd","onDragStart","dataTransfer","setData","alignDirection","PropTypes","alignPropType","md","xl","xxl","propTypes","href","isRequired","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","variant","DropdownButton","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","renderOnMount","_tableDragging$source","_fieldDragging$source","targetKey","contextMenu","suffixList","showAlias","clause","setClause","optionsConfig","tableDragging","fieldDragging","selectedWBFields","doubleInputChoice","start","moment","startOf","toDate","end","endOf","selectedDoubleInput","setSelectedDoubleInput","popover","m","onClickFunction","onChangeAlias","prev","query","row","body","click","mode","iPieces","pieces","hasQuotes","p","isNaN","join","valueType","suffix","targetTable","selectedSource","selectedTarget","onChangeWhereClause","val","bool","onDeleteHandle","arguments","undefined","_","onDropDownChange","key","onChangeSelectParams","subIndex","inp","r","k","renderArrayOfObjectType","s","columnGap","includes","Control","zoom","DateTimePicker","format","clearIcon","Toggle","Menu","d","Item","a","onSuffixClick","getData","Set","_contextMenu$","_contextMenu$2","_getFieldList","_getFieldList2","_getFieldList3","_contextMenu$3","_contextMenu$4","getFieldList","where","onString","targetString","joinType","sourceTable","onDropHandle","toUpperCase","_s$row","maxLength","onKeyDown","preventDefault","InputGroup","t","FormControl","_s$sourceTable","_s$sourceTable$fields","_s$targetTable","_s$targetTable$fields","createContext","_sheets$filter$","_sheets$filter$$chart","_savedQueryList$saved","_savedQueryList$inbui","myAlertContext","MyAlertContext","sheets","setSheets","activeSheet","activeChart","savedQueryList","setSavedQueryList","fetchSavedQueryList","massageData","setMassageData","_filter$","_filter$$charts$filte","selectedSheetChartMassage","charts","massageConfig","selectedSheetChartData","show","setShow","payload","setPayload","initClause","select","from","groupBy","orderBy","limit","setFieldDragging","response","errorResponse","loading","setLoading","dataView","setDataView","appId","userConfig","saveLoading","setSaveLoading","pay","_ref4","_ref5","_ref6","_ref7","tableView","heads","keys","top","head","entries","onClickQueryList","formdata","FormData","append","apiInstance","post","_ref8","dsq_object","dsq_id","dsq_name","dsIbq_object","Provider","Modal","onHide","centered","backdrop","fullscreen","enforceFocus","closeButton","Title","VerticalPanes","Pane","DSOptions","sel","overflowY","overflowX","DynamicClause","onSaveClick","newFile","blobFile","Blob","setConfig","dismissible","heading","content","console","log","finally","onDeleteSavedQuery","_ref9","saved","String","Button","onRunQuery","banks","credit_cards","credit_card_transactions","income_expense","income_expense_category","status","maxHeight","Divider","inbuilt","dsIbq_id","dsIbq_name","borderTopRightRadius","dangerouslySetInnerHTML","__html","Footer","newSheet","sheet","chart","_Fragment","overflow","slice","Select","async","hasOwnProperty","onMassageChangeHandle","_animationList$","selectedChartProps","setSelectedChartProps","optionList","elements","component","NumberSlider","options","callBack","ColorSwatches","TextInput","Radio","SelectBox","animationList","Switch","DataSource","bProps","setTimeout","useCallback","_debounce","params","fn","isSaved","eventLabel","ele","defaultMerge","AccordionCollapse","activeEventKey","AccordionContext","in","isAccordionItemSelected","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionHeader","AccordionButton","AccordionItem","contextValue","useMemo","activeKey","onSelect","flush","alwaysOpen","controlledProps","useUncontrolled","eventKeyPassed","accordionOnClick","context"],"sourceRoot":""}