{"version":3,"sources":["components/shared/D3/DonutChart.js","components/shared/D3/constants.js"],"names":["DonutChart","props","svgRef","useRef","width","height","outerRadius","innerRadius","data","fillColor","style","fontSize","showTooltip","tooltipPrefix","tooltipSuffix","onClick","fontColor","showAnimation","animationDuration","showLegend","showXaxisLabel","xaxisLabel","useEffect","valueLabels","nameLabels","textOffset","pieData","oldPieData","filteredPieData","donut","d3","value","d","color","domain","length","range","interpolate","arc","startAngle","endAngle","vis","current","attr","arcGroup","append","labelGroup","centerGroup","pieTween","i","s0","e0","ii","t","b","removePieTween","Math","PI","textTween","a","fn","val","cos","sin","html","sliceProportion","filter","element","index","array","name","label","paths","selectAll","enter","on","e","tooltip","concat","toLocaleString","minimumFractionDigits","maximumFractionDigits","toFixed","pageX","pageY","transition","duration","attrTween","exit","remove","lines","text","update","JSON","stringify","_jsx","ref","defaultProps","map","m","maxWidth","appThemeBgColor","appThemeColor"],"mappings":"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","file":"static/js/11.81fd0b63.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { appThemeBgColor, appThemeColor, tooltip } from \"./constants\";\nimport * as d3 from \"d3\";\nimport PropTypes from \"prop-types\";\n\nconst DonutChart = props => {\n  const svgRef = useRef(null);\n  const {\n    width,\n    height,\n    outerRadius,\n    innerRadius,\n    data,\n    fillColor,\n    style,\n    fontSize,\n    showTooltip,\n    tooltipPrefix,\n    tooltipSuffix,\n    onClick,\n    fontColor,\n    showAnimation,\n    animationDuration,\n    showLegend,\n    showXaxisLabel,\n    xaxisLabel,\n  } = props;\n  useEffect(() => {\n    const textOffset = 24;\n\n    // OBJECTS TO BE POPULATED WITH DATA LATER\n    let valueLabels;\n    let nameLabels;\n    let pieData = [];\n    let oldPieData = [];\n    let filteredPieData = [];\n\n    // D3 helper function to populate pie slice parameters from array data\n    const donut = d3.pie().value(function (d) {\n      return d.value;\n    });\n\n    // D3 helper function to create colors from an ordinal scale\n    // const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const color = d3\n      .scaleLinear()\n      .domain([0, data.length])\n      .range(fillColor)\n      .interpolate(d3.interpolateHcl);\n\n    // D3 helper function to draw arcs, populates parameter \"d\" in path object\n    const arc = d3\n      .arc()\n      .startAngle(function (d) {\n        return d.startAngle;\n      })\n      .endAngle(function (d) {\n        return d.endAngle;\n      })\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius);\n\n    const vis = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    // GROUP FOR ARCS/PATHS\n    const arcGroup = vis\n      .append(\"svg:g\")\n      .attr(\"class\", \"arc\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // GROUP FOR LABELS\n    const labelGroup = vis\n      .append(\"svg:g\")\n      .attr(\"class\", \"labelGroup\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // GROUP FOR CENTER TEXT\n    const centerGroup = vis\n      .append(\"svg:g\")\n      .attr(\"class\", \"centerGroup\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // // PLACEHOLDER GRAY CIRCLE\n    if (showXaxisLabel) {\n      centerGroup\n        .append(\"text\")\n        .html(xaxisLabel)\n        .attr(\"fill\", fontColor)\n        .attr(\"font-size\", fontSize)\n        .attr(\"text-anchor\", \"middle\");\n    }\n\n    // to run each time data is generated\n    function update(data) {\n      oldPieData = filteredPieData;\n      pieData = donut(data);\n\n      let sliceProportion = 0; // size of this slice\n      filteredPieData = pieData.filter(filterData);\n\n      function filterData(element, index, array) {\n        element.name = data[index].label;\n        element.value = data[index].value;\n        sliceProportion += element.value;\n        return element.value > 0;\n      }\n\n      // DRAW ARC PATHS\n      const paths = arcGroup.selectAll(\"path\").data(filteredPieData);\n      paths\n        .enter()\n        .append(\"svg:path\")\n        .on(\"click\", (d, i) => {\n          onClick(d, i);\n        })\n        .on(\"mousemove\", (e, d) => {\n          if (showTooltip) {\n            tooltip.style(\"padding\", \"5px\");\n            tooltip.style(\"opacity\", 1);\n            tooltip\n              .html(\n                `<div>${tooltipPrefix} ${\n                  d.name\n                }</div><div>${d.value.toLocaleString(\"en-US\", {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2,\n                })}</div><div>${((d.value / sliceProportion) * 100).toFixed(\n                  2,\n                )}%</div><div>${tooltipSuffix}</div>`,\n              )\n              .style(\"left\", e.pageX + 15 + \"px\")\n              .style(\"top\", e.pageY - 30 + \"px\");\n          }\n        })\n        .on(\"mouseout\", d => {\n          tooltip.style(\"padding\", 0);\n          tooltip.style(\"opacity\", 0);\n        })\n        .attr(\"fill\", function (d, i) {\n          return color(i);\n        });\n\n      paths\n        .enter()\n        .selectAll(\"path\")\n        .transition()\n        .duration(animationDuration)\n        .attrTween(\n          \"d\",\n          showAnimation\n            ? pieTween\n            : d => {\n                const ii = d3.interpolate(\n                  { startAngle: d.startAngle, endAngle: d.endAngle },\n                  { startAngle: d.startAngle, endAngle: d.endAngle },\n                );\n                return function (t) {\n                  const b = ii(t);\n                  return arc(b);\n                };\n              },\n        );\n\n      paths\n        .exit()\n        .transition()\n        .duration(animationDuration)\n        .attrTween(\"d\", removePieTween)\n        .remove();\n\n      if (showLegend) {\n        // DRAW TICK MARK LINES FOR LABELS\n        const lines = labelGroup.selectAll(\"line\").data(filteredPieData);\n        lines\n          .enter()\n          .append(\"svg:line\")\n          .attr(\"x1\", 0)\n          .attr(\"x2\", 0)\n          .attr(\"y1\", -outerRadius - 3)\n          .attr(\"y2\", -outerRadius - 15)\n          .attr(\"stroke\", \"gray\")\n          .attr(\"transform\", function (d) {\n            return (\n              \"rotate(\" +\n              ((d.startAngle + d.endAngle) / 2) * (180 / Math.PI) +\n              \")\"\n            );\n          });\n        lines\n          .transition()\n          .duration(animationDuration)\n          .attr(\"transform\", function (d) {\n            return (\n              \"rotate(\" +\n              ((d.startAngle + d.endAngle) / 2) * (180 / Math.PI) +\n              \")\"\n            );\n          });\n        lines.exit().remove();\n\n        // DRAW LABELS WITH PERCENTAGE VALUES\n        valueLabels = labelGroup\n          .selectAll(\"text.value\")\n          .data(filteredPieData)\n          .attr(\"dy\", function (d) {\n            if (\n              (d.startAngle + d.endAngle) / 2 > Math.PI / 2 &&\n              (d.startAngle + d.endAngle) / 2 < Math.PI * 1.5\n            ) {\n              return 5;\n            } else {\n              return -7;\n            }\n          })\n          .attr(\"text-anchor\", function (d) {\n            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n              return \"beginning\";\n            } else {\n              return \"end\";\n            }\n          })\n          .text(function (d) {\n            const percentage = (d.value / sliceProportion) * 100;\n            return percentage.toFixed(1) + \"%\";\n          });\n\n        valueLabels\n          .enter()\n          .append(\"svg:text\")\n          .attr(\"class\", \"value\")\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"font-size\", fontSize)\n          .attr(\"transform\", function (d) {\n            return (\n              \"translate(\" +\n              Math.cos((d.startAngle + d.endAngle - Math.PI) / 2) *\n                (outerRadius + textOffset) +\n              \",\" +\n              Math.sin((d.startAngle + d.endAngle - Math.PI) / 2) *\n                (outerRadius + textOffset) +\n              \")\"\n            );\n          })\n          .attr(\"dy\", function (d) {\n            if (\n              (d.startAngle + d.endAngle) / 2 > Math.PI / 2 &&\n              (d.startAngle + d.endAngle) / 2 < Math.PI * 1.5\n            ) {\n              return 5;\n            } else {\n              return -7;\n            }\n          })\n          .attr(\"text-anchor\", function (d) {\n            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n              return \"beginning\";\n            } else {\n              return \"end\";\n            }\n          })\n          .attr(\"fill\", fontColor)\n          .text(function (d) {\n            const percentage = (d.value / sliceProportion) * 100;\n            return percentage.toFixed(2) + \"%\";\n          });\n\n        valueLabels\n          .transition()\n          .duration(animationDuration)\n          .attrTween(\"transform\", textTween);\n\n        valueLabels.exit().remove();\n\n        // DRAW LABELS WITH ENTITY NAMES\n        nameLabels = labelGroup\n          .selectAll(\"text.units\")\n          .data(filteredPieData)\n          .attr(\"dy\", function (d) {\n            if (\n              (d.startAngle + d.endAngle) / 2 > Math.PI / 2 &&\n              (d.startAngle + d.endAngle) / 2 < Math.PI * 1.5\n            ) {\n              return 17;\n            } else {\n              return 5;\n            }\n          })\n          .attr(\"text-anchor\", function (d) {\n            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n              return \"beginning\";\n            } else {\n              return \"end\";\n            }\n          })\n          .text(function (d) {\n            return d.name;\n          });\n\n        nameLabels\n          .enter()\n          .append(\"svg:text\")\n          .attr(\"class\", \"units\")\n          .attr(\"font-size\", fontSize)\n          .attr(\"transform\", function (d) {\n            return (\n              \"translate(\" +\n              Math.cos((d.startAngle + d.endAngle - Math.PI) / 2) *\n                (outerRadius + textOffset) +\n              \",\" +\n              Math.sin((d.startAngle + d.endAngle - Math.PI) / 2) *\n                (outerRadius + textOffset) +\n              \")\"\n            );\n          })\n          .attr(\"dy\", function (d) {\n            if (\n              (d.startAngle + d.endAngle) / 2 > Math.PI / 2 &&\n              (d.startAngle + d.endAngle) / 2 < Math.PI * 1.5\n            ) {\n              return 25;\n            } else {\n              return 10;\n            }\n          })\n          .attr(\"text-anchor\", function (d) {\n            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n              return \"beginning\";\n            } else {\n              return \"end\";\n            }\n          })\n          .attr(\"fill\", fontColor)\n          .text(function (d) {\n            return d.name;\n          });\n\n        nameLabels\n          .transition()\n          .duration(animationDuration)\n          .attrTween(\"transform\", textTween);\n\n        nameLabels.exit().remove();\n      }\n    }\n\n    // Interpolate the arcs in data space.\n    function pieTween(d, i) {\n      let s0;\n      let e0;\n      if (oldPieData[i]) {\n        s0 = oldPieData[i].startAngle;\n        e0 = oldPieData[i].endAngle;\n      } else if (!oldPieData[i] && oldPieData[i - 1]) {\n        s0 = oldPieData[i - 1].endAngle;\n        e0 = oldPieData[i - 1].endAngle;\n      } else if (!oldPieData[i - 1] && oldPieData.length > 0) {\n        s0 = oldPieData[oldPieData.length - 1].endAngle;\n        e0 = oldPieData[oldPieData.length - 1].endAngle;\n      } else {\n        s0 = 0;\n        e0 = 0;\n      }\n      const ii = d3.interpolate(\n        { startAngle: s0, endAngle: e0 },\n        { startAngle: d.startAngle, endAngle: d.endAngle },\n      );\n      return function (t) {\n        const b = ii(t);\n        return arc(b);\n      };\n    }\n\n    function removePieTween(d, i) {\n      s0 = 2 * Math.PI;\n      e0 = 2 * Math.PI;\n      const ii = d3.interpolate(\n        { startAngle: d.startAngle, endAngle: d.endAngle },\n        { startAngle: s0, endAngle: e0 },\n      );\n      return function (t) {\n        const b = ii(t);\n        return arc(b);\n      };\n    }\n\n    function textTween(d, i) {\n      let a;\n      if (oldPieData[i]) {\n        a = (oldPieData[i].startAngle + oldPieData[i].endAngle - Math.PI) / 2;\n      } else if (!oldPieData[i] && oldPieData[i - 1]) {\n        a =\n          (oldPieData[i - 1].startAngle +\n            oldPieData[i - 1].endAngle -\n            Math.PI) /\n          2;\n      } else if (!oldPieData[i - 1] && oldPieData.length > 0) {\n        a =\n          (oldPieData[oldPieData.length - 1].startAngle +\n            oldPieData[oldPieData.length - 1].endAngle -\n            Math.PI) /\n          2;\n      } else {\n        a = 0;\n      }\n      const b = (d.startAngle + d.endAngle - Math.PI) / 2;\n\n      const fn = d3.interpolateNumber(a, b);\n      return function (t) {\n        const val = fn(t);\n        return (\n          \"translate(\" +\n          Math.cos(val) * (outerRadius + textOffset) +\n          \",\" +\n          Math.sin(val) * (outerRadius + textOffset) +\n          \")\"\n        );\n      };\n    }\n\n    update(data);\n  }, [JSON.stringify(props)]);\n\n  return <svg style={style} ref={svgRef}></svg>;\n};\n\nDonutChart.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  outerRadius: PropTypes.number,\n  innerRadius: PropTypes.number,\n  data: PropTypes.array,\n  fillColor: PropTypes.array,\n  style: PropTypes.object,\n  fontSize: PropTypes.number,\n  showTooltip: PropTypes.bool,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  onClick: PropTypes.func,\n  fontColor: PropTypes.string,\n  showAnimation: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  showLegend: PropTypes.bool,\n  showXaxisLabel: PropTypes.bool,\n  xaxisLabel: PropTypes.string,\n};\n\nDonutChart.defaultProps = {\n  width: 600,\n  height: 300,\n  outerRadius: 100,\n  innerRadius: 70,\n  data: [12, 23, 34, 45, 56].map((m, i) => ({\n    label: \"Sample \" + (i + 1),\n    value: m,\n  })),\n  style: {\n    maxWidth: \"100%\",\n    height: \"auto\",\n  },\n  fillColor: [appThemeBgColor, appThemeColor],\n  fontSize: 12,\n  tooltipPrefix: \"\",\n  tooltipSuffix: \"\",\n  showTooltip: true,\n  onClick: () => {},\n  fontColor: \"currentColor\",\n  showAnimation: true,\n  animationDuration: 1000,\n  showLegend: true,\n  showXaxisLabel: true,\n  xaxisLabel: \"Sample\",\n};\n\nexport default DonutChart;\n","import * as d3 from \"d3\";\n\nconst appThemeBgColor = \"#c2d82e\";\nconst appThemeColor = \"#000000\";\nconst successColor = \"#198754\";\nconst dangerColor = \"#dc3545\";\nconst warningColor = \"#ffc107\";\nconst infoColor = \"#0dcaf0\";\nconst tooltip = d3\n  .select(\"body\")\n  .append(\"div\")\n  .attr(\"class\", \"tooltip\")\n  .attr(\"role\", \"tooltip\")\n  .style(\"position\", \"absolute\")\n  .style(\"background\", \"#222222\")\n  .style(\"border-radius\", \"5px\")\n  .style(\"color\", \"#ffffff\");\n\nexport {\n  tooltip,\n  appThemeBgColor,\n  appThemeColor,\n  successColor,\n  dangerColor,\n  warningColor,\n  infoColor,\n};\n"],"sourceRoot":""}