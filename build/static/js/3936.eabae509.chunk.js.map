{"version":3,"file":"static/js/3936.eabae509.chunk.js","mappings":"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","sources":["components/payment/PaymentAlert.js","components/payment/SessionPopup.js"],"sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst PaymentSuccessHeading = () => (\n  <div>\n    <div className='d-flex align-items-center'>\n      <i className='fa fa-check fa-2x pt-2 text-success' />\n      <div className='ps-2'>\n        <div className='fs-3'>\n          <FormattedMessage id='success' defaultMessage='success' />\n        </div>\n        <div className='fs-6'>\n          <FormattedMessage\n            id='paymentReceived'\n            defaultMessage='paymentReceived'\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst PaymentSuccessContent = () => {\n  return (\n    <div className='d-flex align-items-center justify-content-between'>\n      <div>\n        <span className='fs-6'>\n          <FormattedMessage\n            id='paymentSuccessMessage'\n            defaultMessage='paymentSuccessMessage'\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst PaymentFailedHeading = () => (\n  <div>\n    <div className='d-flex align-items-center'>\n      <i className='fa fa-times-circle fa-2x pt-2 text-danger' />\n      <div className='ps-2'>\n        <div className='fs-3'>\n          <FormattedMessage id='failed' defaultMessage='failed' />\n        </div>\n        <div className='fs-6'>\n          <FormattedMessage\n            id='paymentNotReceived'\n            defaultMessage='paymentNotReceived'\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst PaymentFailedContent = () => {\n  return (\n    <div className='d-flex align-items-center justify-content-between'>\n      <div>\n        <span className='fs-6'>\n          <FormattedMessage\n            id='paymentFailMessage'\n            defaultMessage='paymentFailMessage'\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport {\n  PaymentSuccessHeading,\n  PaymentSuccessContent,\n  PaymentFailedHeading,\n  PaymentFailedContent,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { BillingContext } from \"./Billing\";\nimport apiInstance from \"../../services/apiServices\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { MyAlertContext } from \"../../contexts/AlertContext\";\nimport { PaymentSuccessHeading, PaymentSuccessContent } from \"./PaymentAlert\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst SessionPopup = props => {\n  const userContext = useContext(UserContext);\n  const billingContext = useContext(BillingContext);\n  const myAlertContext = useContext(MyAlertContext);\n  const { showSessionPopup, setShowSessionPopup, summary } = billingContext;\n  const timerArray = [\n    \"hourglass-o\",\n    \"hourglass-start\",\n    \"hourglass-half\",\n    \"hourglass-end\",\n    \"hourglass\",\n  ];\n  const [timerIndex, setTimerIndex] = useState(0);\n\n  const getUserConfig = async appId => {\n    const formdata = new FormData();\n    formdata.append(\"appId\", appId);\n    return await apiInstance.post(\"/getUserConfig\", formdata);\n  };\n\n  const isOrderPaid = async () => {\n    const formdata = new FormData();\n    formdata.append(\"customerId\", summary.razorPayCustomerId);\n    formdata.append(\"expiryDate\", userContext.userConfig.expiryDateTime);\n    return await apiInstance.post(\"/payments/razorpay/isOrderPaid\", formdata);\n  };\n\n  useEffect(() => {\n    let start = 0;\n    const id = setInterval(() => {\n      start = start + 1;\n      start = start > timerArray.length - 1 ? 0 : start;\n      setTimerIndex(start);\n      isOrderPaid()\n        .then(r => {\n          const status = r?.data?.response;\n          if (status) {\n            // update your new plan details if order received as paid\n            getUserConfig(userContext.userConfig.appId)\n              .then(res => {\n                const {\n                  data: { response },\n                } = res;\n                userContext.setUserConfig(prev => ({\n                  ...prev,\n                  ...response[0],\n                }));\n                myAlertContext.setConfig({\n                  show: true,\n                  className: \"alert-success border-0 text-dark\",\n                  type: \"success\",\n                  dismissible: true,\n                  heading: <PaymentSuccessHeading />,\n                  content: <PaymentSuccessContent />,\n                });\n              })\n              .catch(err =>\n                console.error(\"Unable to fetch user config and order\", err),\n              )\n              .finally(() => setShowSessionPopup(false));\n          }\n        })\n        .catch(err => console.error(\"fetch order error:\", err));\n    }, 1000 * 3);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Modal\n      show={showSessionPopup}\n      onHide={() => setShowSessionPopup(false)}\n      style={{ zIndex: 10000 }}\n      keyboard={false}\n      backdrop='static'\n    >\n      <Modal.Header>\n        <Modal.Title className='d-flex align-items-center'>\n          <i className='px-2 fa-1x fa fa-hand-paper-o' />\n          <span>\n            <FormattedMessage id='pleaseWait' defaultMessage='pleaseWait' />\n          </span>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body\n        className={`rounded-bottom ${\n          userContext.userData.theme === \"dark\"\n            ? \"bg-dark text-white\"\n            : \"bg-white text-dark\"\n        }`}\n      >\n        <div className='text-center'>\n          <div>\n            <FormattedMessage id='doNotRefresh' defaultMessage='doNotRefresh' />\n          </div>\n          <div className='p-5'>\n            <i\n              className={`animate__animated animate__pulse animate__infinite fa fa-${timerArray[timerIndex]} fa-5x fa-fw`}\n            />\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default SessionPopup;\n"],"names":["PaymentSuccessHeading","_jsx","children","_jsxs","className","FormattedMessage","id","defaultMessage","PaymentSuccessContent","PaymentFailedHeading","PaymentFailedContent","props","userContext","useContext","UserContext","billingContext","BillingContext","myAlertContext","MyAlertContext","showSessionPopup","setShowSessionPopup","summary","timerArray","timerIndex","setTimerIndex","useState","useEffect","start","setInterval","length","async","formdata","FormData","append","razorPayCustomerId","userConfig","expiryDateTime","apiInstance","post","isOrderPaid","then","r","_r$data","data","response","appId","getUserConfig","res","setUserConfig","prev","setConfig","show","type","dismissible","heading","content","catch","err","console","error","finally","clearInterval","Modal","onHide","style","zIndex","keyboard","backdrop","Header","Title","Body","userData","theme"],"sourceRoot":""}