{"version":3,"sources":["components/shared/D3/ZoomableCirclePackingChart.js"],"names":["ZoomableCirclePackingChart","props","svgRef","useRef","width","height","style","fillColor","padding","tooltipPrefix","tooltipSuffix","showTooltip","fontSize","animationDuration","showAnimation","onClick","data","useEffect","color","d3","domain","range","interpolate","root","size","sum","d","value","sort","a","b","pack","svg","current","attr","concat","node","append","selectAll","descendants","slice","join","children","depth","on","i","this","tooltip","html","pageX","pageY","event","focus","stopPropagation","zoom","label","parent","text","view","zoomTo","v","k","x","y","r","transition","duration","altKey","tween","t","filter","display","JSON","stringify","_jsx","ref","defaultProps","zoomableCirclePackingChartProps"],"mappings":"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","file":"static/js/13.0f899473.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { tooltip } from \"./constants\";\nimport { zoomableCirclePackingChartProps } from \"./propsData\";\nimport PropTypes from \"prop-types\";\n\nconst ZoomableCirclePackingChart = props => {\n  const svgRef = useRef(null);\n  const {\n    width,\n    height,\n    style,\n    fillColor,\n    padding,\n    tooltipPrefix,\n    tooltipSuffix,\n    showTooltip,\n    fontSize,\n    animationDuration,\n    showAnimation,\n    onClick,\n    data,\n  } = props;\n\n  useEffect(() => {\n    // Create the color scale.\n    const color = d3\n      .scaleLinear()\n      .domain([0, 5])\n      .range(fillColor)\n      .interpolate(d3.interpolateHcl);\n\n    // Compute the layout.\n    const pack = data =>\n      d3.pack().size([width, height]).padding(padding)(\n        d3\n          .hierarchy(data)\n          .sum(d => d.value)\n          .sort((a, b) => b.value - a.value),\n      );\n    const root = pack(data);\n\n    // Create the SVG container.\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    // Append the nodes.\n    const node = svg\n      .append(\"g\")\n      .selectAll(\"circle\")\n      .data(root.descendants().slice(1))\n      .join(\"circle\")\n      .attr(\"fill\", d => (d.children ? color(d.depth) : \"white\"))\n      .attr(\"pointer-events\", d => (!d.children ? \"none\" : null))\n      .on(\"mouseover\", function (d, i) {\n        d3.select(this).attr(\"stroke\", fillColor[0]).attr(\"stroke-width\", \"3\");\n        if (showTooltip) {\n          tooltip.style(\"padding\", \"5px\");\n          tooltip.style(\"opacity\", 1);\n          tooltip\n            .html(`${tooltipPrefix} ${i.value} ${tooltipSuffix}`)\n            .style(\"left\", d.pageX + 5 + \"px\")\n            .style(\"top\", d.pageY - 30 + \"px\");\n        }\n      })\n      .on(\"mouseout\", function () {\n        d3.select(this).attr(\"stroke\", null);\n        tooltip.style(\"padding\", 0);\n        tooltip.style(\"opacity\", 0);\n      })\n      .on(\"click\", (event, d) => {\n        if (focus !== d) {\n          event.stopPropagation();\n          zoom(event, d);\n          onClick(event, d);\n        }\n      });\n\n    // Append the text labels.\n    const label = svg\n      .append(\"g\")\n      .style(\"font\", fontSize + \"px sans-serif\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"text-anchor\", \"middle\")\n      .selectAll(\"text\")\n      .data(root.descendants())\n      .join(\"text\")\n      .style(\"fill-opacity\", d => (d.parent === root ? 1 : 0))\n      .style(\"display\", d => (d.parent === root ? \"inline\" : \"none\"))\n      .text(d => d.data.label);\n\n    svg.on(\"click\", event => zoom(event, root));\n    let focus = root;\n    let view;\n    zoomTo([focus.x, focus.y, focus.r * 2]);\n\n    function zoomTo(v) {\n      const k = width / v[2];\n\n      view = v;\n\n      label.attr(\n        \"transform\",\n        d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`,\n      );\n      node.attr(\n        \"transform\",\n        d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`,\n      );\n      node.attr(\"r\", d => d.r * k);\n    }\n\n    function zoom(event, d) {\n      focus = d;\n\n      const transition = svg\n        .transition()\n        .duration(showAnimation ? (event.altKey ? 7500 : animationDuration) : 0)\n        .tween(\"zoom\", d => {\n          const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n          return t => zoomTo(i(t));\n        });\n\n      label\n        .filter(function (d) {\n          return d.parent === focus || this.style.display === \"inline\";\n        })\n        .transition(transition)\n        .style(\"fill-opacity\", d => (d.parent === focus ? 1 : 0))\n        .on(\"start\", function (d) {\n          if (d.parent === focus) this.style.display = \"inline\";\n        })\n        .on(\"end\", function (d) {\n          if (d.parent !== focus) this.style.display = \"none\";\n        });\n    }\n  }, [JSON.stringify(props)]);\n\n  return <svg style={style} ref={svgRef} />;\n};\n\nZoomableCirclePackingChart.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  style: PropTypes.object,\n  fillColor: PropTypes.array,\n  padding: PropTypes.number,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  fontSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  showAnimation: PropTypes.bool,\n  onClick: PropTypes.func,\n  data: PropTypes.object,\n};\nZoomableCirclePackingChart.defaultProps = zoomableCirclePackingChartProps;\n\nexport default ZoomableCirclePackingChart;\n"],"sourceRoot":""}