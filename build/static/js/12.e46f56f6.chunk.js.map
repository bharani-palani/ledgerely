{"version":3,"sources":["components/shared/D3/HorizontalBarChart.js","components/shared/D3/constants.js"],"names":["HorizontalBarChart","props","svgRef","useRef","data","width","barHeight","marginTop","marginRight","marginBottom","marginLeft","sortClause","padding","style","fillColor","showTooltip","tooltipPrefix","tooltipSuffix","onClick","fontColor","fontSize","showAnimation","animationDuration","useEffect","height","Math","ceil","length","order","arguments","undefined","d3","_ref","_slicedToArray","value","d","label","_ref3","map","sortBy","x","domain","range","y","rangeRound","svg","current","attr","append","selectAll","join","on","i","tooltip","html","concat","pageX","pageY","transition","duration","bandwidth","delay","text","call","filter","g","select","remove","tickSizeOuter","JSON","stringify","_jsx","ref","defaultProps","Array","fill","_","Number","random","toFixed","maxWidth","boxShadow","borderRadius","appThemeBgColor","appThemeColor"],"mappings":"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","file":"static/js/12.e46f56f6.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { appThemeBgColor, tooltip } from \"./constants\";\nimport PropTypes from \"prop-types\";\n\nconst HorizontalBarChart = props => {\n  const svgRef = useRef(null);\n  const {\n    data,\n    width,\n    barHeight,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    sortClause,\n    padding,\n    style,\n    fillColor,\n    showTooltip,\n    tooltipPrefix,\n    tooltipSuffix,\n    onClick,\n    fontColor,\n    fontSize,\n    showAnimation,\n    animationDuration,\n  } = props;\n\n  const sortBy = (clause = null) => {\n    switch (clause) {\n      case \"desc\":\n        return d3.groupSort(\n          data,\n          ([d]) => -d.value,\n          d => d.label,\n        );\n      case \"asc\":\n        return d3.groupSort(\n          data,\n          ([d]) => d.value,\n          d => d.label,\n        );\n      default:\n        return data.map(d => d.label);\n    }\n  };\n\n  useEffect(() => {\n    const height =\n      Math.ceil((data.length + 0.1) * barHeight) + marginTop + marginBottom;\n    const order = sortBy(sortClause);\n\n    // Create the scales.\n    const x = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.value)])\n      .range([marginLeft, width - marginRight]);\n\n    const y = d3\n      .scaleBand()\n      .domain(order)\n      .rangeRound([marginTop, height - marginBottom])\n      .padding(padding);\n\n    // Create the SVG container.\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    // Append a rect for each label.\n    svg\n      .append(\"g\")\n      .attr(\"fill\", fillColor)\n      .selectAll()\n      .data(data)\n      .join(\"rect\")\n      .on(\"click\", (d, i) => {\n        onClick(d, i);\n      })\n      .on(\"mousemove\", (d, i) => {\n        if (showTooltip) {\n          tooltip.style(\"padding\", \"5px\");\n          tooltip.style(\"opacity\", 1);\n          tooltip\n            .html(`${tooltipPrefix} ${i.value} ${tooltipSuffix}`)\n            .style(\"left\", d.pageX + 5 + \"px\")\n            .style(\"top\", d.pageY - 30 + \"px\");\n        }\n      })\n      .on(\"mouseout\", d => {\n        tooltip.style(\"padding\", 0);\n        tooltip.style(\"opacity\", 0);\n      })\n      .transition()\n      .duration((d, i) => (showAnimation ? animationDuration + i : i))\n      .attr(\"x\", x(0))\n      .attr(\"y\", d => y(d.label))\n      .attr(\"width\", d => x(d.value) - x(0))\n      .attr(\"height\", y.bandwidth());\n\n    // Append a label for each label.\n    svg\n      .append(\"g\")\n      .attr(\"fill\", fontColor)\n      .attr(\"text-anchor\", \"end\")\n      .selectAll()\n      .data(data)\n      .join(\"text\")\n      .transition()\n      .delay((d, i) => (showAnimation ? animationDuration + i : i))\n      .attr(\"x\", d => x(d.value))\n      .attr(\"y\", d => y(d.label) + y.bandwidth() / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"dx\", -4)\n      .text(d => d.value)\n      .attr(\"font-size\", fontSize)\n      .call(text =>\n        text\n          .filter(d => x(d.value) - x(0) < 20) // short bars\n          .attr(\"dx\", +4)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"start\"),\n      );\n\n    // Create the axes.\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${marginTop})`)\n      .call(d3.axisTop(x))\n      .call(g => g.select(\".domain\").remove())\n      .selectAll(\"text\")\n      .attr(\"font-size\", fontSize);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${marginLeft},0)`)\n      .call(d3.axisLeft(y).tickSizeOuter(0))\n      .selectAll(\"text\")\n      .attr(\"font-size\", fontSize);\n  }, [JSON.stringify(props)]);\n\n  return <svg style={style} ref={svgRef} />;\n};\n\nHorizontalBarChart.propTypes = {\n  width: PropTypes.number,\n  barHeight: PropTypes.number,\n  data: PropTypes.array,\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n  sortClause: PropTypes.string,\n  padding: PropTypes.number,\n  style: PropTypes.object,\n  fillColor: PropTypes.string,\n  tooltipPrefix: PropTypes.string,\n  tooltipSuffix: PropTypes.string,\n  showTooltip: PropTypes.bool,\n  onClick: PropTypes.func,\n  fontColor: PropTypes.string,\n  fontSize: PropTypes.number,\n  showAnimation: PropTypes.bool,\n  animationDuration: PropTypes.number,\n};\nHorizontalBarChart.defaultProps = {\n  width: 550,\n  barHeight: 20,\n  data: new Array(10).fill(\"_\").map((_, i) => ({\n    label: `C${i + 1}`,\n    value: Number((Math.random() * 100).toFixed(2)),\n  })),\n  marginTop: 30,\n  marginRight: 0,\n  marginBottom: 10,\n  marginLeft: 60,\n  sortClause: \"\",\n  padding: 0.05,\n  style: {\n    maxWidth: \"100%\",\n    height: \"auto\",\n    boxShadow: \"0px 0 10px #000\",\n    borderRadius: \"10px\",\n  },\n  fillColor: appThemeBgColor,\n  tooltipPrefix: \"\",\n  tooltipSuffix: \"\",\n  showTooltip: true,\n  onClick: () => {},\n  fontColor: \"#000\",\n  fontSize: 12,\n  showAnimation: true,\n  animationDuration: 1000,\n};\n\nexport default HorizontalBarChart;\n","import * as d3 from \"d3\";\n\nconst appThemeBgColor = \"#c2d82e\";\nconst appThemeColor = \"#000000\";\nconst successColor = \"#198754\";\nconst dangerColor = \"#dc3545\";\nconst warningColor = \"#ffc107\";\nconst infoColor = \"#0dcaf0\";\nconst tooltip = d3\n  .select(\"body\")\n  .append(\"div\")\n  .attr(\"class\", \"tooltip\")\n  .attr(\"role\", \"tooltip\")\n  .style(\"position\", \"absolute\")\n  .style(\"background\", \"#222222\")\n  .style(\"border-radius\", \"5px\")\n  .style(\"color\", \"#ffffff\");\n\nexport {\n  tooltip,\n  appThemeBgColor,\n  appThemeColor,\n  successColor,\n  dangerColor,\n  warningColor,\n  infoColor,\n};\n"],"sourceRoot":""}