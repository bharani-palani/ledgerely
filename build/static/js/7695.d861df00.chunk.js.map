{"version":3,"file":"static/js/7695.d861df00.chunk.js","mappings":"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","sources":["components/payment/Billing.js"],"sourcesContent":["import React, { useContext, useEffect, useState, lazy, Suspense } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { MyAlertContext } from \"../../contexts/AlertContext\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\nimport apiInstance from \"../../services/apiServices\";\nimport Loader from \"../resuable/Loader\";\nconst Summary = lazy(() => import(\"./Summary\"));\nconst CloseAccount = lazy(() => import(\"./CloseAccount\"));\nconst SessionPopup = lazy(() => import(\"./SessionPopup\"));\n\nconst CouponHeading = lazy(() =>\n  import(\"./CouponAlert\").then(module => ({\n    default: module[\"CouponHeading\"],\n  })),\n);\nconst CouponContent = lazy(() =>\n  import(\"./CouponAlert\").then(module => ({\n    default: module[\"CouponContent\"],\n  })),\n);\n\nconst BillingContext = React.createContext(undefined);\n\nconst CurrencyPrice = ({ amount, suffix, symbol }) => {\n  const n = amount.toFixed(2);\n  const pieces = (n + \"\").split(\".\");\n  return (\n    <>\n      <sup className='fs-6'>{symbol}</sup>\n      <span className='fs-5'>{Number(pieces[0]).toLocaleString(\"en-US\")}</span>\n      <sub>\n        .{pieces[1]}\n        {suffix}\n      </sub>\n    </>\n  );\n};\n\nconst Billing = props => {\n  const intl = useIntl();\n  const globalContext = useContext(GlobalContext);\n  document.title = `${globalContext.appName} - ${intl.formatMessage({\n    id: \"billing\",\n    defaultMessage: \"billing\",\n  })}`;\n  const userContext = useContext(UserContext);\n  const myAlertContext = useContext(MyAlertContext);\n  const [table, setTable] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [billingLoader, setBillingLoader] = useState(false);\n  const [subscribeLoader, setSubscribeLoader] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState({});\n  const [restTable, setRestTable] = useState([]);\n  const [coupons] = useState({});\n  const [showSessionPopup, setShowSessionPopup] = useState(false);\n  const cycleRef = {\n    month: {\n      prop: \"planPriceMonthly\",\n      razorPayProp: \"pricingMonthId\",\n      suffix: `  / ${intl.formatMessage({\n        id: \"month\",\n        defaultMessage: \"month\",\n      })}`,\n    },\n    year: {\n      prop: \"planPriceYearly\",\n      razorPayProp: \"pricingYearId\",\n      suffix: ` / ${intl.formatMessage({\n        id: \"year\",\n        defaultMessage: \"year\",\n      })}`,\n    },\n  };\n  const sortableProperties = [\n    \"planBankAccountsLimit\",\n    \"planCreditCardAccounts\",\n    \"planCategoriesLimit\",\n    \"planUsersLimit\",\n    \"planTemplateLimit\",\n    \"planTrxLimit\",\n    \"planCreditCardTrxLimit\",\n    \"planDatasourceLimit\",\n    \"planWorkbookLimit\",\n    \"planStorageLimit\",\n    \"planIsTransactionSearch\",\n    \"planIsBulkImport\",\n    \"planIsEmailAlerts\",\n    \"planIsPredictions\",\n    \"visualizationLimit\",\n  ];\n\n  const propertyTypes = [\n    {\n      key: \"planBankAccountsLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"bankAccounts\",\n        defaultMessage: \"bankAccounts\",\n      }),\n    },\n    {\n      key: \"planCreditCardAccounts\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"creditCardAccounts\",\n        defaultMessage: \"creditCardAccounts\",\n      }),\n    },\n    {\n      key: \"planCategoriesLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"incExpCat\",\n        defaultMessage: \"incExpCat\",\n      }),\n    },\n    {\n      key: \"planUsersLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"users\",\n        defaultMessage: \"users\",\n      }),\n    },\n    {\n      key: \"planTemplateLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"schedules\",\n        defaultMessage: \"schedules\",\n      }),\n    },\n    {\n      key: \"planTrxLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"bankTransactions\",\n        defaultMessage: \"bankTransactions\",\n      }),\n    },\n    {\n      key: \"planCreditCardTrxLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"creditCardTransactions\",\n        defaultMessage: \"creditCardTransactions\",\n      }),\n    },\n    {\n      key: \"planDatasourceLimit\",\n      type: \"bytesOrNull\",\n      label: intl.formatMessage({\n        id: \"dataSource\",\n        defaultMessage: \"dataSource\",\n      }),\n    },\n    {\n      key: \"planWorkbookLimit\",\n      type: \"bytesOrNull\",\n      label: intl.formatMessage({\n        id: \"workbook\",\n        defaultMessage: \"workbook\",\n      }),\n    },\n    {\n      key: \"planStorageLimit\",\n      type: \"bytesOrNull\",\n      label: intl.formatMessage({\n        id: \"fileStorage\",\n        defaultMessage: \"fileStorage\",\n      }),\n    },\n    {\n      key: \"planIsBulkImport\",\n      type: \"boolean\",\n      label: intl.formatMessage({\n        id: \"bulkImport\",\n        defaultMessage: \"bulkImport\",\n      }),\n    },\n    {\n      key: \"planIsEmailAlerts\",\n      type: \"boolean\",\n      label: intl.formatMessage({\n        id: \"emailAlerts\",\n        defaultMessage: \"emailAlerts\",\n      }),\n    },\n    {\n      key: \"planIsPredictions\",\n      type: \"boolean\",\n      label: intl.formatMessage({\n        id: \"predictions\",\n        defaultMessage: \"predictions\",\n      }),\n    },\n    {\n      key: \"planIsTransactionSearch\",\n      type: \"boolean\",\n      label: intl.formatMessage({\n        id: \"globalSearch\",\n        defaultMessage: \"globalSearch\",\n      }),\n    },\n    {\n      key: \"visualizationLimit\",\n      type: \"numericNull\",\n      label: intl.formatMessage({\n        id: \"visualizations\",\n        defaultMessage: \"visualizations\",\n      }),\n    },\n  ];\n\n  const cycleList = [\n    {\n      value: \"month\",\n      label: intl.formatMessage({\n        id: \"monthly\",\n        defaultMessage: \"monthly\",\n      }),\n    },\n    {\n      value: \"year\",\n      label: intl.formatMessage({\n        id: \"yearly\",\n        defaultMessage: \"yearly\",\n      }),\n    },\n  ];\n\n  const [summary, setSummary] = useState({\n    currency: userContext.userConfig.currency,\n    cycle: \"month\",\n    razorPayCustomerId: userContext.userConfig.razorPayCustomerId,\n    razorPayPlanId: \"\",\n    invoice: [\n      {\n        id: \"price\",\n        label: intl.formatMessage({\n          id: \"price\",\n          defaultMessage: \"price\",\n        }),\n        value: 0,\n      },\n      {\n        id: \"creditAdjustment\",\n        label: intl.formatMessage({\n          id: \"creditAdjustment\",\n          defaultMessage: \"creditAdjustment\",\n        }),\n        value: 0,\n      },\n      {\n        id: \"discount\",\n        label: intl.formatMessage({\n          id: \"discount\",\n          defaultMessage: \"discount\",\n        }),\n        title: \"\",\n        value: 0,\n      },\n      {\n        id: \"tax\",\n        label: intl.formatMessage({\n          id: \"tax\",\n          defaultMessage: \"tax\",\n        }),\n        title: \"\",\n        value: 0,\n      },\n    ],\n    total: 0,\n  });\n  const total = Number(\n    summary.invoice.reduce((a, b) => a + b.value, 0).toFixed(2),\n  );\n\n  const getAvailablePlans = () => {\n    const formdata = new FormData();\n    formdata.append(\"appId\", userContext.userConfig.appId);\n    formdata.append(\"currency\", userContext.userConfig.currency);\n    return apiInstance.post(\"/payments/availableBillingPlans\", formdata);\n  };\n\n  const getDiscounts = () => {\n    const formdata = new FormData();\n    formdata.append(\"razorPayCustomerId\", summary.razorPayCustomerId);\n    return apiInstance.post(\"/payments/checkDiscounts\", formdata);\n  };\n  const getTaxes = () => {\n    const formdata = new FormData();\n    formdata.append(\"country\", userContext.userConfig.country);\n    return apiInstance.get(\"/payments/checkTaxes\");\n  };\n  const getCreditAdjustments = () => {\n    const formdata = new FormData();\n    formdata.append(\n      \"razorPayCustomerId\",\n      userContext.userConfig.razorPayCustomerId,\n    );\n    formdata.append(\"razorPayPlanId\", summary.razorPayPlanId);\n    return apiInstance.post(\"/payments/deductExhaustedUsage\", formdata);\n  };\n\n  useEffect(() => {\n    myAlertContext.setConfig({\n      show: false,\n    });\n    const a = getAvailablePlans();\n\n    Promise.all([a])\n      .then(res => {\n        setTable(res[0].data.response);\n        const objArray = Object.keys(res[0].data.response[0]).sort((a, b) => {\n          return sortableProperties.indexOf(a) - sortableProperties.indexOf(b);\n        });\n        setRestTable(objArray);\n      })\n      .catch(e => console.log(e))\n      .finally(() => setLoader(false));\n\n    return () => {\n      myAlertContext.setConfig({ show: false });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      Object.keys(coupons).length > 0 &&\n      coupons?.percentOff > 0 &&\n      coupons?.name\n    ) {\n      myAlertContext.setConfig({\n        show: true,\n        className: \"alert-success border-0 text-dark\",\n        type: \"success\",\n        dismissible: true,\n        heading: <CouponHeading />,\n        content: (\n          <CouponContent\n            values={{ n: coupons?.percentOff, y: coupons?.name }}\n          />\n        ),\n      });\n    }\n  }, [coupons]);\n\n  useEffect(() => {\n    if (selectedPlan?.planId) {\n      setBillingLoader(true);\n      const a = getDiscounts();\n      const b = getTaxes();\n      const c = getCreditAdjustments();\n      Promise.all([a, b, c])\n        .then(r => {\n          // Discounts\n          const discObj = r[0].data.response;\n          const discName = discObj.name;\n          let discValue =\n            (discObj.value / 100) * selectedPlan[cycleRef[summary.cycle].prop];\n          discValue = -Number(discValue.toFixed(2));\n          // Taxes\n          const taxObj = r[1].data.response;\n          const taxName = taxObj.name;\n          let taxValue =\n            (taxObj.value / 100) * selectedPlan[cycleRef[summary.cycle].prop];\n          taxValue = Number(taxValue.toFixed(2));\n          // Credit adjustments\n          const creditObj = r[2].data.response;\n          const { adjustmentCredit } = creditObj;\n          setSummary(prev => ({\n            ...prev,\n            invoice: prev.invoice.map(\n              o => (\n                o.id === \"discount\"\n                  ? Object.assign(o, {\n                      title:\n                        discName && discObj?.value > 0\n                          ? `${discName} - ${discObj?.value}%`\n                          : null,\n                      value: discValue,\n                    })\n                  : o,\n                o.id === \"tax\"\n                  ? Object.assign(o, {\n                      title: taxName,\n                      value: taxValue,\n                    })\n                  : o,\n                o.id === \"creditAdjustment\"\n                  ? Object.assign(o, {\n                      value: adjustmentCredit,\n                    })\n                  : o\n              ),\n            ),\n          }));\n        })\n        .catch(e => console.log(e))\n        .finally(() => setBillingLoader(false));\n    }\n  }, [selectedPlan.planId, summary.cycle]);\n\n  const Price = ({\n    planPriceMonthly,\n    planPriceYearly,\n    isPlanOptable,\n    planPriceCurrencySymbol,\n  }) => {\n    return (\n      <div\n        style={!isPlanOptable ? { textDecoration: \"line-through\" } : {}}\n        className='d-flex align-items-center justify-content-center text-center'\n      >\n        <div className='pe-2'>\n          <CurrencyPrice\n            amount={planPriceMonthly}\n            suffix={` / ${intl.formatMessage({\n              id: \"month\",\n              defaultMessage: \"month\",\n            })}`}\n            symbol={planPriceCurrencySymbol}\n          />\n        </div>\n        <div className='w-50'>\n          <CurrencyPrice\n            amount={planPriceYearly}\n            suffix={` / ${intl.formatMessage({\n              id: \"year\",\n              defaultMessage: \"year\",\n            })}`}\n            symbol={planPriceCurrencySymbol}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const Description = ({ planTitle, planDescription }) => (\n    <div className='text-center py-2'>\n      <div className='fs-4'>\n        <FormattedMessage id={planTitle} defaultMessage={planTitle} />\n      </div>\n      <div style={{ fontSize: \"0.75rem\" }}>\n        <FormattedMessage\n          id={planDescription}\n          defaultMessage={planDescription}\n        />\n      </div>\n    </div>\n  );\n\n  const Head = ({ planName, planCode, isPlanOptable }) => (\n    <div className='bni-bg rounded-top text-dark px-2 py-1 d-flex align-items-center justify-content-between'>\n      <div style={!isPlanOptable ? { textDecoration: \"line-through\" } : {}}>\n        {selectedPlan.planCode === planCode && (\n          <i className='fa fa-check-circle pe-1' />\n        )}\n        <span>\n          <FormattedMessage id={planName} defaultMessage={planName} />\n        </span>\n        {!isPlanOptable && (\n          <OverlayTrigger\n            placement='right'\n            delay={{ show: 250, hide: 400 }}\n            overlay={renderTooltip(\n              props,\n              intl.formatMessage({\n                id: \"maximumQuotaExceeded\",\n                defaultMessage: \"maximumQuotaExceeded\",\n              }),\n            )}\n            triggerType='hover'\n          >\n            <i className='fa fa-info-circle ps-1 cursor-pointer' />\n          </OverlayTrigger>\n        )}\n      </div>\n      {userContext.userConfig.planCode === planCode && (\n        <div>\n          <span className='badge rounded-pill bg-dark'>\n            <FormattedMessage id='currentPlan' defaultMessage='currentPlan' />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderTooltip = (props, content) => (\n    <Tooltip id={`button-tooltip-${Math.random()}`} className='in show'>\n      {content}\n    </Tooltip>\n  );\n\n  const DynamicRender = ({ obj, t }) => {\n    const row = propertyTypes.filter(f => f.key === obj);\n    const label = row[0]?.label;\n    let comp = \"\";\n    if (row[0]?.type === \"numericNull\") {\n      comp = t[obj] !== null ? t[obj] : <span className='text-success'>∞</span>;\n    } else if (row[0]?.type === \"bytesOrNull\") {\n      comp =\n        t[obj] !== null ? (\n          `${t[obj] / 1024 / 1024} MB`\n        ) : (\n          <span className='text-success'>∞</span>\n        );\n    } else if (row[0]?.type === \"boolean\") {\n      comp = t[obj] ? (\n        <i className='fa fa-check text-success' />\n      ) : (\n        <i className='fa fa-times text-danger' />\n      );\n    } else {\n      comp = t[obj];\n    }\n    return (\n      <div className='d-flex align-items-center justify-content-between pb-1'>\n        <div>{label}</div>\n        <div>{comp}</div>\n      </div>\n    );\n  };\n\n  const loaderComp = () => {\n    return (\n      <div className='relativeSpinner middle'>\n        <Loader />\n      </div>\n    );\n  };\n\n  const onPlanClick = obj => {\n    setSelectedPlan(obj);\n    updateSummary(obj);\n    setTimeout(() => {\n      window.scrollTo(0, document.body.scrollHeight);\n    }, 1000);\n  };\n\n  const updateSummary = obj => {\n    if (obj.isPlanOptable) {\n      const price = table.filter(f => f.planCode === obj.planCode)[0]\n        .planPriceMonthly;\n\n      const razorPayPlanId = table.filter(f => f.planCode === obj.planCode)[0]\n        .pricingMonthId;\n\n      setSummary(prev => ({\n        ...prev,\n        razorPayPlanId,\n        cycle: cycleList[0].value,\n        invoice: prev.invoice.map(o =>\n          o.id === \"price\" ? Object.assign(o, { value: price }) : o,\n        ),\n      }));\n    }\n  };\n\n  const SubscribeButton = obj =>\n    Number(obj.planPriceMonthly) && Number(obj.planPriceYearly) ? (\n      <button\n        onClick={() => onPlanClick(obj)}\n        disabled={!obj.isPlanOptable}\n        className='w-100 btn btn-bni p-1 rounded-top-0 border-0'\n        title='Subscribe now'\n      >\n        <Price\n          {...{\n            planPriceMonthly: obj.planPriceMonthly,\n            planPriceYearly: obj.planPriceYearly,\n            isPlanOptable: obj.isPlanOptable,\n            planPriceCurrencySymbol: obj.planPriceCurrencySymbol,\n          }}\n        />\n      </button>\n    ) : (\n      <button\n        disabled={!obj.isPlanOptable}\n        className='w-100 btn btn-bni rounded-top-0 border-0 py-1'\n      >\n        <div className='py-1'>\n          <FormattedMessage id='free' defaultMessage='free' />\n        </div>\n      </button>\n    );\n\n  return (\n    <Suspense fallback={loaderComp()}>\n      <BillingContext.Provider\n        value={{\n          summary,\n          setSummary,\n          cycleList,\n          table,\n          selectedPlan,\n          cycleRef,\n          total,\n          billingLoader,\n          showSessionPopup,\n          setShowSessionPopup,\n          subscribeLoader,\n          setSubscribeLoader,\n        }}\n      >\n        {showSessionPopup && <SessionPopup />}\n        <div className='container-fluid'>\n          <div\n            className={`bg-gradient ${\n              userContext.userData.theme === \"dark\"\n                ? \"bg-dark darkBoxShadow\"\n                : \"bg-white lightBoxShadow\"\n            } mt-2 ps-3 py-2 rounded-pill mb-4`}\n          >\n            <div className='d-flex justify-content-between align-items-center'>\n              <div className='d-flex align-items-center'>\n                <i className={`fa fa-credit-card-alt fa-1x`}></i>\n                <div className='ps-2 mb-0'>\n                  <FormattedMessage id='billing' defaultMessage='billing' />\n                </div>\n              </div>\n            </div>\n          </div>\n          {loader && loaderComp()}\n          {!loader && (\n            <>\n              <div>\n                {table && table.length > 0 && (\n                  <Row className=''>\n                    {table.map((t, i) => (\n                      <Col md={6} lg={3} key={i} className='pb-3'>\n                        <div\n                          className={`rounded-3 border ${\n                            userContext.userData.theme === \"dark\"\n                              ? \"border-black\"\n                              : \"border-1\"\n                          } ${\n                            t.isPlanOptable\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          } ${\n                            selectedPlan.planCode === t.planCode\n                              ? \"animate__animated animate__headShake\"\n                              : \"\"\n                          }`}\n                          style={\n                            selectedPlan.planCode === t.planCode\n                              ? {\n                                  boxShadow: \"0 2px 10px 0 #000\",\n                                }\n                              : {}\n                          }\n                          onClick={() => t.isPlanOptable && onPlanClick(t)}\n                        >\n                          <Head {...t} />\n                          <Description {...t} />\n                          <div className='p-2'>\n                            {restTable\n                              .filter(\n                                f =>\n                                  ![\n                                    \"planId\",\n                                    \"planCode\",\n                                    \"planName\",\n                                    \"planTitle\",\n                                    \"planDescription\",\n                                    \"planIsActive\",\n                                    \"planPriceMonthly\",\n                                    \"planPriceYearly\",\n                                    \"planPriceCurrencySymbol\",\n                                    \"pricingMonthId\",\n                                    \"pricingYearId\",\n                                  ].includes(f),\n                              )\n                              .map((obj, j) => (\n                                <DynamicRender key={j} obj={obj} t={t} />\n                              ))}\n                          </div>\n                          <SubscribeButton {...t} />\n                        </div>\n                      </Col>\n                    ))}\n                  </Row>\n                )}\n              </div>\n              <Summary />\n              <hr className='mt-5' />\n              <Row>\n                <Col sm={6}>\n                  <CloseAccount />\n                </Col>\n              </Row>\n            </>\n          )}\n        </div>\n      </BillingContext.Provider>\n    </Suspense>\n  );\n};\n\nexport default Billing;\nexport { BillingContext, CurrencyPrice };\n"],"names":["Summary","lazy","CloseAccount","SessionPopup","CouponHeading","then","module","default","CouponContent","BillingContext","React","undefined","CurrencyPrice","_ref","amount","suffix","symbol","pieces","toFixed","split","_jsxs","_Fragment","children","_jsx","className","Number","toLocaleString","props","intl","useIntl","globalContext","useContext","GlobalContext","document","title","appName","formatMessage","id","defaultMessage","userContext","UserContext","myAlertContext","MyAlertContext","table","setTable","useState","loader","setLoader","billingLoader","setBillingLoader","subscribeLoader","setSubscribeLoader","selectedPlan","setSelectedPlan","restTable","setRestTable","coupons","showSessionPopup","setShowSessionPopup","cycleRef","month","prop","razorPayProp","year","sortableProperties","propertyTypes","key","type","label","cycleList","value","summary","setSummary","currency","userConfig","cycle","razorPayCustomerId","razorPayPlanId","invoice","total","reduce","a","b","useEffect","setConfig","show","getAvailablePlans","formdata","FormData","append","appId","apiInstance","post","Promise","all","res","data","response","objArray","Object","keys","sort","indexOf","catch","e","console","log","finally","length","percentOff","name","dismissible","heading","content","values","n","y","planId","getDiscounts","country","get","c","getCreditAdjustments","r","discObj","discName","discValue","taxObj","taxName","taxValue","creditObj","adjustmentCredit","prev","map","o","assign","Price","_ref2","planPriceMonthly","planPriceYearly","isPlanOptable","planPriceCurrencySymbol","style","textDecoration","Description","_ref3","planTitle","planDescription","FormattedMessage","fontSize","Head","_ref4","planName","planCode","OverlayTrigger","placement","delay","hide","overlay","renderTooltip","triggerType","Tooltip","Math","random","DynamicRender","_ref5","_row$","_row$2","_row$3","_row$4","obj","t","row","filter","f","comp","loaderComp","Loader","onPlanClick","updateSummary","setTimeout","window","scrollTo","body","scrollHeight","price","pricingMonthId","SubscribeButton","onClick","disabled","Suspense","fallback","Provider","userData","theme","Row","i","Col","md","lg","boxShadow","includes","j","sm"],"sourceRoot":""}